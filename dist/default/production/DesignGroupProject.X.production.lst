

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Tue Mar  6 17:55:56 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 10 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 10 "newmain.c"
    45  2007  FFF5               	dw 0xFFFD & 0xFFF7 ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_doDelay
    48                           	FNCALL	_main,_ADCInit
    49                           	FNCALL	_main,_ADCRead
    50                           	FNCALL	_main,___awtoft
    51                           	FNCALL	_main,___ftge
    52                           	FNCALL	_main,_searchTrack
    53                           	FNCALL	_main,_controlMotor
    54                           	FNCALL	_doDelay,_lcdCountdown
    55                           	FNCALL	_doDelay,__delay_ms
    56                           	FNCALL	_doDelay,_lcd_goto
    57                           	FNCALL	_doDelay,_lcd_puts
    58                           	FNCALL	_lcd_init,_lcd_write
    59                           	FNCALL	_lcd_init,_lcd_clear
    60                           	FNCALL	_lcdCountdown,_lcd_goto
    61                           	FNCALL	_lcdCountdown,_lcd_putch
    62                           	FNCALL	_lcd_clear,_lcd_write
    63                           	FNCALL	_lcd_putch,_lcd_write
    64                           	FNCALL	_lcd_puts,_lcd_write
    65                           	FNCALL	_lcd_goto,_lcd_write
    66                           	FNCALL	___awtoft,___ftpack
    67                           	FNCALL	_searchTrack,_controlMotor
    68                           	FNROOT	_main
    69                           	global	_count
    70                           	global	_start
    71                           	global	_stop
    72                           	global	_clock_t
    73                           	global	_lastMotor
    74                           	global	_ticks
    75                           	global	_ADCON0
    76                           psect	text425,local,class=CODE,delta=2
    77                           global __ptext425
    78  0000                     __ptext425:
    79  001F                     _ADCON0	set	31
    80                           	global	_ADRESH
    81  001E                     _ADRESH	set	30
    82                           	global	_PORTD
    83  0008                     _PORTD	set	8
    84                           	global	_ADON
    85  00F8                     _ADON	set	248
    86                           	global	_CARRY
    87  0018                     _CARRY	set	24
    88                           	global	_GIE
    89  005F                     _GIE	set	95
    90                           	global	_GO_DONE
    91  00F9                     _GO_DONE	set	249
    92                           	global	_RA1
    93  0029                     _RA1	set	41
    94                           	global	_RA2
    95  002A                     _RA2	set	42
    96                           	global	_RA3
    97  002B                     _RA3	set	43
    98                           	global	_RC0
    99  0038                     _RC0	set	56
   100                           	global	_RC1
   101  0039                     _RC1	set	57
   102                           	global	_RC3
   103  003B                     _RC3	set	59
   104                           	global	_RC4
   105  003C                     _RC4	set	60
   106                           	global	_ADCON1
   107  009F                     _ADCON1	set	159
   108                           	global	_ADRESL
   109  009E                     _ADRESL	set	158
   110                           	global	_TRISA
   111  0085                     _TRISA	set	133
   112                           	global	_TRISB
   113  0086                     _TRISB	set	134
   114                           	global	_TRISC
   115  0087                     _TRISC	set	135
   116                           	global	_TRISD
   117  0088                     _TRISD	set	136
   118                           	global	_TRISE
   119  0089                     _TRISE	set	137
   120                           	global	_TRISE0
   121  0448                     _TRISE0	set	1096
   122                           	global	_TRISE1
   123  0449                     _TRISE1	set	1097
   124                           	global	_TRISE2
   125  044A                     _TRISE2	set	1098
   126                           	global	_TRISE3
   127  044B                     _TRISE3	set	1099
   128                           	global	_EEADR
   129  010D                     _EEADR	set	269
   130                           	global	_EEDATA
   131  010C                     _EEDATA	set	268
   132                           	global	_EECON1
   133  018C                     _EECON1	set	396
   134                           	global	_EECON2
   135  018D                     _EECON2	set	397
   136                           	global	_RD
   137  0C60                     _RD	set	3168
   138                           	global	_WR
   139  0C61                     _WR	set	3169
   140                           	global	_WREN
   141  0C62                     _WREN	set	3170
   142                           psect	strings,class=STRING,delta=2
   143                           global __pstrings
   144  0003                     __pstrings:
   145                           ;	global	stringdir,stringtab,__stringbase
   146  0003                     stringtab:
   147                           ;	String table - string pointers are 1 byte each
   148  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   149  0003  3000               movlw high(stringdir)
   150  0004  008A               movwf pclath
   151  0005  0804               movf fsr,w
   152  0006  0A84               incf fsr
   153  0007  0782               	addwf pc
   154  0008                     __stringbase:
   155  0008  3400               	retlw	0
   156                           psect	strings
   157                           	
   158  0009                     STR_1:	
   159  0009  3453               	retlw	83	;'S'
   160  000A  3474               	retlw	116	;'t'
   161  000B  3461               	retlw	97	;'a'
   162  000C  3472               	retlw	114	;'r'
   163  000D  3474               	retlw	116	;'t'
   164  000E  3421               	retlw	33	;'!'
   165  000F  3400               	retlw	0
   166                           psect	strings
   167                           	file	"/tmp/cgtKnKcrN"
   168                           	line	#
   169                           psect cinit,class=CODE,delta=2
   170                           global start_initialization
   171  03C4                     start_initialization:
   172                           
   173                           psect	bssBANK0,class=BANK0,space=1
   174                           global __pbssBANK0
   175  0034                     __pbssBANK0:
   176  0034                     _count:
   177  0034                            ds      4
   178                           
   179  0038                     _start:
   180  0038                            ds      4
   181                           
   182  003C                     _stop:
   183  003C                            ds      4
   184                           
   185  0040                     _clock_t:
   186  0040                            ds      2
   187                           
   188  0042                     _lastMotor:
   189  0042                            ds      2
   190                           
   191  0044                     _ticks:
   192  0044                            ds      2
   193                           
   194                           psect clrtext,class=CODE,delta=2
   195                           global clear_ram
   196                           ;	Called with FSR containing the base address, and
   197                           ;	W with the last address+1
   198  03A5                     clear_ram:
   199  03A5  0064               	clrwdt			;clear the watchdog before getting into this loop
   200  03A6                     clrloop:
   201  03A6  0180               	clrf	indf		;clear RAM location pointed to by FSR
   202  03A7  0A84               	incf	fsr,f		;increment pointer
   203  03A8  0604               	xorwf	fsr,w		;XOR with final address
   204  03A9  1903               	btfsc	status,2	;have we reached the end yet?
   205  03AA  3400               	retlw	0		;all done for this memory range, return
   206  03AB  0604               	xorwf	fsr,w		;XOR again to restore value
   207  03AC  2BA6               	goto	clrloop		;do the next byte
   208                           
   209                           ; Clear objects allocated to BANK0
   210                           psect cinit,class=CODE,delta=2
   211  03C4  1383               	bcf	status, 7	;select IRP bank0
   212  03C5  3034               	movlw	low(__pbssBANK0)
   213  03C6  0084               	movwf	fsr
   214  03C7  3046               	movlw	low((__pbssBANK0)+012h)
   215  03C8  120A  118A  23A5   	fcall	clear_ram
              120A  118A         
   216                           psect cinit,class=CODE,delta=2
   217                           global end_of_initialization
   218                           
   219                           ;End of C runtime variable initialization code
   220                           
   221  03CD                     end_of_initialization:
   222  03CD  0183               clrf status
   223  03CE  120A  118A  2E75   ljmp _main	;jump to C main() function
   224                           psect	cstackCOMMON,class=COMMON,space=1
   225                           global __pcstackCOMMON
   226  0070                     __pcstackCOMMON:
   227                           	global	?_lcdCountdown
   228  0070                     ?_lcdCountdown:	; 0 bytes @ 0x0
   229                           	global	?_lcd_goto
   230  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   231                           	global	?_lcd_puts
   232  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   233                           	global	?_lcd_putch
   234  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   235                           	global	?_lcd_init
   236  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   237                           	global	?__delay_ms
   238  0070                     ?__delay_ms:	; 0 bytes @ 0x0
   239                           	global	?_controlMotor
   240  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   241                           	global	?_doDelay
   242  0070                     ?_doDelay:	; 0 bytes @ 0x0
   243                           	global	?_ADCInit
   244  0070                     ?_ADCInit:	; 0 bytes @ 0x0
   245                           	global	?_lcd_write
   246  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   247                           	global	??_lcd_write
   248  0070                     ??_lcd_write:	; 0 bytes @ 0x0
   249                           	global	?_lcd_clear
   250  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   251                           	global	?_searchTrack
   252  0070                     ?_searchTrack:	; 2 bytes @ 0x0
   253                           	global	?_ADCRead
   254  0070                     ?_ADCRead:	; 2 bytes @ 0x0
   255                           	global	?_main
   256  0070                     ?_main:	; 2 bytes @ 0x0
   257                           	global	?___ftpack
   258  0070                     ?___ftpack:	; 3 bytes @ 0x0
   259                           	global	__delay_ms@ms
   260  0070                     __delay_ms@ms:	; 2 bytes @ 0x0
   261                           	global	controlMotor@Leftpt
   262  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   263                           	global	ADCInit@ADC_Channel
   264  0070                     ADCInit@ADC_Channel:	; 2 bytes @ 0x0
   265                           	global	___ftpack@arg
   266  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   267  0070                     	ds	1
   268                           	global	lcd_write@c
   269  0071                     lcd_write@c:	; 1 bytes @ 0x1
   270  0071                     	ds	1
   271                           	global	??_lcd_goto
   272  0072                     ??_lcd_goto:	; 0 bytes @ 0x2
   273                           	global	??_lcd_puts
   274  0072                     ??_lcd_puts:	; 0 bytes @ 0x2
   275                           	global	??_lcd_putch
   276  0072                     ??_lcd_putch:	; 0 bytes @ 0x2
   277                           	global	??__delay_ms
   278  0072                     ??__delay_ms:	; 0 bytes @ 0x2
   279                           	global	??_ADCInit
   280  0072                     ??_ADCInit:	; 0 bytes @ 0x2
   281                           	global	??_ADCRead
   282  0072                     ??_ADCRead:	; 0 bytes @ 0x2
   283                           	global	??_lcd_clear
   284  0072                     ??_lcd_clear:	; 0 bytes @ 0x2
   285                           	global	lcd_putch@c
   286  0072                     lcd_putch@c:	; 1 bytes @ 0x2
   287                           	global	lcd_goto@pos
   288  0072                     lcd_goto@pos:	; 1 bytes @ 0x2
   289                           	global	controlMotor@Rightpt
   290  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   291  0072                     	ds	1
   292                           	global	??_lcdCountdown
   293  0073                     ??_lcdCountdown:	; 0 bytes @ 0x3
   294                           	global	__delay_ms@i
   295  0073                     __delay_ms@i:	; 1 bytes @ 0x3
   296                           	global	lcdCountdown@t
   297  0073                     lcdCountdown@t:	; 1 bytes @ 0x3
   298                           	global	lcd_puts@s
   299  0073                     lcd_puts@s:	; 1 bytes @ 0x3
   300                           	global	___ftpack@exp
   301  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   302  0073                     	ds	1
   303                           	global	??_lcd_init
   304  0074                     ??_lcd_init:	; 0 bytes @ 0x4
   305                           	global	??_controlMotor
   306  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   307                           	global	??_searchTrack
   308  0074                     ??_searchTrack:	; 0 bytes @ 0x4
   309                           	global	__delay_ms@us
   310  0074                     __delay_ms@us:	; 1 bytes @ 0x4
   311                           	global	___ftpack@sign
   312  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   313  0074                     	ds	1
   314                           	global	??___ftpack
   315  0075                     ??___ftpack:	; 0 bytes @ 0x5
   316                           	global	??_doDelay
   317  0075                     ??_doDelay:	; 0 bytes @ 0x5
   318  0075                     	ds	1
   319                           	global	ADCRead@ch
   320  0076                     ADCRead@ch:	; 1 bytes @ 0x6
   321                           	global	lcd_init@init_value
   322  0076                     lcd_init@init_value:	; 1 bytes @ 0x6
   323  0076                     	ds	2
   324                           	global	?___ftge
   325  0078                     ?___ftge:	; 1 bit 
   326                           	global	___ftge@ff1
   327  0078                     ___ftge@ff1:	; 3 bytes @ 0x8
   328  0078                     	ds	3
   329                           	global	___ftge@ff2
   330  007B                     ___ftge@ff2:	; 3 bytes @ 0xB
   331  007B                     	ds	3
   332                           psect	cstackBANK0,class=BANK0,space=1
   333                           global __pcstackBANK0
   334  0020                     __pcstackBANK0:
   335                           	global	??___ftge
   336  0020                     ??___ftge:	; 0 bytes @ 0x0
   337  0020                     	ds	6
   338                           	global	?___awtoft
   339  0026                     ?___awtoft:	; 3 bytes @ 0x6
   340                           	global	___awtoft@c
   341  0026                     ___awtoft@c:	; 2 bytes @ 0x6
   342  0026                     	ds	3
   343                           	global	??___awtoft
   344  0029                     ??___awtoft:	; 0 bytes @ 0x9
   345  0029                     	ds	2
   346                           	global	___awtoft@sign
   347  002B                     ___awtoft@sign:	; 1 bytes @ 0xB
   348  002B                     	ds	1
   349                           	global	??_main
   350  002C                     ??_main:	; 0 bytes @ 0xC
   351  002C                     	ds	2
   352                           	global	main@leftpt
   353  002E                     main@leftpt:	; 2 bytes @ 0xE
   354  002E                     	ds	2
   355                           	global	main@rightpt
   356  0030                     main@rightpt:	; 2 bytes @ 0x10
   357  0030                     	ds	2
   358                           	global	main@read
   359  0032                     main@read:	; 2 bytes @ 0x12
   360  0032                     	ds	2
   361 ;;Data sizes: Strings 7, constant 0, data 0, bss 18, persistent 0 stack 0
   362 ;;Auto spaces:   Size  Autos    Used
   363 ;; COMMON          14     14      14
   364 ;; BANK0           80     20      38
   365 ;; BANK1           80      0       0
   366 ;; BANK3           96      0       0
   367 ;; BANK2           80      0       0
   368                           
   369 ;;
   370 ;; Pointer list with targets:
   371                           
   372 ;; ?___ftpack	float  size(1) Largest target is 0
   373 ;;
   374 ;; ?___awtoft	float  size(1) Largest target is 0
   375 ;;
   376 ;; ?_ADCRead	unsigned int  size(1) Largest target is 0
   377 ;;
   378 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 7
   379 ;;		 -> STR_1(CODE[7]), 
   380 ;;
   381                           
   382                           
   383 ;;
   384 ;; Critical Paths under _main in COMMON
   385 ;;
   386 ;;   _main->___ftge
   387 ;;   _doDelay->__delay_ms
   388 ;;   _lcd_init->_lcd_clear
   389 ;;   _lcdCountdown->_lcd_goto
   390 ;;   _lcdCountdown->_lcd_putch
   391 ;;   _lcd_clear->_lcd_write
   392 ;;   _lcd_putch->_lcd_write
   393 ;;   _lcd_puts->_lcd_write
   394 ;;   _lcd_goto->_lcd_write
   395 ;;   ___awtoft->___ftge
   396 ;;   _searchTrack->_controlMotor
   397 ;;   ___ftge->___ftpack
   398 ;;
   399 ;; Critical Paths under _main in BANK0
   400 ;;
   401 ;;   _main->___awtoft
   402 ;;   ___awtoft->___ftge
   403 ;;
   404 ;; Critical Paths under _main in BANK1
   405 ;;
   406 ;;   None.
   407 ;;
   408 ;; Critical Paths under _main in BANK3
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;; Critical Paths under _main in BANK2
   413 ;;
   414 ;;   None.
   415                           
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   418 ;;
   419                           
   420 ;;
   421 ;;Call Graph Tables:
   422 ;;
   423 ;; ---------------------------------------------------------------------------------
   424 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   425 ;; ---------------------------------------------------------------------------------
   426 ;; (0) _main                                                 8     8      0    1258
   427 ;;                                             12 BANK0      8     8      0
   428 ;;                           _lcd_init
   429 ;;                            _doDelay
   430 ;;                            _ADCInit
   431 ;;                            _ADCRead
   432 ;;                           ___awtoft
   433 ;;                             ___ftge
   434 ;;                        _searchTrack
   435 ;;                       _controlMotor
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (1) _doDelay                                              0     0      0     377
   438 ;;                       _lcdCountdown
   439 ;;                          __delay_ms
   440 ;;                           _lcd_goto
   441 ;;                           _lcd_puts
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (1) _lcd_init                                             3     3      0     111
   444 ;;                                              4 COMMON     3     3      0
   445 ;;                          _lcd_write
   446 ;;                          _lcd_clear
   447 ;; ---------------------------------------------------------------------------------
   448 ;; (2) _lcdCountdown                                         1     1      0     154
   449 ;;                                              3 COMMON     1     1      0
   450 ;;                           _lcd_goto
   451 ;;                          _lcd_putch
   452 ;; ---------------------------------------------------------------------------------
   453 ;; (2) _lcd_clear                                            2     2      0      44
   454 ;;                                              2 COMMON     2     2      0
   455 ;;                          _lcd_write
   456 ;; ---------------------------------------------------------------------------------
   457 ;; (3) _lcd_putch                                            1     1      0      66
   458 ;;                                              2 COMMON     1     1      0
   459 ;;                          _lcd_write
   460 ;; ---------------------------------------------------------------------------------
   461 ;; (2) _lcd_puts                                             2     2      0      89
   462 ;;                                              2 COMMON     2     2      0
   463 ;;                          _lcd_write
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (2) _lcd_goto                                             1     1      0      66
   466 ;;                                              2 COMMON     1     1      0
   467 ;;                          _lcd_write
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (1) ___awtoft                                             6     3      3     300
   470 ;;                                              6 BANK0      6     3      3
   471 ;;                           ___ftpack
   472 ;;                             ___ftge (ARG)
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (3) _lcd_write                                            2     2      0      44
   475 ;;                                              0 COMMON     2     2      0
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (1) _searchTrack                                          0     0      0      44
   478 ;;                       _controlMotor
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (1) ___ftge                                              12     6      6     136
   481 ;;                                              8 COMMON     6     0      6
   482 ;;                                              0 BANK0      6     6      0
   483 ;;                           ___ftpack (ARG)
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (2) ___ftpack                                             8     3      5     209
   486 ;;                                              0 COMMON     8     3      5
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _ADCRead                                              7     5      2      22
   489 ;;                                              0 COMMON     7     5      2
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (1) _ADCInit                                              2     0      2      88
   492 ;;                                              0 COMMON     2     0      2
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (1) _controlMotor                                         4     0      4      44
   495 ;;                                              0 COMMON     4     0      4
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (2) __delay_ms                                            5     3      2      68
   498 ;;                                              0 COMMON     5     3      2
   499 ;; ---------------------------------------------------------------------------------
   500 ;; Estimated maximum stack depth 3
   501 ;; ---------------------------------------------------------------------------------
   502                           
   503 ;; Call Graph Graphs:
   504                           
   505 ;; _main (ROOT)
   506 ;;   _lcd_init
   507 ;;     _lcd_write
   508 ;;     _lcd_clear
   509 ;;       _lcd_write
   510 ;;   _doDelay
   511 ;;     _lcdCountdown
   512 ;;       _lcd_goto
   513 ;;         _lcd_write
   514 ;;       _lcd_putch
   515 ;;         _lcd_write
   516 ;;     __delay_ms
   517 ;;     _lcd_goto
   518 ;;       _lcd_write
   519 ;;     _lcd_puts
   520 ;;       _lcd_write
   521 ;;   _ADCInit
   522 ;;   _ADCRead
   523 ;;   ___awtoft
   524 ;;     ___ftpack
   525 ;;     ___ftge (ARG)
   526 ;;       ___ftpack (ARG)
   527 ;;   ___ftge
   528 ;;     ___ftpack (ARG)
   529 ;;   _searchTrack
   530 ;;     _controlMotor
   531 ;;   _controlMotor
   532 ;;
   533                           
   534 ;; Address spaces:
   535                           
   536 ;;Name               Size   Autos  Total    Cost      Usage
   537 ;;BITCOMMON            E      0       0       0        0.0%
   538 ;;EEDATA             100      0       0       0        0.0%
   539 ;;NULL                 0      0       0       0        0.0%
   540 ;;CODE                 0      0       0       0        0.0%
   541 ;;COMMON               E      E       E       1      100.0%
   542 ;;BITSFR0              0      0       0       1        0.0%
   543 ;;SFR0                 0      0       0       1        0.0%
   544 ;;BITSFR1              0      0       0       2        0.0%
   545 ;;SFR1                 0      0       0       2        0.0%
   546 ;;STACK                0      0       4       2        0.0%
   547 ;;BITBANK0            50      0       0       3        0.0%
   548 ;;BANK0               50     14      26       4       47.5%
   549 ;;BITSFR3              0      0       0       4        0.0%
   550 ;;SFR3                 0      0       0       4        0.0%
   551 ;;BITBANK1            50      0       0       5        0.0%
   552 ;;BITSFR2              0      0       0       5        0.0%
   553 ;;SFR2                 0      0       0       5        0.0%
   554 ;;BANK1               50      0       0       6        0.0%
   555 ;;BITBANK3            60      0       0       7        0.0%
   556 ;;BANK3               60      0       0       8        0.0%
   557 ;;BANK2               50      0       0       9        0.0%
   558 ;;ABS                  0      0      34      10        0.0%
   559 ;;BITBANK2            50      0       0      11        0.0%
   560 ;;DATA                 0      0      38      12        0.0%
   561                           
   562                           	global	_main
   563                           psect	maintext,global,class=CODE,delta=2
   564                           global __pmaintext
   565  0675                     __pmaintext:
   566                           
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 313 in file "newmain.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  read            2   18[BANK0 ] int 
   574 ;;  rightpt         2   16[BANK0 ] int 
   575 ;;  leftpt          2   14[BANK0 ] int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  2  1563[COMMON] int 
   578 ;; Registers used:
   579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 17F/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       6       0       0       0
   587 ;;      Temps:          0       2       0       0       0
   588 ;;      Totals:         0       8       0       0       0
   589 ;;Total ram usage:        8 bytes
   590 ;; Hardware stack levels required when called:    4
   591 ;; This function calls:
   592 ;;		_lcd_init
   593 ;;		_doDelay
   594 ;;		_ADCInit
   595 ;;		_ADCRead
   596 ;;		___awtoft
   597 ;;		___ftge
   598 ;;		_searchTrack
   599 ;;		_controlMotor
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           psect	maintext
   605                           	file	"newmain.c"
   606                           	line	313
   607                           	global	__size_of_main
   608  00BD                     	__size_of_main	equ	__end_of_main-_main
   609                           	
   610  0675                     _main:	
   611                           	opt	stack 4
   612                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   613                           	line	315
   614                           	
   615  0675                     l6467:	
   616                           ;newmain.c: 315: TRISA = 0x00;
   617  0675  1683               	bsf	status, 5	;RP0=1, select bank1
   618  0676  1303               	bcf	status, 6	;RP1=0, select bank1
   619  0677  0185               	clrf	(133)^080h	;volatile
   620                           	line	316
   621                           ;newmain.c: 316: TRISB = 0x00;
   622  0678  0186               	clrf	(134)^080h	;volatile
   623                           	line	317
   624                           ;newmain.c: 317: TRISC = 0x00;
   625  0679  0187               	clrf	(135)^080h	;volatile
   626                           	line	318
   627                           ;newmain.c: 318: TRISD = 0X00;
   628  067A  0188               	clrf	(136)^080h	;volatile
   629                           	line	319
   630                           ;newmain.c: 319: TRISE = 0X00;
   631  067B  0189               	clrf	(137)^080h	;volatile
   632                           	line	321
   633                           	
   634  067C                     l6469:	
   635                           ;newmain.c: 321: lcd_init();
   636  067C  120A  118A  2534   	fcall	_lcd_init
              120A  118A         
   637                           	line	324
   638                           	
   639  0681                     l6471:	
   640                           ;newmain.c: 324: doDelay();
   641  0681  120A  118A  2732   	fcall	_doDelay
              120A  118A         
   642                           	line	326
   643                           	
   644  0686                     l6473:	
   645                           ;newmain.c: 326: ADCInit (0);
   646  0686  3000               	movlw	low(0)
   647  0687  00F0               	movwf	(?_ADCInit)
   648  0688  3000               	movlw	high(0)
   649  0689  00F1               	movwf	((?_ADCInit))+1
   650  068A  120A  118A  2501   	fcall	_ADCInit
              120A  118A         
   651                           	line	327
   652                           	
   653  068F                     l6475:	
   654                           ;newmain.c: 327: ADCInit (1);
   655  068F  3001               	movlw	low(01h)
   656  0690  00F0               	movwf	(?_ADCInit)
   657  0691  3000               	movlw	high(01h)
   658  0692  00F1               	movwf	((?_ADCInit))+1
   659  0693  120A  118A  2501   	fcall	_ADCInit
              120A  118A         
   660  0698  2E99               	goto	l6477
   661                           	line	330
   662                           ;newmain.c: 328: int read, leftpt, rightpt;
   663                           ;newmain.c: 330: while (1)
   664                           	
   665  0699                     l1564:	
   666                           	line	333
   667                           	
   668  0699                     l6477:	
   669                           ;newmain.c: 331: {
   670                           ;newmain.c: 333: read = ADCRead(0);
   671  0699  3000               	movlw	(0)
   672  069A  120A  118A  24A4   	fcall	_ADCRead
              120A  118A         
   673  069F  0871               	movf	(1+(?_ADCRead)),w
   674  06A0  1283               	bcf	status, 5	;RP0=0, select bank0
   675  06A1  1303               	bcf	status, 6	;RP1=0, select bank0
   676  06A2  01B3               	clrf	(main@read+1)
   677  06A3  07B3               	addwf	(main@read+1)
   678  06A4  0870               	movf	(0+(?_ADCRead)),w
   679  06A5  01B2               	clrf	(main@read)
   680  06A6  07B2               	addwf	(main@read)
   681                           
   682                           	line	334
   683                           	
   684  06A7                     l6479:	
   685                           ;newmain.c: 334: leftpt = (read > 2.2) ? 1 : 0;
   686  06A7  30CD               	movlw	0xcd
   687  06A8  00F8               	movwf	(?___ftge)
   688  06A9  300C               	movlw	0xc
   689  06AA  00F9               	movwf	(?___ftge+1)
   690  06AB  3040               	movlw	0x40
   691  06AC  00FA               	movwf	(?___ftge+2)
   692  06AD  0833               	movf	(main@read+1),w
   693  06AE  01A7               	clrf	(?___awtoft+1)
   694  06AF  07A7               	addwf	(?___awtoft+1)
   695  06B0  0832               	movf	(main@read),w
   696  06B1  01A6               	clrf	(?___awtoft)
   697  06B2  07A6               	addwf	(?___awtoft)
   698                           
   699  06B3  120A  118A  2478   	fcall	___awtoft
              120A  118A         
   700  06B8  1283               	bcf	status, 5	;RP0=0, select bank0
   701  06B9  1303               	bcf	status, 6	;RP1=0, select bank0
   702  06BA  0826               	movf	(0+(?___awtoft)),w
   703  06BB  00FB               	movwf	0+(?___ftge)+03h
   704  06BC  0827               	movf	(1+(?___awtoft)),w
   705  06BD  00FC               	movwf	1+(?___ftge)+03h
   706  06BE  0828               	movf	(2+(?___awtoft)),w
   707  06BF  00FD               	movwf	2+(?___ftge)+03h
   708  06C0  120A  118A  258A   	fcall	___ftge
              120A  118A         
   709  06C5  3000               	movlw	0
   710  06C6  1C03               	btfss	status,0
   711  06C7  3001               	movlw	1
   712  06C8  1283               	bcf	status, 5	;RP0=0, select bank0
   713  06C9  1303               	bcf	status, 6	;RP1=0, select bank0
   714  06CA  00AC               	movwf	(??_main+0)+0
   715  06CB  01AD               	clrf	(??_main+0)+0+1
   716  06CC  082C               	movf	0+(??_main+0)+0,w
   717  06CD  00AE               	movwf	(main@leftpt)
   718  06CE  082D               	movf	1+(??_main+0)+0,w
   719  06CF  00AF               	movwf	(main@leftpt+1)
   720                           	line	337
   721                           	
   722  06D0                     l6481:	
   723                           ;newmain.c: 337: read = ADCRead(1);
   724  06D0  3001               	movlw	(01h)
   725  06D1  120A  118A  24A4   	fcall	_ADCRead
              120A  118A         
   726  06D6  0871               	movf	(1+(?_ADCRead)),w
   727  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
   728  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
   729  06D9  01B3               	clrf	(main@read+1)
   730  06DA  07B3               	addwf	(main@read+1)
   731  06DB  0870               	movf	(0+(?_ADCRead)),w
   732  06DC  01B2               	clrf	(main@read)
   733  06DD  07B2               	addwf	(main@read)
   734                           
   735                           	line	338
   736                           	
   737  06DE                     l6483:	
   738                           ;newmain.c: 338: rightpt = (read > 2.2) ? 1 : 0;
   739  06DE  30CD               	movlw	0xcd
   740  06DF  00F8               	movwf	(?___ftge)
   741  06E0  300C               	movlw	0xc
   742  06E1  00F9               	movwf	(?___ftge+1)
   743  06E2  3040               	movlw	0x40
   744  06E3  00FA               	movwf	(?___ftge+2)
   745  06E4  0833               	movf	(main@read+1),w
   746  06E5  01A7               	clrf	(?___awtoft+1)
   747  06E6  07A7               	addwf	(?___awtoft+1)
   748  06E7  0832               	movf	(main@read),w
   749  06E8  01A6               	clrf	(?___awtoft)
   750  06E9  07A6               	addwf	(?___awtoft)
   751                           
   752  06EA  120A  118A  2478   	fcall	___awtoft
              120A  118A         
   753  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
   754  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
   755  06F1  0826               	movf	(0+(?___awtoft)),w
   756  06F2  00FB               	movwf	0+(?___ftge)+03h
   757  06F3  0827               	movf	(1+(?___awtoft)),w
   758  06F4  00FC               	movwf	1+(?___ftge)+03h
   759  06F5  0828               	movf	(2+(?___awtoft)),w
   760  06F6  00FD               	movwf	2+(?___ftge)+03h
   761  06F7  120A  118A  258A   	fcall	___ftge
              120A  118A         
   762  06FC  3000               	movlw	0
   763  06FD  1C03               	btfss	status,0
   764  06FE  3001               	movlw	1
   765  06FF  1283               	bcf	status, 5	;RP0=0, select bank0
   766  0700  1303               	bcf	status, 6	;RP1=0, select bank0
   767  0701  00AC               	movwf	(??_main+0)+0
   768  0702  01AD               	clrf	(??_main+0)+0+1
   769  0703  082C               	movf	0+(??_main+0)+0,w
   770  0704  00B0               	movwf	(main@rightpt)
   771  0705  082D               	movf	1+(??_main+0)+0,w
   772  0706  00B1               	movwf	(main@rightpt+1)
   773                           	line	340
   774                           	
   775  0707                     l6485:	
   776                           ;newmain.c: 340: if((leftpt==0) && (rightpt==0))
   777  0707  082F               	movf	((main@leftpt+1)),w
   778  0708  042E               	iorwf	((main@leftpt)),w
   779  0709  1D03               	skipz
   780  070A  2F0C               	goto	u3251
   781  070B  2F0D               	goto	u3250
   782  070C                     u3251:
   783  070C  2F19               	goto	l6491
   784  070D                     u3250:
   785                           	
   786  070D                     l6487:	
   787  070D  0831               	movf	((main@rightpt+1)),w
   788  070E  0430               	iorwf	((main@rightpt)),w
   789  070F  1D03               	skipz
   790  0710  2F12               	goto	u3261
   791  0711  2F13               	goto	u3260
   792  0712                     u3261:
   793  0712  2F19               	goto	l6491
   794  0713                     u3260:
   795                           	line	342
   796                           	
   797  0713                     l6489:	
   798                           ;newmain.c: 341: {
   799                           ;newmain.c: 342: searchTrack();
   800  0713  120A  118A  24D1   	fcall	_searchTrack
              120A  118A         
   801                           	line	343
   802                           ;newmain.c: 343: }
   803  0718  2E99               	goto	l6477
   804                           	line	344
   805                           	
   806  0719                     l1565:	
   807                           	line	346
   808                           	
   809  0719                     l6491:	
   810                           ;newmain.c: 344: else
   811                           ;newmain.c: 345: {
   812                           ;newmain.c: 346: controlMotor(leftpt, rightpt);
   813  0719  1283               	bcf	status, 5	;RP0=0, select bank0
   814  071A  1303               	bcf	status, 6	;RP1=0, select bank0
   815  071B  082F               	movf	(main@leftpt+1),w
   816  071C  01F1               	clrf	(?_controlMotor+1)
   817  071D  07F1               	addwf	(?_controlMotor+1)
   818  071E  082E               	movf	(main@leftpt),w
   819  071F  01F0               	clrf	(?_controlMotor)
   820  0720  07F0               	addwf	(?_controlMotor)
   821                           
   822  0721  0831               	movf	(main@rightpt+1),w
   823  0722  01F3               	clrf	1+(?_controlMotor)+02h
   824  0723  07F3               	addwf	1+(?_controlMotor)+02h
   825  0724  0830               	movf	(main@rightpt),w
   826  0725  01F2               	clrf	0+(?_controlMotor)+02h
   827  0726  07F2               	addwf	0+(?_controlMotor)+02h
   828                           
   829  0727  120A  118A  240C   	fcall	_controlMotor
              120A  118A         
   830  072C  2E99               	goto	l6477
   831                           	line	347
   832                           	
   833  072D                     l1566:	
   834  072D  2E99               	goto	l6477
   835                           	line	348
   836                           	
   837  072E                     l1567:	
   838                           	line	330
   839  072E  2E99               	goto	l6477
   840                           	
   841  072F                     l1568:	
   842                           	line	350
   843                           	
   844  072F                     l1569:	
   845                           	global	start
   846  072F  120A  118A  2800   	ljmp	start
   847                           	opt stack 0
   848                           GLOBAL	__end_of_main
   849  0732                     	__end_of_main:
   850 ;; =============== function _main ends ============
   851                           
   852                           	signat	_main,90
   853                           	global	_doDelay
   854                           psect	text426,local,class=CODE,delta=2
   855                           global __ptext426
   856  0732                     __ptext426:
   857                           
   858 ;; *************** function _doDelay *****************
   859 ;; Defined at:
   860 ;;		line 167 in file "newmain.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    3
   881 ;; This function calls:
   882 ;;		_lcdCountdown
   883 ;;		__delay_ms
   884 ;;		_lcd_goto
   885 ;;		_lcd_puts
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           psect	text426
   891                           	file	"newmain.c"
   892                           	line	167
   893                           	global	__size_of_doDelay
   894  00CE                     	__size_of_doDelay	equ	__end_of_doDelay-_doDelay
   895                           	
   896  0732                     _doDelay:	
   897                           	opt	stack 4
   898                           ; Regs used in _doDelay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   899                           	line	168
   900                           	
   901  0732                     l6445:	
   902                           ;newmain.c: 168: RC3 = 0;
   903  0732  1283               	bcf	status, 5	;RP0=0, select bank0
   904  0733  1303               	bcf	status, 6	;RP1=0, select bank0
   905  0734  1187               	bcf	(59/8),(59)&7
   906                           	line	169
   907                           ;newmain.c: 169: RC4 = 0;
   908  0735  1207               	bcf	(60/8),(60)&7
   909                           	line	170
   910                           	
   911  0736                     l6447:	
   912                           ;newmain.c: 170: lcdCountdown('8');
   913  0736  3038               	movlw	(038h)
   914  0737  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
   915                           	line	171
   916                           ;newmain.c: 171: _delay_ms(1000);
   917  073C  30E8               	movlw	low(03E8h)
   918  073D  00F0               	movwf	(?__delay_ms)
   919  073E  3003               	movlw	high(03E8h)
   920  073F  00F1               	movwf	((?__delay_ms))+1
   921  0740  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
   922                           	line	173
   923                           ;newmain.c: 173: lcdCountdown('7');
   924  0745  3037               	movlw	(037h)
   925  0746  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
   926                           	line	174
   927                           ;newmain.c: 174: _delay_ms(1000);
   928  074B  30E8               	movlw	low(03E8h)
   929  074C  00F0               	movwf	(?__delay_ms)
   930  074D  3003               	movlw	high(03E8h)
   931  074E  00F1               	movwf	((?__delay_ms))+1
   932  074F  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
   933                           	line	176
   934                           ;newmain.c: 176: lcdCountdown('6');
   935  0754  3036               	movlw	(036h)
   936  0755  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
   937                           	line	177
   938                           ;newmain.c: 177: _delay_ms(1000);
   939  075A  30E8               	movlw	low(03E8h)
   940  075B  00F0               	movwf	(?__delay_ms)
   941  075C  3003               	movlw	high(03E8h)
   942  075D  00F1               	movwf	((?__delay_ms))+1
   943  075E  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
   944                           	line	179
   945                           ;newmain.c: 179: lcdCountdown('5');
   946  0763  3035               	movlw	(035h)
   947  0764  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
   948                           	line	180
   949                           ;newmain.c: 180: _delay_ms(1000);
   950  0769  30E8               	movlw	low(03E8h)
   951  076A  00F0               	movwf	(?__delay_ms)
   952  076B  3003               	movlw	high(03E8h)
   953  076C  00F1               	movwf	((?__delay_ms))+1
   954  076D  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
   955                           	line	182
   956                           ;newmain.c: 182: lcdCountdown('4');
   957  0772  3034               	movlw	(034h)
   958  0773  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
   959                           	line	183
   960                           ;newmain.c: 183: _delay_ms(1000);
   961  0778  30E8               	movlw	low(03E8h)
   962  0779  00F0               	movwf	(?__delay_ms)
   963  077A  3003               	movlw	high(03E8h)
   964  077B  00F1               	movwf	((?__delay_ms))+1
   965  077C  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
   966                           	line	187
   967                           ;newmain.c: 187: lcdCountdown('3');
   968  0781  3033               	movlw	(033h)
   969  0782  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
   970                           	line	188
   971                           	
   972  0787                     l6449:	
   973                           ;newmain.c: 188: RC3 = 1;
   974  0787  1283               	bcf	status, 5	;RP0=0, select bank0
   975  0788  1303               	bcf	status, 6	;RP1=0, select bank0
   976  0789  1587               	bsf	(59/8),(59)&7
   977                           	line	189
   978                           ;newmain.c: 189: _delay_ms(200);
   979  078A  30C8               	movlw	low(0C8h)
   980  078B  00F0               	movwf	(?__delay_ms)
   981  078C  3000               	movlw	high(0C8h)
   982  078D  00F1               	movwf	((?__delay_ms))+1
   983  078E  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
   984                           	line	190
   985                           	
   986  0793                     l6451:	
   987                           ;newmain.c: 190: RC3 = 0;
   988  0793  1283               	bcf	status, 5	;RP0=0, select bank0
   989  0794  1303               	bcf	status, 6	;RP1=0, select bank0
   990  0795  1187               	bcf	(59/8),(59)&7
   991                           	line	191
   992                           ;newmain.c: 191: _delay_ms(700);
   993  0796  30BC               	movlw	low(02BCh)
   994  0797  00F0               	movwf	(?__delay_ms)
   995  0798  3002               	movlw	high(02BCh)
   996  0799  00F1               	movwf	((?__delay_ms))+1
   997  079A  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
   998                           	line	193
   999                           	
  1000  079F                     l6453:	
  1001                           ;newmain.c: 193: RC3 = 1;
  1002  079F  1283               	bcf	status, 5	;RP0=0, select bank0
  1003  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1004  07A1  1587               	bsf	(59/8),(59)&7
  1005                           	line	194
  1006                           ;newmain.c: 194: _delay_ms(100);
  1007  07A2  3064               	movlw	low(064h)
  1008  07A3  00F0               	movwf	(?__delay_ms)
  1009  07A4  3000               	movlw	high(064h)
  1010  07A5  00F1               	movwf	((?__delay_ms))+1
  1011  07A6  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
  1012                           	line	195
  1013                           ;newmain.c: 195: lcdCountdown('2');
  1014  07AB  3032               	movlw	(032h)
  1015  07AC  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
  1016                           	line	196
  1017                           ;newmain.c: 196: _delay_ms(100);
  1018  07B1  3064               	movlw	low(064h)
  1019  07B2  00F0               	movwf	(?__delay_ms)
  1020  07B3  3000               	movlw	high(064h)
  1021  07B4  00F1               	movwf	((?__delay_ms))+1
  1022  07B5  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
  1023                           	line	197
  1024                           	
  1025  07BA                     l6455:	
  1026                           ;newmain.c: 197: RC3 = 0;
  1027  07BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1028  07BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1029  07BC  1187               	bcf	(59/8),(59)&7
  1030                           	line	198
  1031                           ;newmain.c: 198: _delay_ms(700);
  1032  07BD  30BC               	movlw	low(02BCh)
  1033  07BE  00F0               	movwf	(?__delay_ms)
  1034  07BF  3002               	movlw	high(02BCh)
  1035  07C0  00F1               	movwf	((?__delay_ms))+1
  1036  07C1  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
  1037                           	line	200
  1038                           	
  1039  07C6                     l6457:	
  1040                           ;newmain.c: 200: RC3 = 1;
  1041  07C6  1283               	bcf	status, 5	;RP0=0, select bank0
  1042  07C7  1303               	bcf	status, 6	;RP1=0, select bank0
  1043  07C8  1587               	bsf	(59/8),(59)&7
  1044                           	line	201
  1045                           ;newmain.c: 201: _delay_ms(200);
  1046  07C9  30C8               	movlw	low(0C8h)
  1047  07CA  00F0               	movwf	(?__delay_ms)
  1048  07CB  3000               	movlw	high(0C8h)
  1049  07CC  00F1               	movwf	((?__delay_ms))+1
  1050  07CD  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
  1051                           	line	202
  1052                           ;newmain.c: 202: lcdCountdown('1');
  1053  07D2  3031               	movlw	(031h)
  1054  07D3  120A  118A  23D1   	fcall	_lcdCountdown
              120A  118A         
  1055                           	line	203
  1056                           	
  1057  07D8                     l6459:	
  1058                           ;newmain.c: 203: RC3 = 0;
  1059  07D8  1283               	bcf	status, 5	;RP0=0, select bank0
  1060  07D9  1303               	bcf	status, 6	;RP1=0, select bank0
  1061  07DA  1187               	bcf	(59/8),(59)&7
  1062                           	line	204
  1063                           ;newmain.c: 204: _delay_ms(700);
  1064  07DB  30BC               	movlw	low(02BCh)
  1065  07DC  00F0               	movwf	(?__delay_ms)
  1066  07DD  3002               	movlw	high(02BCh)
  1067  07DE  00F1               	movwf	((?__delay_ms))+1
  1068  07DF  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
  1069                           	line	206
  1070                           	
  1071  07E4                     l6461:	
  1072                           ;newmain.c: 206: RC4 = 1;
  1073  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1074  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1075  07E6  1607               	bsf	(60/8),(60)&7
  1076                           	line	207
  1077                           ;newmain.c: 207: _delay_ms(300);
  1078  07E7  302C               	movlw	low(012Ch)
  1079  07E8  00F0               	movwf	(?__delay_ms)
  1080  07E9  3001               	movlw	high(012Ch)
  1081  07EA  00F1               	movwf	((?__delay_ms))+1
  1082  07EB  120A  118A  2452   	fcall	__delay_ms
              120A  118A         
  1083                           	line	208
  1084                           	
  1085  07F0                     l6463:	
  1086                           ;newmain.c: 208: RC4 = 0;
  1087  07F0  1283               	bcf	status, 5	;RP0=0, select bank0
  1088  07F1  1303               	bcf	status, 6	;RP1=0, select bank0
  1089  07F2  1207               	bcf	(60/8),(60)&7
  1090                           	line	210
  1091                           ;newmain.c: 210: lcd_goto(0);
  1092  07F3  3000               	movlw	(0)
  1093  07F4  120A  118A  23B8   	fcall	_lcd_goto
              120A  118A         
  1094                           	line	211
  1095                           	
  1096  07F9                     l6465:	
  1097                           ;newmain.c: 211: lcd_puts("Start!");
  1098  07F9  3001               	movlw	((STR_1-__stringbase))&0ffh
  1099  07FA  120A  118A  242E   	fcall	_lcd_puts
              120A  118A         
  1100                           	line	213
  1101                           	
  1102  07FF                     l1542:	
  1103  07FF  0008               	return
  1104                           	opt stack 0
  1105                           GLOBAL	__end_of_doDelay
  1106  0800                     	__end_of_doDelay:
  1107 ;; =============== function _doDelay ends ============
  1108                           
  1109                           	signat	_doDelay,88
  1110                           	global	_lcd_init
  1111                           psect	text427,local,class=CODE,delta=2
  1112                           global __ptext427
  1113  0534                     __ptext427:
  1114                           
  1115 ;; *************** function _lcd_init *****************
  1116 ;; Defined at:
  1117 ;;		line 93 in file "lcd.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;		None
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  init_value      1    6[COMMON] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;		None               void
  1124 ;; Registers used:
  1125 ;;		wreg, status,2, status,0, pclath, cstack
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0
  1133 ;;      Temps:          2       0       0       0       0
  1134 ;;      Totals:         3       0       0       0       0
  1135 ;;Total ram usage:        3 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    2
  1138 ;; This function calls:
  1139 ;;		_lcd_write
  1140 ;;		_lcd_clear
  1141 ;; This function is called by:
  1142 ;;		_main
  1143 ;; This function uses a non-reentrant model
  1144 ;;
  1145                           psect	text427
  1146                           	file	"lcd.c"
  1147                           	line	93
  1148                           	global	__size_of_lcd_init
  1149  0056                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1150                           	
  1151  0534                     _lcd_init:	
  1152                           	opt	stack 5
  1153                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1154                           	line	96
  1155                           	
  1156  0534                     l6409:	
  1157                           ;lcd.c: 94: char init_value;
  1158                           ;lcd.c: 96: ADCON1 = 0x06;
  1159  0534  3006               	movlw	(06h)
  1160  0535  1683               	bsf	status, 5	;RP0=1, select bank1
  1161  0536  1303               	bcf	status, 6	;RP1=0, select bank1
  1162  0537  009F               	movwf	(159)^080h	;volatile
  1163                           	line	98
  1164                           ;lcd.c: 98: init_value = 0x3;
  1165  0538  3003               	movlw	(03h)
  1166  0539  00F4               	movwf	(??_lcd_init+0)+0
  1167  053A  0874               	movf	(??_lcd_init+0)+0,w
  1168  053B  00F6               	movwf	(lcd_init@init_value)
  1169                           	line	99
  1170                           	
  1171  053C                     l6411:	
  1172                           ;lcd.c: 99: TRISA=0;
  1173  053C  0185               	clrf	(133)^080h	;volatile
  1174                           	line	100
  1175                           	
  1176  053D                     l6413:	
  1177                           ;lcd.c: 100: TRISD=0;
  1178  053D  0188               	clrf	(136)^080h	;volatile
  1179                           	line	101
  1180                           	
  1181  053E                     l6415:	
  1182                           ;lcd.c: 101: RA3 = 0;
  1183  053E  1283               	bcf	status, 5	;RP0=0, select bank0
  1184  053F  1303               	bcf	status, 6	;RP1=0, select bank0
  1185  0540  1185               	bcf	(43/8),(43)&7
  1186                           	line	102
  1187                           	
  1188  0541                     l6417:	
  1189                           ;lcd.c: 102: RA1 = 0;
  1190  0541  1085               	bcf	(41/8),(41)&7
  1191                           	line	103
  1192                           	
  1193  0542                     l6419:	
  1194                           ;lcd.c: 103: RA2 = 0;
  1195  0542  1105               	bcf	(42/8),(42)&7
  1196                           	line	105
  1197                           ;lcd.c: 105: _delay((unsigned long)((15)*(4000000/4000.0)));
  1198                           	opt asmopt_off
  1199  0543  3014               movlw	20
  1200  0544  00F5               movwf	((??_lcd_init+0)+0+1),f
  1201  0545  3079               	movlw	121
  1202  0546  00F4               movwf	((??_lcd_init+0)+0),f
  1203  0547                     u3277:
  1204  0547  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1205  0548  2D47               	goto	u3277
  1206  0549  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1207  054A  2D47               	goto	u3277
  1208  054B  2D4C               	nop2
  1209                           opt asmopt_on
  1210                           
  1211                           	line	106
  1212                           ;lcd.c: 106: PORTD = init_value;
  1213  054C  0876               	movf	(lcd_init@init_value),w
  1214  054D  1283               	bcf	status, 5	;RP0=0, select bank0
  1215  054E  1303               	bcf	status, 6	;RP1=0, select bank0
  1216  054F  0088               	movwf	(8)	;volatile
  1217                           	line	107
  1218                           	
  1219  0550                     l6421:	
  1220                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
  1221  0550  1485               	bsf	(41/8),(41)&7
  1222                           	
  1223  0551                     l6423:	
  1224  0551  1085               	bcf	(41/8),(41)&7
  1225                           	line	108
  1226                           ;lcd.c: 108: _delay((unsigned long)((5)*(4000000/4000.0)));
  1227                           	opt asmopt_off
  1228  0552  3007               movlw	7
  1229  0553  00F5               movwf	((??_lcd_init+0)+0+1),f
  1230  0554  307D               	movlw	125
  1231  0555  00F4               movwf	((??_lcd_init+0)+0),f
  1232  0556                     u3287:
  1233  0556  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1234  0557  2D56               	goto	u3287
  1235  0558  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1236  0559  2D56               	goto	u3287
  1237                           opt asmopt_on
  1238                           
  1239                           	line	109
  1240                           	
  1241  055A                     l6425:	
  1242                           ;lcd.c: 109: ((RA1 = 1),(RA1=0));
  1243  055A  1283               	bcf	status, 5	;RP0=0, select bank0
  1244  055B  1303               	bcf	status, 6	;RP1=0, select bank0
  1245  055C  1485               	bsf	(41/8),(41)&7
  1246                           	
  1247  055D                     l6427:	
  1248  055D  1085               	bcf	(41/8),(41)&7
  1249                           	line	110
  1250                           ;lcd.c: 110: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1251                           	opt asmopt_off
  1252  055E  3042               movlw	66
  1253  055F  00F4               movwf	(??_lcd_init+0)+0,f
  1254  0560                     u3297:
  1255  0560  0BF4               decfsz	(??_lcd_init+0)+0,f
  1256  0561  2D60               	goto	u3297
  1257  0562  0064               	clrwdt
  1258                           opt asmopt_on
  1259                           
  1260                           	line	111
  1261                           	
  1262  0563                     l6429:	
  1263                           ;lcd.c: 111: ((RA1 = 1),(RA1=0));
  1264  0563  1283               	bcf	status, 5	;RP0=0, select bank0
  1265  0564  1303               	bcf	status, 6	;RP1=0, select bank0
  1266  0565  1485               	bsf	(41/8),(41)&7
  1267                           	
  1268  0566                     l6431:	
  1269  0566  1085               	bcf	(41/8),(41)&7
  1270                           	line	112
  1271                           ;lcd.c: 112: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1272                           	opt asmopt_off
  1273  0567  3042               movlw	66
  1274  0568  00F4               movwf	(??_lcd_init+0)+0,f
  1275  0569                     u3307:
  1276  0569  0BF4               decfsz	(??_lcd_init+0)+0,f
  1277  056A  2D69               	goto	u3307
  1278  056B  0064               	clrwdt
  1279                           opt asmopt_on
  1280                           
  1281                           	line	113
  1282                           ;lcd.c: 113: PORTD = 2;
  1283  056C  3002               	movlw	(02h)
  1284  056D  1283               	bcf	status, 5	;RP0=0, select bank0
  1285  056E  1303               	bcf	status, 6	;RP1=0, select bank0
  1286  056F  0088               	movwf	(8)	;volatile
  1287                           	line	114
  1288                           	
  1289  0570                     l6433:	
  1290                           ;lcd.c: 114: ((RA1 = 1),(RA1=0));
  1291  0570  1485               	bsf	(41/8),(41)&7
  1292                           	
  1293  0571                     l6435:	
  1294  0571  1085               	bcf	(41/8),(41)&7
  1295                           	line	116
  1296                           	
  1297  0572                     l6437:	
  1298                           ;lcd.c: 116: lcd_write(0x28);
  1299  0572  3028               	movlw	(028h)
  1300  0573  120A  118A  23F2   	fcall	_lcd_write
              120A  118A         
  1301                           	line	117
  1302                           	
  1303  0578                     l6439:	
  1304                           ;lcd.c: 117: lcd_write(0xF);
  1305  0578  300F               	movlw	(0Fh)
  1306  0579  120A  118A  23F2   	fcall	_lcd_write
              120A  118A         
  1307                           	line	118
  1308                           	
  1309  057E                     l6441:	
  1310                           ;lcd.c: 118: lcd_clear();
  1311  057E  120A  118A  23DF   	fcall	_lcd_clear
              120A  118A         
  1312                           	line	119
  1313                           	
  1314  0583                     l6443:	
  1315                           ;lcd.c: 119: lcd_write(0x6);
  1316  0583  3006               	movlw	(06h)
  1317  0584  120A  118A  23F2   	fcall	_lcd_write
              120A  118A         
  1318                           	line	120
  1319                           	
  1320  0589                     l3080:	
  1321  0589  0008               	return
  1322                           	opt stack 0
  1323                           GLOBAL	__end_of_lcd_init
  1324  058A                     	__end_of_lcd_init:
  1325 ;; =============== function _lcd_init ends ============
  1326                           
  1327                           	signat	_lcd_init,88
  1328                           	global	_lcdCountdown
  1329                           psect	text428,local,class=CODE,delta=2
  1330                           global __ptext428
  1331  03D1                     __ptext428:
  1332                           
  1333 ;; *************** function _lcdCountdown *****************
  1334 ;; Defined at:
  1335 ;;		line 216 in file "newmain.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  t               1    wreg     unsigned char 
  1338 ;; Auto vars:     Size  Location     Type
  1339 ;;  t               1    3[COMMON] unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;		None               void
  1342 ;; Registers used:
  1343 ;;		wreg, status,2, status,0, pclath, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1349 ;;      Params:         0       0       0       0       0
  1350 ;;      Locals:         1       0       0       0       0
  1351 ;;      Temps:          0       0       0       0       0
  1352 ;;      Totals:         1       0       0       0       0
  1353 ;;Total ram usage:        1 bytes
  1354 ;; Hardware stack levels used:    1
  1355 ;; Hardware stack levels required when called:    2
  1356 ;; This function calls:
  1357 ;;		_lcd_goto
  1358 ;;		_lcd_putch
  1359 ;; This function is called by:
  1360 ;;		_doDelay
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           psect	text428
  1364                           	file	"newmain.c"
  1365                           	line	216
  1366                           	global	__size_of_lcdCountdown
  1367  000E                     	__size_of_lcdCountdown	equ	__end_of_lcdCountdown-_lcdCountdown
  1368                           	
  1369  03D1                     _lcdCountdown:	
  1370                           	opt	stack 4
  1371                           ; Regs used in _lcdCountdown: [wreg+status,2+status,0+pclath+cstack]
  1372                           ;lcdCountdown@t stored from wreg
  1373  03D1  00F3               	movwf	(lcdCountdown@t)
  1374                           	line	217
  1375                           	
  1376  03D2                     l6407:	
  1377                           ;newmain.c: 217: lcd_goto(0);
  1378  03D2  3000               	movlw	(0)
  1379  03D3  120A  118A  23B8   	fcall	_lcd_goto
              120A  118A         
  1380                           	line	218
  1381                           ;newmain.c: 218: lcd_putch(t);
  1382  03D8  0873               	movf	(lcdCountdown@t),w
  1383  03D9  120A  118A  23AD   	fcall	_lcd_putch
              120A  118A         
  1384                           	line	219
  1385                           	
  1386  03DE                     l1545:	
  1387  03DE  0008               	return
  1388                           	opt stack 0
  1389                           GLOBAL	__end_of_lcdCountdown
  1390  03DF                     	__end_of_lcdCountdown:
  1391 ;; =============== function _lcdCountdown ends ============
  1392                           
  1393                           	signat	_lcdCountdown,4216
  1394                           	global	_lcd_clear
  1395                           psect	text429,local,class=CODE,delta=2
  1396                           global __ptext429
  1397  03DF                     __ptext429:
  1398                           
  1399 ;; *************** function _lcd_clear *****************
  1400 ;; Defined at:
  1401 ;;		line 53 in file "lcd.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          2       0       0       0       0
  1418 ;;      Totals:         2       0       0       0       0
  1419 ;;Total ram usage:        2 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    1
  1422 ;; This function calls:
  1423 ;;		_lcd_write
  1424 ;; This function is called by:
  1425 ;;		_lcd_init
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           psect	text429
  1429                           	file	"lcd.c"
  1430                           	line	53
  1431                           	global	__size_of_lcd_clear
  1432  0013                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1433                           	
  1434  03DF                     _lcd_clear:	
  1435                           	opt	stack 5
  1436                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1437                           	line	54
  1438                           	
  1439  03DF                     l6401:	
  1440                           ;lcd.c: 54: RA3 = 0;
  1441  03DF  1283               	bcf	status, 5	;RP0=0, select bank0
  1442  03E0  1303               	bcf	status, 6	;RP1=0, select bank0
  1443  03E1  1185               	bcf	(43/8),(43)&7
  1444                           	line	55
  1445                           	
  1446  03E2                     l6403:	
  1447                           ;lcd.c: 55: lcd_write(0x1);
  1448  03E2  3001               	movlw	(01h)
  1449  03E3  120A  118A  23F2   	fcall	_lcd_write
              120A  118A         
  1450                           	line	56
  1451                           	
  1452  03E8                     l6405:	
  1453                           ;lcd.c: 56: _delay((unsigned long)((2)*(4000000/4000.0)));
  1454                           	opt asmopt_off
  1455  03E8  3003               movlw	3
  1456  03E9  00F3               movwf	((??_lcd_clear+0)+0+1),f
  1457  03EA  3097               	movlw	151
  1458  03EB  00F2               movwf	((??_lcd_clear+0)+0),f
  1459  03EC                     u3317:
  1460  03EC  0BF2               	decfsz	((??_lcd_clear+0)+0),f
  1461  03ED  2BEC               	goto	u3317
  1462  03EE  0BF3               	decfsz	((??_lcd_clear+0)+0+1),f
  1463  03EF  2BEC               	goto	u3317
  1464  03F0  2BF1               	nop2
  1465                           opt asmopt_on
  1466                           
  1467                           	line	57
  1468                           	
  1469  03F1                     l3065:	
  1470  03F1  0008               	return
  1471                           	opt stack 0
  1472                           GLOBAL	__end_of_lcd_clear
  1473  03F2                     	__end_of_lcd_clear:
  1474 ;; =============== function _lcd_clear ends ============
  1475                           
  1476                           	signat	_lcd_clear,88
  1477                           	global	_lcd_putch
  1478                           psect	text430,local,class=CODE,delta=2
  1479                           global __ptext430
  1480  03AD                     __ptext430:
  1481                           
  1482 ;; *************** function _lcd_putch *****************
  1483 ;; Defined at:
  1484 ;;		line 73 in file "lcd.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  c               1    wreg     unsigned char 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  c               1    2[COMMON] unsigned char 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;		None               void
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, pclath, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1498 ;;      Params:         0       0       0       0       0
  1499 ;;      Locals:         1       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0
  1501 ;;      Totals:         1       0       0       0       0
  1502 ;;Total ram usage:        1 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    1
  1505 ;; This function calls:
  1506 ;;		_lcd_write
  1507 ;; This function is called by:
  1508 ;;		_lcdCountdown
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           psect	text430
  1512                           	file	"lcd.c"
  1513                           	line	73
  1514                           	global	__size_of_lcd_putch
  1515  000B                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  1516                           	
  1517  03AD                     _lcd_putch:	
  1518                           	opt	stack 4
  1519                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1520                           ;lcd_putch@c stored from wreg
  1521  03AD  00F2               	movwf	(lcd_putch@c)
  1522                           	line	74
  1523                           	
  1524  03AE                     l6397:	
  1525                           ;lcd.c: 74: RA3 = 1;
  1526  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
  1527  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
  1528  03B0  1585               	bsf	(43/8),(43)&7
  1529                           	line	75
  1530                           	
  1531  03B1                     l6399:	
  1532                           ;lcd.c: 75: lcd_write( c );
  1533  03B1  0872               	movf	(lcd_putch@c),w
  1534  03B2  120A  118A  23F2   	fcall	_lcd_write
              120A  118A         
  1535                           	line	76
  1536                           	
  1537  03B7                     l3074:	
  1538  03B7  0008               	return
  1539                           	opt stack 0
  1540                           GLOBAL	__end_of_lcd_putch
  1541  03B8                     	__end_of_lcd_putch:
  1542 ;; =============== function _lcd_putch ends ============
  1543                           
  1544                           	signat	_lcd_putch,4216
  1545                           	global	_lcd_puts
  1546                           psect	text431,local,class=CODE,delta=2
  1547                           global __ptext431
  1548  042E                     __ptext431:
  1549                           
  1550 ;; *************** function _lcd_puts *****************
  1551 ;; Defined at:
  1552 ;;		line 63 in file "lcd.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  s               1    wreg     PTR const unsigned char 
  1555 ;;		 -> STR_1(7), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  s               1    3[COMMON] PTR const unsigned char 
  1558 ;;		 -> STR_1(7), 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;		None               void
  1561 ;; Registers used:
  1562 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1568 ;;      Params:         0       0       0       0       0
  1569 ;;      Locals:         1       0       0       0       0
  1570 ;;      Temps:          1       0       0       0       0
  1571 ;;      Totals:         2       0       0       0       0
  1572 ;;Total ram usage:        2 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    1
  1575 ;; This function calls:
  1576 ;;		_lcd_write
  1577 ;; This function is called by:
  1578 ;;		_doDelay
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           psect	text431
  1582                           	file	"lcd.c"
  1583                           	line	63
  1584                           	global	__size_of_lcd_puts
  1585  0024                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1586                           	
  1587  042E                     _lcd_puts:	
  1588                           	opt	stack 5
  1589                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1590                           ;lcd_puts@s stored from wreg
  1591  042E  00F3               	movwf	(lcd_puts@s)
  1592                           	line	64
  1593                           	
  1594  042F                     l6389:	
  1595                           ;lcd.c: 64: RA3 = 1;
  1596  042F  1283               	bcf	status, 5	;RP0=0, select bank0
  1597  0430  1303               	bcf	status, 6	;RP1=0, select bank0
  1598  0431  1585               	bsf	(43/8),(43)&7
  1599                           	line	65
  1600                           ;lcd.c: 65: while(*s)
  1601  0432  2C44               	goto	l6395
  1602                           	
  1603  0433                     l3069:	
  1604                           	line	66
  1605                           	
  1606  0433                     l6391:	
  1607                           ;lcd.c: 66: lcd_write(*s++);
  1608  0433  0873               	movf	(lcd_puts@s),w
  1609  0434  0084               	movwf	fsr0
  1610  0435  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1611  043A  120A  118A  23F2   	fcall	_lcd_write
              120A  118A         
  1612                           	
  1613  043F                     l6393:	
  1614  043F  3001               	movlw	(01h)
  1615  0440  00F2               	movwf	(??_lcd_puts+0)+0
  1616  0441  0872               	movf	(??_lcd_puts+0)+0,w
  1617  0442  07F3               	addwf	(lcd_puts@s),f
  1618  0443  2C44               	goto	l6395
  1619                           	
  1620  0444                     l3068:	
  1621                           	line	65
  1622                           	
  1623  0444                     l6395:	
  1624  0444  0873               	movf	(lcd_puts@s),w
  1625  0445  0084               	movwf	fsr0
  1626  0446  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1627  044B  3800               	iorlw	0
  1628  044C  1D03               	skipz
  1629  044D  2C4F               	goto	u3241
  1630  044E  2C50               	goto	u3240
  1631  044F                     u3241:
  1632  044F  2C33               	goto	l6391
  1633  0450                     u3240:
  1634  0450  2C51               	goto	l3071
  1635                           	
  1636  0451                     l3070:	
  1637                           	line	67
  1638                           	
  1639  0451                     l3071:	
  1640  0451  0008               	return
  1641                           	opt stack 0
  1642                           GLOBAL	__end_of_lcd_puts
  1643  0452                     	__end_of_lcd_puts:
  1644 ;; =============== function _lcd_puts ends ============
  1645                           
  1646                           	signat	_lcd_puts,4216
  1647                           	global	_lcd_goto
  1648                           psect	text432,local,class=CODE,delta=2
  1649                           global __ptext432
  1650  03B8                     __ptext432:
  1651                           
  1652 ;; *************** function _lcd_goto *****************
  1653 ;; Defined at:
  1654 ;;		line 85 in file "lcd.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  pos             1    wreg     unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  pos             1    2[COMMON] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         0       0       0       0       0
  1669 ;;      Locals:         1       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         1       0       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    1
  1675 ;; This function calls:
  1676 ;;		_lcd_write
  1677 ;; This function is called by:
  1678 ;;		_doDelay
  1679 ;;		_lcdCountdown
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           psect	text432
  1683                           	file	"lcd.c"
  1684                           	line	85
  1685                           	global	__size_of_lcd_goto
  1686  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1687                           	
  1688  03B8                     _lcd_goto:	
  1689                           	opt	stack 5
  1690                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1691                           ;lcd_goto@pos stored from wreg
  1692  03B8  00F2               	movwf	(lcd_goto@pos)
  1693                           	line	86
  1694                           	
  1695  03B9                     l6385:	
  1696                           ;lcd.c: 86: RA3 = 0;
  1697  03B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1698  03BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1699  03BB  1185               	bcf	(43/8),(43)&7
  1700                           	line	87
  1701                           	
  1702  03BC                     l6387:	
  1703                           ;lcd.c: 87: lcd_write(0x80+pos);
  1704  03BC  0872               	movf	(lcd_goto@pos),w
  1705  03BD  3E80               	addlw	080h
  1706  03BE  120A  118A  23F2   	fcall	_lcd_write
              120A  118A         
  1707                           	line	88
  1708                           	
  1709  03C3                     l3077:	
  1710  03C3  0008               	return
  1711                           	opt stack 0
  1712                           GLOBAL	__end_of_lcd_goto
  1713  03C4                     	__end_of_lcd_goto:
  1714 ;; =============== function _lcd_goto ends ============
  1715                           
  1716                           	signat	_lcd_goto,4216
  1717                           	global	___awtoft
  1718                           psect	text433,local,class=CODE,delta=2
  1719                           global __ptext433
  1720  0478                     __ptext433:
  1721                           
  1722 ;; *************** function ___awtoft *****************
  1723 ;; Defined at:
  1724 ;;		line 33 in file "/usr/hitech/picc/9.82/sources/awtoft.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;  c               2    6[BANK0 ] int 
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;  sign            1   11[BANK0 ] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  3    6[BANK0 ] float 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0, pclath, cstack
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1738 ;;      Params:         0       3       0       0       0
  1739 ;;      Locals:         0       1       0       0       0
  1740 ;;      Temps:          0       2       0       0       0
  1741 ;;      Totals:         0       6       0       0       0
  1742 ;;Total ram usage:        6 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    1
  1745 ;; This function calls:
  1746 ;;		___ftpack
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           psect	text433
  1752                           	file	"/usr/hitech/picc/9.82/sources/awtoft.c"
  1753                           	line	33
  1754                           	global	__size_of___awtoft
  1755  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  1756                           	
  1757  0478                     ___awtoft:	
  1758                           	opt	stack 6
  1759                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1760                           	line	36
  1761                           	
  1762  0478                     l6377:	
  1763  0478  1283               	bcf	status, 5	;RP0=0, select bank0
  1764  0479  1303               	bcf	status, 6	;RP1=0, select bank0
  1765  047A  01AB               	clrf	(___awtoft@sign)
  1766                           	line	37
  1767  047B  1FA7               	btfss	(___awtoft@c+1),7
  1768  047C  2C7E               	goto	u3231
  1769  047D  2C7F               	goto	u3230
  1770  047E                     u3231:
  1771  047E  2C88               	goto	l6381
  1772  047F                     u3230:
  1773                           	line	38
  1774                           	
  1775  047F                     l6379:	
  1776  047F  09A6               	comf	(___awtoft@c),f
  1777  0480  09A7               	comf	(___awtoft@c+1),f
  1778  0481  0AA6               	incf	(___awtoft@c),f
  1779  0482  1903               	skipnz
  1780  0483  0AA7               	incf	(___awtoft@c+1),f
  1781                           	line	39
  1782  0484  01AB               	clrf	(___awtoft@sign)
  1783  0485  1403               	bsf	status,0
  1784  0486  0DAB               	rlf	(___awtoft@sign),f
  1785  0487  2C88               	goto	l6381
  1786                           	line	40
  1787                           	
  1788  0488                     l4653:	
  1789                           	line	41
  1790                           	
  1791  0488                     l6381:	
  1792  0488  0826               	movf	(___awtoft@c),w
  1793  0489  00F0               	movwf	(?___ftpack)
  1794  048A  0827               	movf	(___awtoft@c+1),w
  1795  048B  00F1               	movwf	(?___ftpack+1)
  1796  048C  01F2               	clrf	(?___ftpack+2)
  1797  048D  308E               	movlw	(08Eh)
  1798  048E  00A9               	movwf	(??___awtoft+0)+0
  1799  048F  0829               	movf	(??___awtoft+0)+0,w
  1800  0490  00F3               	movwf	0+(?___ftpack)+03h
  1801  0491  082B               	movf	(___awtoft@sign),w
  1802  0492  00AA               	movwf	(??___awtoft+1)+0
  1803  0493  082A               	movf	(??___awtoft+1)+0,w
  1804  0494  00F4               	movwf	0+(?___ftpack)+04h
  1805  0495  120A  118A  25FA   	fcall	___ftpack
              120A  118A         
  1806  049A  0870               	movf	(0+(?___ftpack)),w
  1807  049B  1283               	bcf	status, 5	;RP0=0, select bank0
  1808  049C  1303               	bcf	status, 6	;RP1=0, select bank0
  1809  049D  00A6               	movwf	(?___awtoft)
  1810  049E  0871               	movf	(1+(?___ftpack)),w
  1811  049F  00A7               	movwf	(?___awtoft+1)
  1812  04A0  0872               	movf	(2+(?___ftpack)),w
  1813  04A1  00A8               	movwf	(?___awtoft+2)
  1814  04A2  2CA3               	goto	l4654
  1815                           	
  1816  04A3                     l6383:	
  1817                           	line	42
  1818                           	
  1819  04A3                     l4654:	
  1820  04A3  0008               	return
  1821                           	opt stack 0
  1822                           GLOBAL	__end_of___awtoft
  1823  04A4                     	__end_of___awtoft:
  1824 ;; =============== function ___awtoft ends ============
  1825                           
  1826                           	signat	___awtoft,4219
  1827                           	global	_lcd_write
  1828                           psect	text434,local,class=CODE,delta=2
  1829                           global __ptext434
  1830  03F2                     __ptext434:
  1831                           
  1832 ;; *************** function _lcd_write *****************
  1833 ;; Defined at:
  1834 ;;		line 39 in file "lcd.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  c               1    wreg     unsigned char 
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  c               1    1[COMMON] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;		None               void
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1848 ;;      Params:         0       0       0       0       0
  1849 ;;      Locals:         1       0       0       0       0
  1850 ;;      Temps:          1       0       0       0       0
  1851 ;;      Totals:         2       0       0       0       0
  1852 ;;Total ram usage:        2 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_lcd_clear
  1858 ;;		_lcd_puts
  1859 ;;		_lcd_putch
  1860 ;;		_lcd_goto
  1861 ;;		_lcd_init
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           psect	text434
  1865                           	file	"lcd.c"
  1866                           	line	39
  1867                           	global	__size_of_lcd_write
  1868  001A                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  1869                           	
  1870  03F2                     _lcd_write:	
  1871                           	opt	stack 5
  1872                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  1873                           ;lcd_write@c stored from wreg
  1874  03F2  00F1               	movwf	(lcd_write@c)
  1875                           	line	40
  1876                           	
  1877  03F3                     l6363:	
  1878                           ;lcd.c: 40: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1879                           	opt asmopt_off
  1880  03F3  300D               movlw	13
  1881  03F4  00F0               movwf	(??_lcd_write+0)+0,f
  1882  03F5                     u3327:
  1883  03F5  0BF0               decfsz	(??_lcd_write+0)+0,f
  1884  03F6  2BF5               	goto	u3327
  1885                           opt asmopt_on
  1886                           
  1887                           	line	41
  1888                           	
  1889  03F7                     l6365:	
  1890                           ;lcd.c: 41: PORTD = ( ( c >> 4 ) & 0x0F );
  1891  03F7  0871               	movf	(lcd_write@c),w
  1892  03F8  00F0               	movwf	(??_lcd_write+0)+0
  1893  03F9  3004               	movlw	04h
  1894  03FA                     u3225:
  1895  03FA  1003               	clrc
  1896  03FB  0CF0               	rrf	(??_lcd_write+0)+0,f
  1897  03FC  3EFF               	addlw	-1
  1898  03FD  1D03               	skipz
  1899  03FE  2BFA               	goto	u3225
  1900  03FF  0870               	movf	0+(??_lcd_write+0)+0,w
  1901  0400  390F               	andlw	0Fh
  1902  0401  1283               	bcf	status, 5	;RP0=0, select bank0
  1903  0402  1303               	bcf	status, 6	;RP1=0, select bank0
  1904  0403  0088               	movwf	(8)	;volatile
  1905                           	line	42
  1906                           	
  1907  0404                     l6367:	
  1908                           ;lcd.c: 42: ((RA1 = 1),(RA1=0));
  1909  0404  1485               	bsf	(41/8),(41)&7
  1910                           	
  1911  0405                     l6369:	
  1912  0405  1085               	bcf	(41/8),(41)&7
  1913                           	line	43
  1914                           	
  1915  0406                     l6371:	
  1916                           ;lcd.c: 43: PORTD = ( c & 0x0F );
  1917  0406  0871               	movf	(lcd_write@c),w
  1918  0407  390F               	andlw	0Fh
  1919  0408  0088               	movwf	(8)	;volatile
  1920                           	line	44
  1921                           	
  1922  0409                     l6373:	
  1923                           ;lcd.c: 44: ((RA1 = 1),(RA1=0));
  1924  0409  1485               	bsf	(41/8),(41)&7
  1925                           	
  1926  040A                     l6375:	
  1927  040A  1085               	bcf	(41/8),(41)&7
  1928                           	line	45
  1929                           	
  1930  040B                     l3062:	
  1931  040B  0008               	return
  1932                           	opt stack 0
  1933                           GLOBAL	__end_of_lcd_write
  1934  040C                     	__end_of_lcd_write:
  1935 ;; =============== function _lcd_write ends ============
  1936                           
  1937                           	signat	_lcd_write,4216
  1938                           	global	_searchTrack
  1939                           psect	text435,local,class=CODE,delta=2
  1940                           global __ptext435
  1941  04D1                     __ptext435:
  1942                           
  1943 ;; *************** function _searchTrack *****************
  1944 ;; Defined at:
  1945 ;;		line 109 in file "newmain.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  2  1529[COMMON] int 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0, pclath, cstack
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used:    1
  1965 ;; Hardware stack levels required when called:    1
  1966 ;; This function calls:
  1967 ;;		_controlMotor
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           psect	text435
  1973                           	file	"newmain.c"
  1974                           	line	109
  1975                           	global	__size_of_searchTrack
  1976  0030                     	__size_of_searchTrack	equ	__end_of_searchTrack-_searchTrack
  1977                           	
  1978  04D1                     _searchTrack:	
  1979                           	opt	stack 6
  1980                           ; Regs used in _searchTrack: [wreg+status,2+status,0+pclath+cstack]
  1981                           	line	110
  1982                           	
  1983  04D1                     l6355:	
  1984                           ;newmain.c: 110: if (lastMotor == 1)
  1985  04D1  3001               	movlw	01h
  1986  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1987  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1988  04D4  0642               	xorwf	(_lastMotor),w
  1989  04D5  0443               	iorwf	(_lastMotor+1),w
  1990  04D6  1D03               	skipz
  1991  04D7  2CD9               	goto	u3201
  1992  04D8  2CDA               	goto	u3200
  1993  04D9                     u3201:
  1994  04D9  2CE8               	goto	l6359
  1995  04DA                     u3200:
  1996                           	line	112
  1997                           	
  1998  04DA                     l6357:	
  1999                           ;newmain.c: 111: {
  2000                           ;newmain.c: 112: controlMotor(1, 0);
  2001  04DA  3001               	movlw	low(01h)
  2002  04DB  00F0               	movwf	(?_controlMotor)
  2003  04DC  3000               	movlw	high(01h)
  2004  04DD  00F1               	movwf	((?_controlMotor))+1
  2005  04DE  3000               	movlw	low(0)
  2006  04DF  00F2               	movwf	0+(?_controlMotor)+02h
  2007  04E0  3000               	movlw	high(0)
  2008  04E1  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  2009  04E2  120A  118A  240C   	fcall	_controlMotor
              120A  118A         
  2010                           	line	113
  2011                           ;newmain.c: 113: }
  2012  04E7  2D00               	goto	l1533
  2013                           	line	114
  2014                           	
  2015  04E8                     l1530:	
  2016                           	
  2017  04E8                     l6359:	
  2018                           ;newmain.c: 114: else if (lastMotor == 2)
  2019  04E8  3002               	movlw	02h
  2020  04E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2021  04EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2022  04EB  0642               	xorwf	(_lastMotor),w
  2023  04EC  0443               	iorwf	(_lastMotor+1),w
  2024  04ED  1D03               	skipz
  2025  04EE  2CF0               	goto	u3211
  2026  04EF  2CF1               	goto	u3210
  2027  04F0                     u3211:
  2028  04F0  2D00               	goto	l1533
  2029  04F1                     u3210:
  2030                           	line	116
  2031                           	
  2032  04F1                     l6361:	
  2033                           ;newmain.c: 115: {
  2034                           ;newmain.c: 116: controlMotor(0, 1);
  2035  04F1  3000               	movlw	low(0)
  2036  04F2  00F0               	movwf	(?_controlMotor)
  2037  04F3  3000               	movlw	high(0)
  2038  04F4  00F1               	movwf	((?_controlMotor))+1
  2039  04F5  3001               	movlw	low(01h)
  2040  04F6  00F2               	movwf	0+(?_controlMotor)+02h
  2041  04F7  3000               	movlw	high(01h)
  2042  04F8  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  2043  04F9  120A  118A  240C   	fcall	_controlMotor
              120A  118A         
  2044  04FE  2D00               	goto	l1533
  2045                           	line	117
  2046                           	
  2047  04FF                     l1532:	
  2048  04FF  2D00               	goto	l1533
  2049                           	line	118
  2050                           	
  2051  0500                     l1531:	
  2052                           	
  2053  0500                     l1533:	
  2054  0500  0008               	return
  2055                           	opt stack 0
  2056                           GLOBAL	__end_of_searchTrack
  2057  0501                     	__end_of_searchTrack:
  2058 ;; =============== function _searchTrack ends ============
  2059                           
  2060                           	signat	_searchTrack,90
  2061                           	global	___ftge
  2062                           psect	text436,local,class=CODE,delta=2
  2063                           global __ptext436
  2064  058A                     __ptext436:
  2065                           
  2066 ;; *************** function ___ftge *****************
  2067 ;; Defined at:
  2068 ;;		line 5 in file "/usr/hitech/picc/9.82/sources/ftge.c"
  2069 ;; Parameters:    Size  Location     Type
  2070 ;;  ff1             3    8[COMMON] float 
  2071 ;;  ff2             3   11[COMMON] float 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;		None               void
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2083 ;;      Params:         6       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0
  2085 ;;      Temps:          0       6       0       0       0
  2086 ;;      Totals:         6       6       0       0       0
  2087 ;;Total ram usage:       12 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_main
  2093 ;; This function uses a non-reentrant model
  2094 ;;
  2095                           psect	text436
  2096                           	file	"/usr/hitech/picc/9.82/sources/ftge.c"
  2097                           	line	5
  2098                           	global	__size_of___ftge
  2099  0070                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  2100                           	
  2101  058A                     ___ftge:	
  2102                           	opt	stack 7
  2103                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2104                           	line	6
  2105                           	
  2106  058A                     l6289:	
  2107  058A  1FFA               	btfss	(___ftge@ff1+2),(23)&7
  2108  058B  2D8D               	goto	u3091
  2109  058C  2D8E               	goto	u3090
  2110  058D                     u3091:
  2111  058D  2DB6               	goto	l6293
  2112  058E                     u3090:
  2113                           	line	7
  2114                           	
  2115  058E                     l6291:	
  2116  058E  3000               	movlw	0
  2117  058F  1283               	bcf	status, 5	;RP0=0, select bank0
  2118  0590  1303               	bcf	status, 6	;RP1=0, select bank0
  2119  0591  00A0               	movwf	((??___ftge+0)+0)
  2120  0592  3000               	movlw	0
  2121  0593  00A1               	movwf	((??___ftge+0)+0+1)
  2122  0594  3080               	movlw	080h
  2123  0595  00A2               	movwf	((??___ftge+0)+0+2)
  2124  0596  0978               	comf	(___ftge@ff1),w
  2125  0597  00A3               	movwf	(??___ftge+3)+0
  2126  0598  0979               	comf	(___ftge@ff1+1),w
  2127  0599  00A4               	movwf	((??___ftge+3)+0+1)
  2128  059A  097A               	comf	(___ftge@ff1+2),w
  2129  059B  00A5               	movwf	((??___ftge+3)+0+2)
  2130  059C  0AA3               	incf	(??___ftge+3)+0,f
  2131  059D  1903               	skipnz
  2132  059E  0AA4               	incf	((??___ftge+3)+0+1),f
  2133  059F  1903               	skipnz
  2134  05A0  0AA5               	incf	((??___ftge+3)+0+2),f
  2135  05A1  0823               	movf	0+(??___ftge+3)+0,w
  2136  05A2  07A0               	addwf	(??___ftge+0)+0,f
  2137  05A3  0824               	movf	1+(??___ftge+3)+0,w
  2138  05A4  1803               	skipnc
  2139  05A5  0F24               	incfsz	1+(??___ftge+3)+0,w
  2140  05A6  2DA8               	goto	u3101
  2141  05A7  2DA9               	goto	u3102
  2142  05A8                     u3101:
  2143  05A8  07A1               	addwf	(??___ftge+0)+1,f
  2144                           	
  2145  05A9                     u3102:
  2146  05A9  0825               	movf	2+(??___ftge+3)+0,w
  2147  05AA  1803               	skipnc
  2148  05AB  0F25               	incfsz	2+(??___ftge+3)+0,w
  2149  05AC  2DAE               	goto	u3103
  2150  05AD  2DAF               	goto	u3104
  2151  05AE                     u3103:
  2152  05AE  07A2               	addwf	(??___ftge+0)+2,f
  2153                           	
  2154  05AF                     u3104:
  2155  05AF  0820               	movf	0+(??___ftge+0)+0,w
  2156  05B0  00F8               	movwf	(___ftge@ff1)
  2157  05B1  0821               	movf	1+(??___ftge+0)+0,w
  2158  05B2  00F9               	movwf	(___ftge@ff1+1)
  2159  05B3  0822               	movf	2+(??___ftge+0)+0,w
  2160  05B4  00FA               	movwf	(___ftge@ff1+2)
  2161  05B5  2DB6               	goto	l6293
  2162                           	
  2163  05B6                     l4684:	
  2164                           	line	8
  2165                           	
  2166  05B6                     l6293:	
  2167  05B6  1FFD               	btfss	(___ftge@ff2+2),(23)&7
  2168  05B7  2DB9               	goto	u3111
  2169  05B8  2DBA               	goto	u3110
  2170  05B9                     u3111:
  2171  05B9  2DE2               	goto	l6297
  2172  05BA                     u3110:
  2173                           	line	9
  2174                           	
  2175  05BA                     l6295:	
  2176  05BA  3000               	movlw	0
  2177  05BB  1283               	bcf	status, 5	;RP0=0, select bank0
  2178  05BC  1303               	bcf	status, 6	;RP1=0, select bank0
  2179  05BD  00A0               	movwf	((??___ftge+0)+0)
  2180  05BE  3000               	movlw	0
  2181  05BF  00A1               	movwf	((??___ftge+0)+0+1)
  2182  05C0  3080               	movlw	080h
  2183  05C1  00A2               	movwf	((??___ftge+0)+0+2)
  2184  05C2  097B               	comf	(___ftge@ff2),w
  2185  05C3  00A3               	movwf	(??___ftge+3)+0
  2186  05C4  097C               	comf	(___ftge@ff2+1),w
  2187  05C5  00A4               	movwf	((??___ftge+3)+0+1)
  2188  05C6  097D               	comf	(___ftge@ff2+2),w
  2189  05C7  00A5               	movwf	((??___ftge+3)+0+2)
  2190  05C8  0AA3               	incf	(??___ftge+3)+0,f
  2191  05C9  1903               	skipnz
  2192  05CA  0AA4               	incf	((??___ftge+3)+0+1),f
  2193  05CB  1903               	skipnz
  2194  05CC  0AA5               	incf	((??___ftge+3)+0+2),f
  2195  05CD  0823               	movf	0+(??___ftge+3)+0,w
  2196  05CE  07A0               	addwf	(??___ftge+0)+0,f
  2197  05CF  0824               	movf	1+(??___ftge+3)+0,w
  2198  05D0  1803               	skipnc
  2199  05D1  0F24               	incfsz	1+(??___ftge+3)+0,w
  2200  05D2  2DD4               	goto	u3121
  2201  05D3  2DD5               	goto	u3122
  2202  05D4                     u3121:
  2203  05D4  07A1               	addwf	(??___ftge+0)+1,f
  2204                           	
  2205  05D5                     u3122:
  2206  05D5  0825               	movf	2+(??___ftge+3)+0,w
  2207  05D6  1803               	skipnc
  2208  05D7  0F25               	incfsz	2+(??___ftge+3)+0,w
  2209  05D8  2DDA               	goto	u3123
  2210  05D9  2DDB               	goto	u3124
  2211  05DA                     u3123:
  2212  05DA  07A2               	addwf	(??___ftge+0)+2,f
  2213                           	
  2214  05DB                     u3124:
  2215  05DB  0820               	movf	0+(??___ftge+0)+0,w
  2216  05DC  00FB               	movwf	(___ftge@ff2)
  2217  05DD  0821               	movf	1+(??___ftge+0)+0,w
  2218  05DE  00FC               	movwf	(___ftge@ff2+1)
  2219  05DF  0822               	movf	2+(??___ftge+0)+0,w
  2220  05E0  00FD               	movwf	(___ftge@ff2+2)
  2221  05E1  2DE2               	goto	l6297
  2222                           	
  2223  05E2                     l4685:	
  2224                           	line	10
  2225                           	
  2226  05E2                     l6297:	
  2227  05E2  3080               	movlw	080h
  2228  05E3  06FA               	xorwf	(___ftge@ff1+2),f
  2229                           	line	11
  2230                           	
  2231  05E4                     l6299:	
  2232  05E4  3080               	movlw	080h
  2233  05E5  06FD               	xorwf	(___ftge@ff2+2),f
  2234                           	line	12
  2235                           	
  2236  05E6                     l6301:	
  2237  05E6  087D               	movf	(___ftge@ff2+2),w
  2238  05E7  027A               	subwf	(___ftge@ff1+2),w
  2239  05E8  1D03               	skipz
  2240  05E9  2DF0               	goto	u3135
  2241  05EA  087C               	movf	(___ftge@ff2+1),w
  2242  05EB  0279               	subwf	(___ftge@ff1+1),w
  2243  05EC  1D03               	skipz
  2244  05ED  2DF0               	goto	u3135
  2245  05EE  087B               	movf	(___ftge@ff2),w
  2246  05EF  0278               	subwf	(___ftge@ff1),w
  2247  05F0                     u3135:
  2248  05F0  1803               	skipnc
  2249  05F1  2DF3               	goto	u3131
  2250  05F2  2DF4               	goto	u3130
  2251  05F3                     u3131:
  2252  05F3  2DF6               	goto	l6305
  2253  05F4                     u3130:
  2254                           	
  2255  05F4                     l6303:	
  2256  05F4  1003               	clrc
  2257                           	
  2258  05F5  2DF9               	goto	l4686
  2259                           	
  2260  05F6                     l6017:	
  2261                           	
  2262  05F6                     l6305:	
  2263  05F6  1403               	setc
  2264                           	
  2265  05F7  2DF9               	goto	l4686
  2266                           	
  2267  05F8                     l6019:	
  2268  05F8  2DF9               	goto	l4686
  2269                           	
  2270  05F9                     l6307:	
  2271                           	line	13
  2272                           	
  2273  05F9                     l4686:	
  2274  05F9  0008               	return
  2275                           	opt stack 0
  2276                           GLOBAL	__end_of___ftge
  2277  05FA                     	__end_of___ftge:
  2278 ;; =============== function ___ftge ends ============
  2279                           
  2280                           	signat	___ftge,8312
  2281                           	global	___ftpack
  2282                           psect	text437,local,class=CODE,delta=2
  2283                           global __ptext437
  2284  05FA                     __ptext437:
  2285                           
  2286 ;; *************** function ___ftpack *****************
  2287 ;; Defined at:
  2288 ;;		line 63 in file "/usr/hitech/picc/9.82/sources/float.c"
  2289 ;; Parameters:    Size  Location     Type
  2290 ;;  arg             3    0[COMMON] unsigned um
  2291 ;;  exp             1    3[COMMON] unsigned char 
  2292 ;;  sign            1    4[COMMON] unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  3    0[COMMON] float 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2304 ;;      Params:         5       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0
  2306 ;;      Temps:          3       0       0       0       0
  2307 ;;      Totals:         8       0       0       0       0
  2308 ;;Total ram usage:        8 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		___awtoft
  2314 ;;		___ftadd
  2315 ;;		___ftdiv
  2316 ;;		___ftmul
  2317 ;;		___lbtoft
  2318 ;;		___abtoft
  2319 ;;		___lwtoft
  2320 ;;		___altoft
  2321 ;;		___lltoft
  2322 ;;		___attoft
  2323 ;;		___lttoft
  2324 ;; This function uses a non-reentrant model
  2325 ;;
  2326                           psect	text437
  2327                           	file	"/usr/hitech/picc/9.82/sources/float.c"
  2328                           	line	63
  2329                           	global	__size_of___ftpack
  2330  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  2331                           	
  2332  05FA                     ___ftpack:	
  2333                           	opt	stack 6
  2334                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2335                           	line	64
  2336                           	
  2337  05FA                     l6157:	
  2338  05FA  0873               	movf	(___ftpack@exp),w
  2339  05FB  1D03               	skipz
  2340  05FC  2DFE               	goto	u2750
  2341  05FD  2E06               	goto	l6161
  2342  05FE                     u2750:
  2343                           	
  2344  05FE                     l6159:	
  2345  05FE  0872               	movf	(___ftpack@arg+2),w
  2346  05FF  0471               	iorwf	(___ftpack@arg+1),w
  2347  0600  0470               	iorwf	(___ftpack@arg),w
  2348  0601  1D03               	skipz
  2349  0602  2E04               	goto	u2761
  2350  0603  2E05               	goto	u2760
  2351  0604                     u2761:
  2352  0604  2E1C               	goto	l6167
  2353  0605                     u2760:
  2354  0605  2E06               	goto	l6161
  2355                           	
  2356  0606                     l4851:	
  2357                           	line	65
  2358                           	
  2359  0606                     l6161:	
  2360  0606  3000               	movlw	0x0
  2361  0607  00F0               	movwf	(?___ftpack)
  2362  0608  3000               	movlw	0x0
  2363  0609  00F1               	movwf	(?___ftpack+1)
  2364  060A  3000               	movlw	0x0
  2365  060B  00F2               	movwf	(?___ftpack+2)
  2366  060C  2E74               	goto	l4852
  2367                           	
  2368  060D                     l6163:	
  2369  060D  2E74               	goto	l4852
  2370                           	
  2371  060E                     l4849:	
  2372                           	line	66
  2373  060E  2E1C               	goto	l6167
  2374                           	
  2375  060F                     l4854:	
  2376                           	line	67
  2377                           	
  2378  060F                     l6165:	
  2379  060F  3001               	movlw	(01h)
  2380  0610  00F5               	movwf	(??___ftpack+0)+0
  2381  0611  0875               	movf	(??___ftpack+0)+0,w
  2382  0612  07F3               	addwf	(___ftpack@exp),f
  2383                           	line	68
  2384  0613  3001               	movlw	01h
  2385  0614                     u2775:
  2386  0614  1003               	clrc
  2387  0615  0CF2               	rrf	(___ftpack@arg+2),f
  2388  0616  0CF1               	rrf	(___ftpack@arg+1),f
  2389  0617  0CF0               	rrf	(___ftpack@arg),f
  2390  0618  3EFF               	addlw	-1
  2391  0619  1D03               	skipz
  2392  061A  2E14               	goto	u2775
  2393                           
  2394  061B  2E1C               	goto	l6167
  2395                           	line	69
  2396                           	
  2397  061C                     l4853:	
  2398                           	line	66
  2399                           	
  2400  061C                     l6167:	
  2401  061C  30FE               	movlw	low highword(0FE0000h)
  2402  061D  0572               	andwf	(___ftpack@arg+2),w
  2403  061E  1D03               	btfss	status,2
  2404  061F  2E21               	goto	u2781
  2405  0620  2E22               	goto	u2780
  2406  0621                     u2781:
  2407  0621  2E0F               	goto	l6165
  2408  0622                     u2780:
  2409  0622  2E3A               	goto	l4856
  2410                           	
  2411  0623                     l4855:	
  2412                           	line	70
  2413  0623  2E3A               	goto	l4856
  2414                           	
  2415  0624                     l4857:	
  2416                           	line	71
  2417                           	
  2418  0624                     l6169:	
  2419  0624  3001               	movlw	(01h)
  2420  0625  00F5               	movwf	(??___ftpack+0)+0
  2421  0626  0875               	movf	(??___ftpack+0)+0,w
  2422  0627  07F3               	addwf	(___ftpack@exp),f
  2423                           	line	72
  2424                           	
  2425  0628                     l6171:	
  2426  0628  3001               	movlw	01h
  2427  0629  07F0               	addwf	(___ftpack@arg),f
  2428  062A  3000               	movlw	0
  2429  062B  1803               	skipnc
  2430  062C  3001               movlw 1
  2431  062D  07F1               	addwf	(___ftpack@arg+1),f
  2432  062E  3000               	movlw	0
  2433  062F  1803               	skipnc
  2434  0630  3001               movlw 1
  2435  0631  07F2               	addwf	(___ftpack@arg+2),f
  2436                           	line	73
  2437                           	
  2438  0632                     l6173:	
  2439  0632  3001               	movlw	01h
  2440  0633                     u2795:
  2441  0633  1003               	clrc
  2442  0634  0CF2               	rrf	(___ftpack@arg+2),f
  2443  0635  0CF1               	rrf	(___ftpack@arg+1),f
  2444  0636  0CF0               	rrf	(___ftpack@arg),f
  2445  0637  3EFF               	addlw	-1
  2446  0638  1D03               	skipz
  2447  0639  2E33               	goto	u2795
  2448                           
  2449                           	line	74
  2450                           	
  2451  063A                     l4856:	
  2452                           	line	70
  2453  063A  30FF               	movlw	low highword(0FF0000h)
  2454  063B  0572               	andwf	(___ftpack@arg+2),w
  2455  063C  1D03               	btfss	status,2
  2456  063D  2E3F               	goto	u2801
  2457  063E  2E40               	goto	u2800
  2458  063F                     u2801:
  2459  063F  2E24               	goto	l6169
  2460  0640                     u2800:
  2461  0640  2E4D               	goto	l6177
  2462                           	
  2463  0641                     l4858:	
  2464                           	line	75
  2465  0641  2E4D               	goto	l6177
  2466                           	
  2467  0642                     l4860:	
  2468                           	line	76
  2469                           	
  2470  0642                     l6175:	
  2471  0642  3001               	movlw	low(01h)
  2472  0643  02F3               	subwf	(___ftpack@exp),f
  2473                           	line	77
  2474  0644  3001               	movlw	01h
  2475  0645                     u2815:
  2476  0645  1003               	clrc
  2477  0646  0DF0               	rlf	(___ftpack@arg),f
  2478  0647  0DF1               	rlf	(___ftpack@arg+1),f
  2479  0648  0DF2               	rlf	(___ftpack@arg+2),f
  2480  0649  3EFF               	addlw	-1
  2481  064A  1D03               	skipz
  2482  064B  2E45               	goto	u2815
  2483  064C  2E4D               	goto	l6177
  2484                           	line	78
  2485                           	
  2486  064D                     l4859:	
  2487                           	line	75
  2488                           	
  2489  064D                     l6177:	
  2490  064D  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  2491  064E  2E50               	goto	u2821
  2492  064F  2E51               	goto	u2820
  2493  0650                     u2821:
  2494  0650  2E42               	goto	l6175
  2495  0651                     u2820:
  2496                           	
  2497  0651                     l4861:	
  2498                           	line	79
  2499  0651  1873               	btfsc	(___ftpack@exp),(0)&7
  2500  0652  2E54               	goto	u2831
  2501  0653  2E55               	goto	u2830
  2502  0654                     u2831:
  2503  0654  2E5B               	goto	l4862
  2504  0655                     u2830:
  2505                           	line	80
  2506                           	
  2507  0655                     l6179:	
  2508  0655  30FF               	movlw	0FFh
  2509  0656  05F0               	andwf	(___ftpack@arg),f
  2510  0657  307F               	movlw	07Fh
  2511  0658  05F1               	andwf	(___ftpack@arg+1),f
  2512  0659  30FF               	movlw	0FFh
  2513  065A  05F2               	andwf	(___ftpack@arg+2),f
  2514                           	
  2515  065B                     l4862:	
  2516                           	line	81
  2517  065B  1003               	clrc
  2518  065C  0CF3               	rrf	(___ftpack@exp),f
  2519                           
  2520                           	line	82
  2521                           	
  2522  065D                     l6181:	
  2523  065D  0873               	movf	(___ftpack@exp),w
  2524  065E  00F5               	movwf	((??___ftpack+0)+0)
  2525  065F  01F6               	clrf	((??___ftpack+0)+0+1)
  2526  0660  01F7               	clrf	((??___ftpack+0)+0+2)
  2527  0661  3010               	movlw	010h
  2528  0662                     u2845:
  2529  0662  1003               	clrc
  2530  0663  0DF5               	rlf	(??___ftpack+0)+0,f
  2531  0664  0DF6               	rlf	(??___ftpack+0)+1,f
  2532  0665  0DF7               	rlf	(??___ftpack+0)+2,f
  2533  0666                     u2840:
  2534  0666  3EFF               	addlw	-1
  2535  0667  1D03               	skipz
  2536  0668  2E62               	goto	u2845
  2537  0669  0875               	movf	0+(??___ftpack+0)+0,w
  2538  066A  04F0               	iorwf	(___ftpack@arg),f
  2539  066B  0876               	movf	1+(??___ftpack+0)+0,w
  2540  066C  04F1               	iorwf	(___ftpack@arg+1),f
  2541  066D  0877               	movf	2+(??___ftpack+0)+0,w
  2542  066E  04F2               	iorwf	(___ftpack@arg+2),f
  2543                           	line	83
  2544                           	
  2545  066F                     l6183:	
  2546  066F  0874               	movf	(___ftpack@sign),w
  2547  0670  1D03               	skipz
  2548  0671  2E73               	goto	u2850
  2549  0672  2E74               	goto	l4863
  2550  0673                     u2850:
  2551                           	line	84
  2552                           	
  2553  0673                     l6185:	
  2554  0673  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  2555                           	
  2556  0674                     l4863:	
  2557                           	line	85
  2558                           	line	86
  2559                           	
  2560  0674                     l4852:	
  2561  0674  0008               	return
  2562                           	opt stack 0
  2563                           GLOBAL	__end_of___ftpack
  2564  0675                     	__end_of___ftpack:
  2565 ;; =============== function ___ftpack ends ============
  2566                           
  2567                           	signat	___ftpack,12411
  2568                           	global	_ADCRead
  2569                           psect	text438,local,class=CODE,delta=2
  2570                           global __ptext438
  2571  04A4                     __ptext438:
  2572                           
  2573 ;; *************** function _ADCRead *****************
  2574 ;; Defined at:
  2575 ;;		line 235 in file "newmain.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  ch              1    wreg     unsigned char 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  ch              1    6[COMMON] unsigned char 
  2580 ;; Return value:  Size  Location     Type
  2581 ;;                  2    0[COMMON] unsigned int 
  2582 ;; Registers used:
  2583 ;;		wreg, status,2, status,0
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2589 ;;      Params:         2       0       0       0       0
  2590 ;;      Locals:         1       0       0       0       0
  2591 ;;      Temps:          4       0       0       0       0
  2592 ;;      Totals:         7       0       0       0       0
  2593 ;;Total ram usage:        7 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; This function calls:
  2596 ;;		Nothing
  2597 ;; This function is called by:
  2598 ;;		_main
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           psect	text438
  2602                           	file	"newmain.c"
  2603                           	line	235
  2604                           	global	__size_of_ADCRead
  2605  002D                     	__size_of_ADCRead	equ	__end_of_ADCRead-_ADCRead
  2606                           	
  2607  04A4                     _ADCRead:	
  2608                           	opt	stack 7
  2609                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  2610                           ;ADCRead@ch stored from wreg
  2611  04A4  00F6               	movwf	(ADCRead@ch)
  2612                           	line	236
  2613                           	
  2614  04A5                     l6075:	
  2615                           ;newmain.c: 236: ADCON0 = 0x00;
  2616  04A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2617  04A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2618  04A7  019F               	clrf	(31)	;volatile
  2619                           	line	237
  2620                           	
  2621  04A8                     l6077:	
  2622                           ;newmain.c: 237: ADCON0 = (ch<<2);
  2623  04A8  0876               	movf	(ADCRead@ch),w
  2624  04A9  00F2               	movwf	(??_ADCRead+0)+0
  2625  04AA  3001               	movlw	(02h)-1
  2626  04AB                     u2495:
  2627  04AB  1003               	clrc
  2628  04AC  0DF2               	rlf	(??_ADCRead+0)+0,f
  2629  04AD  3EFF               	addlw	-1
  2630  04AE  1D03               	skipz
  2631  04AF  2CAB               	goto	u2495
  2632  04B0  1003               	clrc
  2633  04B1  0D72               	rlf	(??_ADCRead+0)+0,w
  2634  04B2  009F               	movwf	(31)	;volatile
  2635                           	line	239
  2636                           	
  2637  04B3                     l6079:	
  2638                           ;newmain.c: 239: ADON=1;
  2639  04B3  141F               	bsf	(248/8),(248)&7
  2640                           	line	241
  2641                           	
  2642  04B4                     l6081:	
  2643                           ;newmain.c: 241: GO_DONE=1;
  2644  04B4  149F               	bsf	(249/8),(249)&7
  2645                           	line	242
  2646                           ;newmain.c: 242: while(GO_DONE);
  2647  04B5  2CB6               	goto	l1558
  2648                           	
  2649  04B6                     l1559:	
  2650                           	
  2651  04B6                     l1558:	
  2652  04B6  189F               	btfsc	(249/8),(249)&7
  2653  04B7  2CB9               	goto	u2501
  2654  04B8  2CBA               	goto	u2500
  2655  04B9                     u2501:
  2656  04B9  2CB6               	goto	l1558
  2657  04BA                     u2500:
  2658                           	
  2659  04BA                     l1560:	
  2660                           	line	244
  2661                           ;newmain.c: 244: ADON=0;
  2662  04BA  101F               	bcf	(248/8),(248)&7
  2663                           	line	246
  2664                           	
  2665  04BB                     l6083:	
  2666                           ;newmain.c: 246: return (ADRESH<8)|ADRESL;
  2667  04BB  1683               	bsf	status, 5	;RP0=1, select bank1
  2668  04BC  1303               	bcf	status, 6	;RP1=0, select bank1
  2669  04BD  081E               	movf	(158)^080h,w	;volatile
  2670  04BE  00F2               	movwf	(??_ADCRead+0)+0
  2671  04BF  01F3               	clrf	(??_ADCRead+0)+0+1
  2672  04C0  3008               	movlw	(08h)
  2673  04C1  1283               	bcf	status, 5	;RP0=0, select bank0
  2674  04C2  1303               	bcf	status, 6	;RP1=0, select bank0
  2675  04C3  021E               	subwf	(30),w	;volatile
  2676  04C4  3000               	movlw	0
  2677  04C5  1C03               	skipc
  2678  04C6  3001               	movlw	1
  2679  04C7  00F4               	movwf	(??_ADCRead+2)+0
  2680  04C8  01F5               	clrf	(??_ADCRead+2)+0+1
  2681  04C9  0872               	movf	0+(??_ADCRead+0)+0,w
  2682  04CA  0474               	iorwf	0+(??_ADCRead+2)+0,w
  2683  04CB  00F0               	movwf	(?_ADCRead)
  2684  04CC  0873               	movf	1+(??_ADCRead+0)+0,w
  2685  04CD  0475               	iorwf	1+(??_ADCRead+2)+0,w
  2686  04CE  00F1               	movwf	1+(?_ADCRead)
  2687  04CF  2CD0               	goto	l1561
  2688                           	
  2689  04D0                     l6085:	
  2690                           	line	248
  2691                           	
  2692  04D0                     l1561:	
  2693  04D0  0008               	return
  2694                           	opt stack 0
  2695                           GLOBAL	__end_of_ADCRead
  2696  04D1                     	__end_of_ADCRead:
  2697 ;; =============== function _ADCRead ends ============
  2698                           
  2699                           	signat	_ADCRead,4218
  2700                           	global	_ADCInit
  2701                           psect	text439,local,class=CODE,delta=2
  2702                           global __ptext439
  2703  0501                     __ptext439:
  2704                           
  2705 ;; *************** function _ADCInit *****************
  2706 ;; Defined at:
  2707 ;;		line 224 in file "newmain.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  ADC_Channel     2    0[COMMON] int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;		None
  2712 ;; Return value:  Size  Location     Type
  2713 ;;		None               void
  2714 ;; Registers used:
  2715 ;;		wreg, status,2, status,0
  2716 ;; Tracked objects:
  2717 ;;		On entry : 0/0
  2718 ;;		On exit  : 0/0
  2719 ;;		Unchanged: 0/0
  2720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2721 ;;      Params:         2       0       0       0       0
  2722 ;;      Locals:         0       0       0       0       0
  2723 ;;      Temps:          0       0       0       0       0
  2724 ;;      Totals:         2       0       0       0       0
  2725 ;;Total ram usage:        2 bytes
  2726 ;; Hardware stack levels used:    1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           psect	text439
  2734                           	file	"newmain.c"
  2735                           	line	224
  2736                           	global	__size_of_ADCInit
  2737  0033                     	__size_of_ADCInit	equ	__end_of_ADCInit-_ADCInit
  2738                           	
  2739  0501                     _ADCInit:	
  2740                           	opt	stack 7
  2741                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  2742                           	line	225
  2743                           	
  2744  0501                     l6057:	
  2745                           ;newmain.c: 225: if (ADC_Channel == 0) TRISE0 = 1;
  2746  0501  0871               	movf	((ADCInit@ADC_Channel+1)),w
  2747  0502  0470               	iorwf	((ADCInit@ADC_Channel)),w
  2748  0503  1D03               	skipz
  2749  0504  2D06               	goto	u2451
  2750  0505  2D07               	goto	u2450
  2751  0506                     u2451:
  2752  0506  2D0B               	goto	l6061
  2753  0507                     u2450:
  2754                           	
  2755  0507                     l6059:	
  2756  0507  1683               	bsf	status, 5	;RP0=1, select bank1
  2757  0508  1303               	bcf	status, 6	;RP1=0, select bank1
  2758  0509  1409               	bsf	(1096/8)^080h,(1096)&7
  2759  050A  2D2F               	goto	l6073
  2760                           	line	226
  2761                           	
  2762  050B                     l1548:	
  2763                           	
  2764  050B                     l6061:	
  2765                           ;newmain.c: 226: else if (ADC_Channel == 1) TRISE1 = 1;
  2766  050B  3001               	movlw	01h
  2767  050C  0670               	xorwf	(ADCInit@ADC_Channel),w
  2768  050D  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2769  050E  1D03               	skipz
  2770  050F  2D11               	goto	u2461
  2771  0510  2D12               	goto	u2460
  2772  0511                     u2461:
  2773  0511  2D16               	goto	l6065
  2774  0512                     u2460:
  2775                           	
  2776  0512                     l6063:	
  2777  0512  1683               	bsf	status, 5	;RP0=1, select bank1
  2778  0513  1303               	bcf	status, 6	;RP1=0, select bank1
  2779  0514  1489               	bsf	(1097/8)^080h,(1097)&7
  2780  0515  2D2F               	goto	l6073
  2781                           	line	227
  2782                           	
  2783  0516                     l1550:	
  2784                           	
  2785  0516                     l6065:	
  2786                           ;newmain.c: 227: else if (ADC_Channel == 2) TRISE2 = 1;
  2787  0516  3002               	movlw	02h
  2788  0517  0670               	xorwf	(ADCInit@ADC_Channel),w
  2789  0518  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2790  0519  1D03               	skipz
  2791  051A  2D1C               	goto	u2471
  2792  051B  2D1D               	goto	u2470
  2793  051C                     u2471:
  2794  051C  2D21               	goto	l6069
  2795  051D                     u2470:
  2796                           	
  2797  051D                     l6067:	
  2798  051D  1683               	bsf	status, 5	;RP0=1, select bank1
  2799  051E  1303               	bcf	status, 6	;RP1=0, select bank1
  2800  051F  1509               	bsf	(1098/8)^080h,(1098)&7
  2801  0520  2D2F               	goto	l6073
  2802                           	line	228
  2803                           	
  2804  0521                     l1552:	
  2805                           	
  2806  0521                     l6069:	
  2807                           ;newmain.c: 228: else if (ADC_Channel == 3) TRISE3 = 1;
  2808  0521  3003               	movlw	03h
  2809  0522  0670               	xorwf	(ADCInit@ADC_Channel),w
  2810  0523  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2811  0524  1D03               	skipz
  2812  0525  2D27               	goto	u2481
  2813  0526  2D28               	goto	u2480
  2814  0527                     u2481:
  2815  0527  2D2F               	goto	l6073
  2816  0528                     u2480:
  2817                           	
  2818  0528                     l6071:	
  2819  0528  1683               	bsf	status, 5	;RP0=1, select bank1
  2820  0529  1303               	bcf	status, 6	;RP1=0, select bank1
  2821  052A  1589               	bsf	(1099/8)^080h,(1099)&7
  2822  052B  2D2F               	goto	l6073
  2823                           	
  2824  052C                     l1554:	
  2825  052C  2D2F               	goto	l6073
  2826                           	line	230
  2827                           	
  2828  052D                     l1553:	
  2829  052D  2D2F               	goto	l6073
  2830                           	
  2831  052E                     l1551:	
  2832  052E  2D2F               	goto	l6073
  2833                           	
  2834  052F                     l1549:	
  2835                           	
  2836  052F                     l6073:	
  2837                           ;newmain.c: 230: ADCON1 = 0b10000100;
  2838  052F  3084               	movlw	(084h)
  2839  0530  1683               	bsf	status, 5	;RP0=1, select bank1
  2840  0531  1303               	bcf	status, 6	;RP1=0, select bank1
  2841  0532  009F               	movwf	(159)^080h	;volatile
  2842                           	line	231
  2843                           	
  2844  0533                     l1555:	
  2845  0533  0008               	return
  2846                           	opt stack 0
  2847                           GLOBAL	__end_of_ADCInit
  2848  0534                     	__end_of_ADCInit:
  2849 ;; =============== function _ADCInit ends ============
  2850                           
  2851                           	signat	_ADCInit,4216
  2852                           	global	_controlMotor
  2853                           psect	text440,local,class=CODE,delta=2
  2854                           global __ptext440
  2855  040C                     __ptext440:
  2856                           
  2857 ;; *************** function _controlMotor *****************
  2858 ;; Defined at:
  2859 ;;		line 73 in file "newmain.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  Leftpt          2    0[COMMON] int 
  2862 ;;  Rightpt         2    2[COMMON] int 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;		None               void
  2867 ;; Registers used:
  2868 ;;		wreg
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2874 ;;      Params:         4       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0
  2877 ;;      Totals:         4       0       0       0       0
  2878 ;;Total ram usage:        4 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_searchTrack
  2884 ;;		_main
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           psect	text440
  2888                           	file	"newmain.c"
  2889                           	line	73
  2890                           	global	__size_of_controlMotor
  2891  0022                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
  2892                           	
  2893  040C                     _controlMotor:	
  2894                           	opt	stack 7
  2895                           ; Regs used in _controlMotor: [wreg]
  2896                           	line	74
  2897                           	
  2898  040C                     l6029:	
  2899                           ;newmain.c: 74: if (Leftpt == 1)
  2900  040C  3001               	movlw	01h
  2901  040D  0670               	xorwf	(controlMotor@Leftpt),w
  2902  040E  0471               	iorwf	(controlMotor@Leftpt+1),w
  2903  040F  1D03               	skipz
  2904  0410  2C12               	goto	u2431
  2905  0411  2C13               	goto	u2430
  2906  0412                     u2431:
  2907  0412  2C17               	goto	l1523
  2908  0413                     u2430:
  2909                           	line	78
  2910                           	
  2911  0413                     l6031:	
  2912                           ;newmain.c: 75: {
  2913                           ;newmain.c: 78: RC0 = 1;
  2914  0413  1283               	bcf	status, 5	;RP0=0, select bank0
  2915  0414  1303               	bcf	status, 6	;RP1=0, select bank0
  2916  0415  1407               	bsf	(56/8),(56)&7
  2917                           	line	79
  2918                           ;newmain.c: 79: }
  2919  0416  2C1E               	goto	l1524
  2920                           	line	80
  2921                           	
  2922  0417                     l1523:	
  2923                           	line	84
  2924                           ;newmain.c: 80: else
  2925                           ;newmain.c: 81: {
  2926                           ;newmain.c: 84: RC0 = 0;
  2927  0417  1283               	bcf	status, 5	;RP0=0, select bank0
  2928  0418  1303               	bcf	status, 6	;RP1=0, select bank0
  2929  0419  1007               	bcf	(56/8),(56)&7
  2930                           	line	85
  2931                           	
  2932  041A                     l6033:	
  2933                           ;newmain.c: 85: lastMotor = 1;
  2934  041A  3001               	movlw	low(01h)
  2935  041B  00C2               	movwf	(_lastMotor)
  2936  041C  3000               	movlw	high(01h)
  2937  041D  00C3               	movwf	((_lastMotor))+1
  2938                           	line	86
  2939                           	
  2940  041E                     l1524:	
  2941                           	line	89
  2942                           ;newmain.c: 86: }
  2943                           ;newmain.c: 89: if (Rightpt == 1)
  2944  041E  3001               	movlw	01h
  2945  041F  0672               	xorwf	(controlMotor@Rightpt),w
  2946  0420  0473               	iorwf	(controlMotor@Rightpt+1),w
  2947  0421  1D03               	skipz
  2948  0422  2C24               	goto	u2441
  2949  0423  2C25               	goto	u2440
  2950  0424                     u2441:
  2951  0424  2C27               	goto	l1525
  2952  0425                     u2440:
  2953                           	line	93
  2954                           	
  2955  0425                     l6035:	
  2956                           ;newmain.c: 90: {
  2957                           ;newmain.c: 93: RC1 = 1;
  2958  0425  1487               	bsf	(57/8),(57)&7
  2959                           	line	94
  2960                           ;newmain.c: 94: }
  2961  0426  2C2D               	goto	l1527
  2962                           	line	95
  2963                           	
  2964  0427                     l1525:	
  2965                           	line	98
  2966                           ;newmain.c: 95: else
  2967                           ;newmain.c: 96: {
  2968                           ;newmain.c: 98: RC1 = 0;
  2969  0427  1087               	bcf	(57/8),(57)&7
  2970                           	line	99
  2971                           	
  2972  0428                     l6037:	
  2973                           ;newmain.c: 99: lastMotor = 2;
  2974  0428  3002               	movlw	low(02h)
  2975  0429  00C2               	movwf	(_lastMotor)
  2976  042A  3000               	movlw	high(02h)
  2977  042B  00C3               	movwf	((_lastMotor))+1
  2978  042C  2C2D               	goto	l1527
  2979                           	line	100
  2980                           	
  2981  042D                     l1526:	
  2982                           	line	101
  2983                           	
  2984  042D                     l1527:	
  2985  042D  0008               	return
  2986                           	opt stack 0
  2987                           GLOBAL	__end_of_controlMotor
  2988  042E                     	__end_of_controlMotor:
  2989 ;; =============== function _controlMotor ends ============
  2990                           
  2991                           	signat	_controlMotor,8312
  2992                           	global	__delay_ms
  2993                           psect	text441,local,class=CODE,delta=2
  2994                           global __ptext441
  2995  0452                     __ptext441:
  2996                           
  2997 ;; *************** function __delay_ms *****************
  2998 ;; Defined at:
  2999 ;;		line 45 in file "newmain.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  ms              2    0[COMMON] unsigned int 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  us              1    4[COMMON] unsigned char 
  3004 ;;  i               1    3[COMMON] unsigned char 
  3005 ;; Return value:  Size  Location     Type
  3006 ;;		None               void
  3007 ;; Registers used:
  3008 ;;		wreg, status,2, status,0
  3009 ;; Tracked objects:
  3010 ;;		On entry : 0/0
  3011 ;;		On exit  : 0/0
  3012 ;;		Unchanged: 0/0
  3013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3014 ;;      Params:         2       0       0       0       0
  3015 ;;      Locals:         2       0       0       0       0
  3016 ;;      Temps:          1       0       0       0       0
  3017 ;;      Totals:         5       0       0       0       0
  3018 ;;Total ram usage:        5 bytes
  3019 ;; Hardware stack levels used:    1
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_doDelay
  3024 ;;		_controlBuzzer
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           psect	text441
  3028                           	file	"newmain.c"
  3029                           	line	45
  3030                           	global	__size_of__delay_ms
  3031  0026                     	__size_of__delay_ms	equ	__end_of__delay_ms-__delay_ms
  3032                           	
  3033  0452                     __delay_ms:	
  3034                           	opt	stack 6
  3035                           ; Regs used in __delay_ms: [wreg+status,2+status,0]
  3036                           	line	47
  3037                           ;newmain.c: 46: unsigned char i;
  3038                           ;newmain.c: 47: do
  3039                           	
  3040  0452                     l1513:	
  3041                           	line	49
  3042                           	
  3043  0452                     l6021:	
  3044                           ;newmain.c: 48: {
  3045                           ;newmain.c: 49: i = 4;
  3046  0452  3004               	movlw	(04h)
  3047  0453  00F2               	movwf	(??__delay_ms+0)+0
  3048  0454  0872               	movf	(??__delay_ms+0)+0,w
  3049  0455  00F3               	movwf	(__delay_ms@i)
  3050                           	line	50
  3051                           ;newmain.c: 50: do
  3052                           	
  3053  0456                     l1514:	
  3054                           	line	52
  3055                           ;newmain.c: 51: {
  3056                           ;newmain.c: 52: { unsigned char us; us = (250)/(12000000/1500000L)|1; while(--us != 0) c
                                 ontinue; };
  3057  0456  301F               	movlw	(01Fh)
  3058  0457  00F2               	movwf	(??__delay_ms+0)+0
  3059  0458  0872               	movf	(??__delay_ms+0)+0,w
  3060  0459  00F4               	movwf	(__delay_ms@us)
  3061  045A  2C5C               	goto	l6023
  3062                           	
  3063  045B                     l1516:	
  3064  045B  2C5C               	goto	l6023
  3065                           	
  3066  045C                     l1515:	
  3067                           	
  3068  045C                     l6023:	
  3069  045C  3001               	movlw	low(01h)
  3070  045D  02F4               	subwf	(__delay_ms@us),f
  3071  045E  1D03               	btfss	status,2
  3072  045F  2C61               	goto	u2401
  3073  0460  2C62               	goto	u2400
  3074  0461                     u2401:
  3075  0461  2C5C               	goto	l6023
  3076  0462                     u2400:
  3077  0462  2C63               	goto	l6025
  3078                           	
  3079  0463                     l1517:	
  3080                           	line	53
  3081                           	
  3082  0463                     l6025:	
  3083                           ;newmain.c: 53: } while(--i);
  3084  0463  3001               	movlw	low(01h)
  3085  0464  02F3               	subwf	(__delay_ms@i),f
  3086  0465  1D03               	btfss	status,2
  3087  0466  2C68               	goto	u2411
  3088  0467  2C69               	goto	u2410
  3089  0468                     u2411:
  3090  0468  2C56               	goto	l1514
  3091  0469                     u2410:
  3092  0469  2C6A               	goto	l6027
  3093                           	
  3094  046A                     l1518:	
  3095                           	line	54
  3096                           	
  3097  046A                     l6027:	
  3098                           ;newmain.c: 54: } while(--ms);
  3099  046A  3001               	movlw	low(01h)
  3100  046B  02F0               	subwf	(__delay_ms@ms),f
  3101  046C  3000               	movlw	high(01h)
  3102  046D  1C03               	skipc
  3103  046E  03F1               	decf	(__delay_ms@ms+1),f
  3104  046F  02F1               	subwf	(__delay_ms@ms+1),f
  3105  0470  0871               	movf	(((__delay_ms@ms+1))),w
  3106  0471  0470               	iorwf	(((__delay_ms@ms))),w
  3107  0472  1D03               	skipz
  3108  0473  2C75               	goto	u2421
  3109  0474  2C76               	goto	u2420
  3110  0475                     u2421:
  3111  0475  2C52               	goto	l1513
  3112  0476                     u2420:
  3113  0476  2C77               	goto	l1520
  3114                           	
  3115  0477                     l1519:	
  3116                           	line	55
  3117                           	
  3118  0477                     l1520:	
  3119  0477  0008               	return
  3120                           	opt stack 0
  3121                           GLOBAL	__end_of__delay_ms
  3122  0478                     	__end_of__delay_ms:
  3123 ;; =============== function __delay_ms ends ============
  3124                           
  3125                           	signat	__delay_ms,4216
  3126                           psect	text442,local,class=CODE,delta=2
  3127                           global __ptext442
  3128  0000                     __ptext442:
  3129                           	global	btemp
  3130  007E                     	btemp set 07Eh
  3131                           
  3132                           	DABS	1,126,2	;btemp
  3133                           	global	wtemp0
  3134  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Tue Mar  6 17:55:56 2012

                    pc 0002                     _RD 0C60                     _WR 0C61                     fsr 0004  
                  _GIE 005F                    _RA1 0029                    _RA2 002A                    _RA3 002B  
                  _RC0 0038                    _RC1 0039                    _RC3 003B                    _RC4 003C  
                  fsr0 0004        __end_of_ADCInit 0534        __end_of_ADCRead 04D1                    indf 0000  
          lcd_goto@pos 0072                   l1520 0477                   l1513 0452                   l1514 0456  
                 l1530 04E8                   l1515 045C                   l1523 0417                   l1531 0500  
                 l1516 045B                   l1524 041E                   l1532 04FF                   l1517 0463  
                 l1525 0427                   l1533 0500                   l1518 046A                   l1526 042D  
                 l1550 0516                   l3062 040B                   l3070 0451                   l1542 07FF  
                 l1519 0477                   l1527 042D                   l1551 052E                   l3071 0451  
                 l1552 0521                   l1560 04BA                   l3080 0589                   l1553 052D  
                 l1561 04D0                   l3065 03F1                   l1545 03DE                   l1554 052C  
                 l3074 03B7                   l1555 0533                   l1548 050B                   l3068 0444  
                 l1564 0699                   l1549 052F                   l3077 03C3                   l3069 0433  
                 l1565 0719                   l1558 04B6                   l1566 072D                   l1559 04B6  
                 l1567 072E                   l1568 072F                   l1569 072F                   l6021 0452  
                 l6023 045C                   l6031 0413                   l6025 0463                   l6033 041A  
                 l6017 05F6                   l6027 046A                   l6035 0425                   l6019 05F8  
                 l6037 0428                   l6029 040C                   l6061 050B                   l6301 05E6  
                 l6071 0528                   l6063 0512                   l6303 05F4                   l6065 0516  
                 l6073 052F                   l6057 0501                   l6081 04B4                   l6161 0606  
                 l6305 05F6                   l6401 03DF                   l6067 051D                   l6059 0507  
                 l6083 04BB                   l6075 04A5                   l6171 0628                   l6163 060D  
                 l6307 05F9                   l6403 03E2                   l6411 053C                   l6069 0521  
                 l6085 04D0                   l6077 04A8                   l6181 065D                   l6173 0632  
                 l6165 060F                   l6157 05FA                   l4653 0488                   l6405 03E8  
                 l6421 0550                   l6413 053D                   l4654 04A3                   l6079 04B3  
                 l6183 066F                   l6175 0642                   l6167 061C                   l6159 05FE  
                 l6407 03D2                   l6431 0566                   l6423 0551                   l6415 053E  
                 l6185 0673                   l6177 064D                   l6169 0624                   l6361 04F1  
                 l6441 057E                   l6433 0570                   l6425 055A                   l6417 0541  
                 l6409 0534                   l6179 0655                   l4851 0606                   l6291 058E  
                 l6355 04D1                   l6371 0406                   l6363 03F3                   l6443 0583  
                 l6435 0571                   l6427 055D                   l6419 0542                   l6451 0793  
                 l4860 0642                   l4852 0674                   l4684 05B6                   l4861 0651  
                 l4853 061C                   l4685 05E2                   l6293 05B6                   l6357 04DA  
                 l6373 0409                   l6365 03F7                   l6381 0488                   l6437 0572  
                 l6429 0563                   l6461 07E4                   l6453 079F                   l6445 0732  
                 l4862 065B                   l4854 060F                   l4686 05F9                   l4863 0674  
                 l4855 0623                   l6295 05BA                   l6359 04E8                   l6375 040A  
                 l6367 0404                   l6383 04A3                   l6391 0433                   l6439 0578  
                 l6463 07F0                   l6455 07BA                   l6447 0736                   l6471 0681  
                 l4856 063A                   l4857 0624                   l4849 060E                   l6297 05E2  
                 l6289 058A                   l6369 0405                   l6377 0478                   l6385 03B9  
                 l6393 043F                   l6465 07F9                   l6457 07C6                   l6449 0787  
                 l6481 06D0                   l6473 0686                   l4858 0641                   l4859 064D  
                 l6299 05E4                   l6379 047F                   l6387 03BC                   l6395 0444  
                 l6459 07D8                   l6491 0719                   l6483 06DE                   l6475 068F  
                 l6467 0675                   l6389 042F                   l6397 03AE                   l6485 0707  
                 l6477 0699                   l6469 067C                   l6399 03B1                   l6487 070D  
                 l6479 06A7                   l6489 0713                   _ADON 00F8                   STR_1 0009  
                 u3101 05A8                   u3110 05BA                   u3102 05A9                   u3111 05B9  
                 u3103 05AE                   u2400 0462                   u3104 05AF                   u3200 04DA  
                 u2401 0461                   u3121 05D4                   u3201 04D9                   u2410 0469  
                 u3130 05F4                   u3122 05D5                   u3210 04F1                   u2411 0468  
                 u3131 05F3                   u3123 05DA                   u3211 04F0                   u2420 0476  
                 u2500 04BA                   u3124 05DB                   u2421 0475                   u2501 04B9  
                 u2430 0413                   u3230 047F                   u2431 0412                   u3135 05F0  
                 u3231 047E                   u2440 0425                   u3240 0450                   u2441 0424  
                 u3225 03FA                   u3241 044F                   u2450 0507                   u3090 058E  
                 u3250 070D                   u2451 0506                   u3091 058D                   u3307 0569  
                 u3251 070C                   u2460 0512                   u3260 0713                   u2461 0511  
                 u3317 03EC                   u3261 0712                   u2470 051D                   u2471 051C  
                 u3327 03F5                   u2480 0528                   u2800 0640                   u2481 0527  
                 u2801 063F                   u2820 0651                   u2821 0650                   u3277 0547  
                 u2830 0655                   u2750 05FE                   u2495 04AB                   u2831 0654  
                 u2815 0645                   u3287 0556                   u2840 0666                   u2760 0605  
                 u2761 0604                   u3297 0560                   u2850 0673                   u2780 0622  
                 u2845 0662                   u2781 0621                   u2775 0614                   u2795 0633  
                 _WREN 0C62                   _main 0675           ___ftpack@arg 0070            main@rightpt 0030  
         ___ftpack@exp 0073                   btemp 007E                   _stop 003C                   start 0000  
        ?_controlMotor 0070                  ?_main 0070     controlMotor@Leftpt 0070                  _EEADR 010D  
                _CARRY 0018        __end_of_doDelay 0800           __delay_ms@ms 0070           __delay_ms@us 0074  
                _PORTD 0008                  _TRISA 0085                  _TRISB 0086                  _TRISC 0087  
                _TRISD 0088                  _TRISE 0089          ___awtoft@sign 002B                  _count 0034  
                _ticks 0044          ___ftpack@sign 0074                  _start 0038                  pclath 000A  
                status 0003                  wtemp0 007E   __end_of_lcdCountdown 03DF           __end_of_main 0732  
       ??_controlMotor 0074           ?_searchTrack 0070              ??_ADCInit 0072              ??_ADCRead 0072  
               ??_main 002C              ADCRead@ch 0076                 _ADCON0 001F                 _ADCON1 009F  
               _ADRESH 001E                 _ADRESL 009E                 _EEDATA 010C                 _EECON1 018C  
               _EECON2 018D       __end_of___awtoft 04A4       __end_of___ftpack 0675    controlMotor@Rightpt 0072  
               _TRISE0 0448                 _TRISE1 0449                 _TRISE2 044A                 _TRISE3 044B  
     __end_of_lcd_init 058A       __end_of_lcd_goto 03C4       __end_of_lcd_puts 0452                 ___ftge 058A  
            ??_doDelay 0075                 clrloop 03A6             ___ftge@ff1 0078             ___ftge@ff2 007B  
   __size_of__delay_ms 0026             ___awtoft@c 0026         __pcstackCOMMON 0070     __size_of_lcd_clear 0013  
   __size_of_lcd_putch 000B     __size_of_lcd_write 001A             __pbssBANK0 0034   __end_of_controlMotor 042E  
__size_of_lcdCountdown 000E             __pmaintext 0675                ?___ftge 0078                _ADCInit 0501  
              _ADCRead 04A4              ?___awtoft 0026              ?___ftpack 0070   __size_of_searchTrack 0030  
    __end_of__delay_ms 0478                _GO_DONE 00F9           _lcdCountdown 03D1              ?_lcd_init 0070  
            ?_lcd_goto 0070              ?_lcd_puts 0070      __end_of_lcd_clear 03F2        __size_of___ftge 0070  
    __end_of_lcd_putch 03B8      __end_of_lcd_write 040C                _doDelay 0732             ??___awtoft 0029  
           ??___ftpack 0075                _clock_t 0040             ??_lcd_init 0074             ??_lcd_goto 0072  
           ??_lcd_puts 0072   end_of_initialization 03CD  __size_of_controlMotor 0022     ADCInit@ADC_Channel 0070  
           main@leftpt 002E             lcd_putch@c 0072             lcd_write@c 0071         __end_of___ftge 05FA  
          __delay_ms@i 0073           _controlMotor 040C    start_initialization 03C4     lcd_init@init_value 0076  
             ??___ftge 0020               ?_ADCInit 0070               ?_ADCRead 0070      __size_of___awtoft 002C  
    __size_of___ftpack 007B          __pcstackBANK0 0020              __delay_ms 0452      __size_of_lcd_init 0056  
    __size_of_lcd_goto 000C      __size_of_lcd_puts 0024              __ptext430 03AD              __ptext431 042E  
            __ptext440 040C              __ptext432 03B8              __ptext441 0452              __ptext433 0478  
            __ptext425 0000              __ptext442 0000              __ptext434 03F2              __ptext426 0732  
            __ptext435 04D1              __ptext427 0534              __ptext436 058A              __ptext428 03D1  
            __ptext437 05FA              __ptext429 03DF              __ptext438 04A4              __ptext439 0501  
        ??_searchTrack 0074               ?_doDelay 0070              _lcd_clear 03DF              __pstrings 0003  
            _lcd_putch 03AD              _lcd_write 03F2              _lastMotor 0042             ?__delay_ms 0070  
           ?_lcd_clear 0070          lcdCountdown@t 0073       __size_of_ADCInit 0033       __size_of_ADCRead 002D  
           ?_lcd_putch 0070            __stringbase 0008             ?_lcd_write 0070    __end_of_searchTrack 0501  
            lcd_puts@s 0073       __size_of_doDelay 00CE               ___awtoft 0478               ___ftpack 05FA  
          ??__delay_ms 0072               _lcd_init 0534               _lcd_goto 03B8               _lcd_puts 042E  
        __size_of_main 00BD               clear_ram 03A5            _searchTrack 04D1            ??_lcd_clear 0072  
             main@read 0032            ??_lcd_putch 0072            ??_lcd_write 0070          ?_lcdCountdown 0070  
            stringcode 0003         ??_lcdCountdown 0073               stringdir 0003               stringtab 0003  
