

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun Mar  4 00:06:27 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 10 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 10 "newmain.c"
    45  2007  FFF5               	dw 0xFFFD & 0xFFF7 ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_doDelay
    48                           	FNCALL	_main,_ADCInit
    49                           	FNCALL	_main,_ADCRead
    50                           	FNCALL	_main,___awtoft
    51                           	FNCALL	_main,___ftge
    52                           	FNCALL	_main,_searchTrack
    53                           	FNCALL	_main,_controlMotor
    54                           	FNCALL	_doDelay,_lcdCountdown
    55                           	FNCALL	_doDelay,__delay_ms
    56                           	FNCALL	_doDelay,_lcd_goto
    57                           	FNCALL	_doDelay,_lcd_puts
    58                           	FNCALL	_lcd_init,_lcd_write
    59                           	FNCALL	_lcd_init,_lcd_clear
    60                           	FNCALL	_lcdCountdown,_lcd_goto
    61                           	FNCALL	_lcdCountdown,_lcd_putch
    62                           	FNCALL	_lcd_clear,_lcd_write
    63                           	FNCALL	_lcd_putch,_lcd_write
    64                           	FNCALL	_lcd_puts,_lcd_write
    65                           	FNCALL	_lcd_goto,_lcd_write
    66                           	FNCALL	___awtoft,___ftpack
    67                           	FNCALL	_searchTrack,_controlMotor
    68                           	FNROOT	_main
    69                           	global	_count
    70                           	global	_start
    71                           	global	_stop
    72                           	global	_clock_t
    73                           	global	_lastMotor
    74                           	global	_ticks
    75                           	global	_ADCON0
    76                           psect	text413,local,class=CODE,delta=2
    77                           global __ptext413
    78  0000                     __ptext413:
    79  001F                     _ADCON0	set	31
    80                           	global	_ADRESH
    81  001E                     _ADRESH	set	30
    82                           	global	_PORTD
    83  0008                     _PORTD	set	8
    84                           	global	_ADON
    85  00F8                     _ADON	set	248
    86                           	global	_CARRY
    87  0018                     _CARRY	set	24
    88                           	global	_GIE
    89  005F                     _GIE	set	95
    90                           	global	_GO_DONE
    91  00F9                     _GO_DONE	set	249
    92                           	global	_RA0
    93  0028                     _RA0	set	40
    94                           	global	_RA1
    95  0029                     _RA1	set	41
    96                           	global	_RA2
    97  002A                     _RA2	set	42
    98                           	global	_RA3
    99  002B                     _RA3	set	43
   100                           	global	_RC1
   101  0039                     _RC1	set	57
   102                           	global	_RC3
   103  003B                     _RC3	set	59
   104                           	global	_RC4
   105  003C                     _RC4	set	60
   106                           	global	_ADCON1
   107  009F                     _ADCON1	set	159
   108                           	global	_ADRESL
   109  009E                     _ADRESL	set	158
   110                           	global	_TRISA
   111  0085                     _TRISA	set	133
   112                           	global	_TRISB
   113  0086                     _TRISB	set	134
   114                           	global	_TRISC
   115  0087                     _TRISC	set	135
   116                           	global	_TRISD
   117  0088                     _TRISD	set	136
   118                           	global	_TRISE
   119  0089                     _TRISE	set	137
   120                           	global	_TRISA0
   121  0428                     _TRISA0	set	1064
   122                           	global	_TRISA1
   123  0429                     _TRISA1	set	1065
   124                           	global	_TRISA2
   125  042A                     _TRISA2	set	1066
   126                           	global	_TRISA3
   127  042B                     _TRISA3	set	1067
   128                           	global	_EEADR
   129  010D                     _EEADR	set	269
   130                           	global	_EEDATA
   131  010C                     _EEDATA	set	268
   132                           	global	_EECON1
   133  018C                     _EECON1	set	396
   134                           	global	_EECON2
   135  018D                     _EECON2	set	397
   136                           	global	_RD
   137  0C60                     _RD	set	3168
   138                           	global	_WR
   139  0C61                     _WR	set	3169
   140                           	global	_WREN
   141  0C62                     _WREN	set	3170
   142                           psect	strings,class=STRING,delta=2
   143                           global __pstrings
   144  0003                     __pstrings:
   145                           ;	global	stringdir,stringtab,__stringbase
   146  0003                     stringtab:
   147                           ;	String table - string pointers are 1 byte each
   148  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   149  0003  3000               movlw high(stringdir)
   150  0004  008A               movwf pclath
   151  0005  0804               movf fsr,w
   152  0006  0A84               incf fsr
   153  0007  0782               	addwf pc
   154  0008                     __stringbase:
   155  0008  3400               	retlw	0
   156                           psect	strings
   157                           	
   158  0009                     STR_1:	
   159  0009  3453               	retlw	83	;'S'
   160  000A  3474               	retlw	116	;'t'
   161  000B  3461               	retlw	97	;'a'
   162  000C  3472               	retlw	114	;'r'
   163  000D  3474               	retlw	116	;'t'
   164  000E  3421               	retlw	33	;'!'
   165  000F  3400               	retlw	0
   166                           psect	strings
   167                           	file	"/tmp/cgthgY6PU"
   168                           	line	#
   169                           psect cinit,class=CODE,delta=2
   170                           global start_initialization
   171  03CB                     start_initialization:
   172                           
   173                           psect	bssBANK0,class=BANK0,space=1
   174                           global __pbssBANK0
   175  0034                     __pbssBANK0:
   176  0034                     _count:
   177  0034                            ds      4
   178                           
   179  0038                     _start:
   180  0038                            ds      4
   181                           
   182  003C                     _stop:
   183  003C                            ds      4
   184                           
   185  0040                     _clock_t:
   186  0040                            ds      2
   187                           
   188  0042                     _lastMotor:
   189  0042                            ds      2
   190                           
   191  0044                     _ticks:
   192  0044                            ds      2
   193                           
   194                           psect clrtext,class=CODE,delta=2
   195                           global clear_ram
   196                           ;	Called with FSR containing the base address, and
   197                           ;	W with the last address+1
   198  03AC                     clear_ram:
   199  03AC  0064               	clrwdt			;clear the watchdog before getting into this loop
   200  03AD                     clrloop:
   201  03AD  0180               	clrf	indf		;clear RAM location pointed to by FSR
   202  03AE  0A84               	incf	fsr,f		;increment pointer
   203  03AF  0604               	xorwf	fsr,w		;XOR with final address
   204  03B0  1903               	btfsc	status,2	;have we reached the end yet?
   205  03B1  3400               	retlw	0		;all done for this memory range, return
   206  03B2  0604               	xorwf	fsr,w		;XOR again to restore value
   207  03B3  2BAD               	goto	clrloop		;do the next byte
   208                           
   209                           ; Clear objects allocated to BANK0
   210                           psect cinit,class=CODE,delta=2
   211  03CB  1383               	bcf	status, 7	;select IRP bank0
   212  03CC  3034               	movlw	low(__pbssBANK0)
   213  03CD  0084               	movwf	fsr
   214  03CE  3046               	movlw	low((__pbssBANK0)+012h)
   215  03CF  120A  118A  23AC   	fcall	clear_ram
              120A  118A         
   216                           psect cinit,class=CODE,delta=2
   217                           global end_of_initialization
   218                           
   219                           ;End of C runtime variable initialization code
   220                           
   221  03D4                     end_of_initialization:
   222  03D4  0183               clrf status
   223  03D5  120A  118A  2E7C   ljmp _main	;jump to C main() function
   224                           psect	cstackCOMMON,class=COMMON,space=1
   225                           global __pcstackCOMMON
   226  0070                     __pcstackCOMMON:
   227                           	global	?_lcdCountdown
   228  0070                     ?_lcdCountdown:	; 0 bytes @ 0x0
   229                           	global	?_lcd_goto
   230  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   231                           	global	?_lcd_puts
   232  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   233                           	global	?_lcd_putch
   234  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   235                           	global	?_lcd_init
   236  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   237                           	global	?__delay_ms
   238  0070                     ?__delay_ms:	; 0 bytes @ 0x0
   239                           	global	?_controlMotor
   240  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   241                           	global	?_doDelay
   242  0070                     ?_doDelay:	; 0 bytes @ 0x0
   243                           	global	?_ADCInit
   244  0070                     ?_ADCInit:	; 0 bytes @ 0x0
   245                           	global	?_lcd_write
   246  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   247                           	global	??_lcd_write
   248  0070                     ??_lcd_write:	; 0 bytes @ 0x0
   249                           	global	?_lcd_clear
   250  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   251                           	global	?_searchTrack
   252  0070                     ?_searchTrack:	; 2 bytes @ 0x0
   253                           	global	?_ADCRead
   254  0070                     ?_ADCRead:	; 2 bytes @ 0x0
   255                           	global	?_main
   256  0070                     ?_main:	; 2 bytes @ 0x0
   257                           	global	?___ftpack
   258  0070                     ?___ftpack:	; 3 bytes @ 0x0
   259                           	global	__delay_ms@ms
   260  0070                     __delay_ms@ms:	; 2 bytes @ 0x0
   261                           	global	controlMotor@Leftpt
   262  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   263                           	global	ADCInit@ADC_Channel
   264  0070                     ADCInit@ADC_Channel:	; 2 bytes @ 0x0
   265                           	global	___ftpack@arg
   266  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   267  0070                     	ds	1
   268                           	global	lcd_write@c
   269  0071                     lcd_write@c:	; 1 bytes @ 0x1
   270  0071                     	ds	1
   271                           	global	??_lcd_goto
   272  0072                     ??_lcd_goto:	; 0 bytes @ 0x2
   273                           	global	??_lcd_puts
   274  0072                     ??_lcd_puts:	; 0 bytes @ 0x2
   275                           	global	??_lcd_putch
   276  0072                     ??_lcd_putch:	; 0 bytes @ 0x2
   277                           	global	??__delay_ms
   278  0072                     ??__delay_ms:	; 0 bytes @ 0x2
   279                           	global	??_ADCInit
   280  0072                     ??_ADCInit:	; 0 bytes @ 0x2
   281                           	global	??_ADCRead
   282  0072                     ??_ADCRead:	; 0 bytes @ 0x2
   283                           	global	??_lcd_clear
   284  0072                     ??_lcd_clear:	; 0 bytes @ 0x2
   285                           	global	lcd_putch@c
   286  0072                     lcd_putch@c:	; 1 bytes @ 0x2
   287                           	global	lcd_goto@pos
   288  0072                     lcd_goto@pos:	; 1 bytes @ 0x2
   289                           	global	controlMotor@Rightpt
   290  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   291  0072                     	ds	1
   292                           	global	??_lcdCountdown
   293  0073                     ??_lcdCountdown:	; 0 bytes @ 0x3
   294                           	global	__delay_ms@i
   295  0073                     __delay_ms@i:	; 1 bytes @ 0x3
   296                           	global	lcdCountdown@t
   297  0073                     lcdCountdown@t:	; 1 bytes @ 0x3
   298                           	global	lcd_puts@s
   299  0073                     lcd_puts@s:	; 1 bytes @ 0x3
   300                           	global	___ftpack@exp
   301  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   302  0073                     	ds	1
   303                           	global	??_lcd_init
   304  0074                     ??_lcd_init:	; 0 bytes @ 0x4
   305                           	global	??_controlMotor
   306  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   307                           	global	??_searchTrack
   308  0074                     ??_searchTrack:	; 0 bytes @ 0x4
   309                           	global	__delay_ms@us
   310  0074                     __delay_ms@us:	; 1 bytes @ 0x4
   311                           	global	___ftpack@sign
   312  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   313  0074                     	ds	1
   314                           	global	??___ftpack
   315  0075                     ??___ftpack:	; 0 bytes @ 0x5
   316                           	global	??_doDelay
   317  0075                     ??_doDelay:	; 0 bytes @ 0x5
   318  0075                     	ds	1
   319                           	global	ADCRead@ch
   320  0076                     ADCRead@ch:	; 1 bytes @ 0x6
   321                           	global	lcd_init@init_value
   322  0076                     lcd_init@init_value:	; 1 bytes @ 0x6
   323  0076                     	ds	2
   324                           	global	?___ftge
   325  0078                     ?___ftge:	; 1 bit 
   326                           	global	___ftge@ff1
   327  0078                     ___ftge@ff1:	; 3 bytes @ 0x8
   328  0078                     	ds	3
   329                           	global	___ftge@ff2
   330  007B                     ___ftge@ff2:	; 3 bytes @ 0xB
   331  007B                     	ds	3
   332                           psect	cstackBANK0,class=BANK0,space=1
   333                           global __pcstackBANK0
   334  0020                     __pcstackBANK0:
   335                           	global	??___ftge
   336  0020                     ??___ftge:	; 0 bytes @ 0x0
   337  0020                     	ds	6
   338                           	global	?___awtoft
   339  0026                     ?___awtoft:	; 3 bytes @ 0x6
   340                           	global	___awtoft@c
   341  0026                     ___awtoft@c:	; 2 bytes @ 0x6
   342  0026                     	ds	3
   343                           	global	??___awtoft
   344  0029                     ??___awtoft:	; 0 bytes @ 0x9
   345  0029                     	ds	2
   346                           	global	___awtoft@sign
   347  002B                     ___awtoft@sign:	; 1 bytes @ 0xB
   348  002B                     	ds	1
   349                           	global	??_main
   350  002C                     ??_main:	; 0 bytes @ 0xC
   351  002C                     	ds	2
   352                           	global	main@leftpt
   353  002E                     main@leftpt:	; 2 bytes @ 0xE
   354  002E                     	ds	2
   355                           	global	main@rightpt
   356  0030                     main@rightpt:	; 2 bytes @ 0x10
   357  0030                     	ds	2
   358                           	global	main@read
   359  0032                     main@read:	; 2 bytes @ 0x12
   360  0032                     	ds	2
   361 ;;Data sizes: Strings 7, constant 0, data 0, bss 18, persistent 0 stack 0
   362 ;;Auto spaces:   Size  Autos    Used
   363 ;; COMMON          14     14      14
   364 ;; BANK0           80     20      38
   365 ;; BANK1           80      0       0
   366 ;; BANK3           96      0       0
   367 ;; BANK2           80      0       0
   368                           
   369 ;;
   370 ;; Pointer list with targets:
   371                           
   372 ;; ?___ftpack	float  size(1) Largest target is 0
   373 ;;
   374 ;; ?___awtoft	float  size(1) Largest target is 0
   375 ;;
   376 ;; ?_ADCRead	unsigned int  size(1) Largest target is 0
   377 ;;
   378 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 7
   379 ;;		 -> STR_1(CODE[7]), 
   380 ;;
   381                           
   382                           
   383 ;;
   384 ;; Critical Paths under _main in COMMON
   385 ;;
   386 ;;   _main->___ftge
   387 ;;   _doDelay->__delay_ms
   388 ;;   _lcd_init->_lcd_clear
   389 ;;   _lcdCountdown->_lcd_goto
   390 ;;   _lcdCountdown->_lcd_putch
   391 ;;   _lcd_clear->_lcd_write
   392 ;;   _lcd_putch->_lcd_write
   393 ;;   _lcd_puts->_lcd_write
   394 ;;   _lcd_goto->_lcd_write
   395 ;;   ___awtoft->___ftge
   396 ;;   _searchTrack->_controlMotor
   397 ;;   ___ftge->___ftpack
   398 ;;
   399 ;; Critical Paths under _main in BANK0
   400 ;;
   401 ;;   _main->___awtoft
   402 ;;   ___awtoft->___ftge
   403 ;;
   404 ;; Critical Paths under _main in BANK1
   405 ;;
   406 ;;   None.
   407 ;;
   408 ;; Critical Paths under _main in BANK3
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;; Critical Paths under _main in BANK2
   413 ;;
   414 ;;   None.
   415                           
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   418 ;;
   419                           
   420 ;;
   421 ;;Call Graph Tables:
   422 ;;
   423 ;; ---------------------------------------------------------------------------------
   424 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   425 ;; ---------------------------------------------------------------------------------
   426 ;; (0) _main                                                 8     8      0    1258
   427 ;;                                             12 BANK0      8     8      0
   428 ;;                           _lcd_init
   429 ;;                            _doDelay
   430 ;;                            _ADCInit
   431 ;;                            _ADCRead
   432 ;;                           ___awtoft
   433 ;;                             ___ftge
   434 ;;                        _searchTrack
   435 ;;                       _controlMotor
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (1) _doDelay                                              0     0      0     377
   438 ;;                       _lcdCountdown
   439 ;;                          __delay_ms
   440 ;;                           _lcd_goto
   441 ;;                           _lcd_puts
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (1) _lcd_init                                             3     3      0     111
   444 ;;                                              4 COMMON     3     3      0
   445 ;;                          _lcd_write
   446 ;;                          _lcd_clear
   447 ;; ---------------------------------------------------------------------------------
   448 ;; (2) _lcdCountdown                                         1     1      0     154
   449 ;;                                              3 COMMON     1     1      0
   450 ;;                           _lcd_goto
   451 ;;                          _lcd_putch
   452 ;; ---------------------------------------------------------------------------------
   453 ;; (2) _lcd_clear                                            2     2      0      44
   454 ;;                                              2 COMMON     2     2      0
   455 ;;                          _lcd_write
   456 ;; ---------------------------------------------------------------------------------
   457 ;; (3) _lcd_putch                                            1     1      0      66
   458 ;;                                              2 COMMON     1     1      0
   459 ;;                          _lcd_write
   460 ;; ---------------------------------------------------------------------------------
   461 ;; (2) _lcd_puts                                             2     2      0      89
   462 ;;                                              2 COMMON     2     2      0
   463 ;;                          _lcd_write
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (2) _lcd_goto                                             1     1      0      66
   466 ;;                                              2 COMMON     1     1      0
   467 ;;                          _lcd_write
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (1) ___awtoft                                             6     3      3     300
   470 ;;                                              6 BANK0      6     3      3
   471 ;;                           ___ftpack
   472 ;;                             ___ftge (ARG)
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (3) _lcd_write                                            2     2      0      44
   475 ;;                                              0 COMMON     2     2      0
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (1) _searchTrack                                          0     0      0      44
   478 ;;                       _controlMotor
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (1) ___ftge                                              12     6      6     136
   481 ;;                                              8 COMMON     6     0      6
   482 ;;                                              0 BANK0      6     6      0
   483 ;;                           ___ftpack (ARG)
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (2) ___ftpack                                             8     3      5     209
   486 ;;                                              0 COMMON     8     3      5
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _ADCRead                                              7     5      2      22
   489 ;;                                              0 COMMON     7     5      2
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (1) _ADCInit                                              2     0      2      88
   492 ;;                                              0 COMMON     2     0      2
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (1) _controlMotor                                         4     0      4      44
   495 ;;                                              0 COMMON     4     0      4
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (2) __delay_ms                                            5     3      2      68
   498 ;;                                              0 COMMON     5     3      2
   499 ;; ---------------------------------------------------------------------------------
   500 ;; Estimated maximum stack depth 3
   501 ;; ---------------------------------------------------------------------------------
   502                           
   503 ;; Call Graph Graphs:
   504                           
   505 ;; _main (ROOT)
   506 ;;   _lcd_init
   507 ;;     _lcd_write
   508 ;;     _lcd_clear
   509 ;;       _lcd_write
   510 ;;   _doDelay
   511 ;;     _lcdCountdown
   512 ;;       _lcd_goto
   513 ;;         _lcd_write
   514 ;;       _lcd_putch
   515 ;;         _lcd_write
   516 ;;     __delay_ms
   517 ;;     _lcd_goto
   518 ;;       _lcd_write
   519 ;;     _lcd_puts
   520 ;;       _lcd_write
   521 ;;   _ADCInit
   522 ;;   _ADCRead
   523 ;;   ___awtoft
   524 ;;     ___ftpack
   525 ;;     ___ftge (ARG)
   526 ;;       ___ftpack (ARG)
   527 ;;   ___ftge
   528 ;;     ___ftpack (ARG)
   529 ;;   _searchTrack
   530 ;;     _controlMotor
   531 ;;   _controlMotor
   532 ;;
   533                           
   534 ;; Address spaces:
   535                           
   536 ;;Name               Size   Autos  Total    Cost      Usage
   537 ;;BITCOMMON            E      0       0       0        0.0%
   538 ;;EEDATA             100      0       0       0        0.0%
   539 ;;NULL                 0      0       0       0        0.0%
   540 ;;CODE                 0      0       0       0        0.0%
   541 ;;COMMON               E      E       E       1      100.0%
   542 ;;BITSFR0              0      0       0       1        0.0%
   543 ;;SFR0                 0      0       0       1        0.0%
   544 ;;BITSFR1              0      0       0       2        0.0%
   545 ;;SFR1                 0      0       0       2        0.0%
   546 ;;STACK                0      0       4       2        0.0%
   547 ;;BITBANK0            50      0       0       3        0.0%
   548 ;;BANK0               50     14      26       4       47.5%
   549 ;;BITSFR3              0      0       0       4        0.0%
   550 ;;SFR3                 0      0       0       4        0.0%
   551 ;;BITBANK1            50      0       0       5        0.0%
   552 ;;BITSFR2              0      0       0       5        0.0%
   553 ;;SFR2                 0      0       0       5        0.0%
   554 ;;BANK1               50      0       0       6        0.0%
   555 ;;BITBANK3            60      0       0       7        0.0%
   556 ;;BANK3               60      0       0       8        0.0%
   557 ;;BANK2               50      0       0       9        0.0%
   558 ;;ABS                  0      0      34      10        0.0%
   559 ;;BITBANK2            50      0       0      11        0.0%
   560 ;;DATA                 0      0      38      12        0.0%
   561                           
   562                           	global	_main
   563                           psect	maintext,global,class=CODE,delta=2
   564                           global __pmaintext
   565  067C                     __pmaintext:
   566                           
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 311 in file "newmain.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  read            2   18[BANK0 ] int 
   574 ;;  rightpt         2   16[BANK0 ] int 
   575 ;;  leftpt          2   14[BANK0 ] int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  2  1563[COMMON] int 
   578 ;; Registers used:
   579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 17F/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       6       0       0       0
   587 ;;      Temps:          0       2       0       0       0
   588 ;;      Totals:         0       8       0       0       0
   589 ;;Total ram usage:        8 bytes
   590 ;; Hardware stack levels required when called:    4
   591 ;; This function calls:
   592 ;;		_lcd_init
   593 ;;		_doDelay
   594 ;;		_ADCInit
   595 ;;		_ADCRead
   596 ;;		___awtoft
   597 ;;		___ftge
   598 ;;		_searchTrack
   599 ;;		_controlMotor
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           psect	maintext
   605                           	file	"newmain.c"
   606                           	line	311
   607                           	global	__size_of_main
   608  00BD                     	__size_of_main	equ	__end_of_main-_main
   609                           	
   610  067C                     _main:	
   611                           	opt	stack 4
   612                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   613                           	line	313
   614                           	
   615  067C                     l6459:	
   616                           ;newmain.c: 313: TRISA = 0x00;
   617  067C  1683               	bsf	status, 5	;RP0=1, select bank1
   618  067D  1303               	bcf	status, 6	;RP1=0, select bank1
   619  067E  0185               	clrf	(133)^080h	;volatile
   620                           	line	314
   621                           ;newmain.c: 314: TRISB = 0x00;
   622  067F  0186               	clrf	(134)^080h	;volatile
   623                           	line	315
   624                           ;newmain.c: 315: TRISC = 0x00;
   625  0680  0187               	clrf	(135)^080h	;volatile
   626                           	line	316
   627                           ;newmain.c: 316: TRISD = 0X00;
   628  0681  0188               	clrf	(136)^080h	;volatile
   629                           	line	317
   630                           ;newmain.c: 317: TRISE = 0X00;
   631  0682  0189               	clrf	(137)^080h	;volatile
   632                           	line	319
   633                           	
   634  0683                     l6461:	
   635                           ;newmain.c: 319: lcd_init();
   636  0683  120A  118A  253B   	fcall	_lcd_init
              120A  118A         
   637                           	line	323
   638                           	
   639  0688                     l6463:	
   640                           ;newmain.c: 323: doDelay();
   641  0688  120A  118A  2739   	fcall	_doDelay
              120A  118A         
   642                           	line	325
   643                           	
   644  068D                     l6465:	
   645                           ;newmain.c: 325: ADCInit (0);
   646  068D  3000               	movlw	low(0)
   647  068E  00F0               	movwf	(?_ADCInit)
   648  068F  3000               	movlw	high(0)
   649  0690  00F1               	movwf	((?_ADCInit))+1
   650  0691  120A  118A  2508   	fcall	_ADCInit
              120A  118A         
   651                           	line	326
   652                           	
   653  0696                     l6467:	
   654                           ;newmain.c: 326: ADCInit (1);
   655  0696  3001               	movlw	low(01h)
   656  0697  00F0               	movwf	(?_ADCInit)
   657  0698  3000               	movlw	high(01h)
   658  0699  00F1               	movwf	((?_ADCInit))+1
   659  069A  120A  118A  2508   	fcall	_ADCInit
              120A  118A         
   660  069F  2EA0               	goto	l6469
   661                           	line	329
   662                           ;newmain.c: 327: int read, leftpt, rightpt;
   663                           ;newmain.c: 329: while (1)
   664                           	
   665  06A0                     l1564:	
   666                           	line	332
   667                           	
   668  06A0                     l6469:	
   669                           ;newmain.c: 330: {
   670                           ;newmain.c: 332: read = ADCRead(0);
   671  06A0  3000               	movlw	(0)
   672  06A1  120A  118A  24AB   	fcall	_ADCRead
              120A  118A         
   673  06A6  0871               	movf	(1+(?_ADCRead)),w
   674  06A7  1283               	bcf	status, 5	;RP0=0, select bank0
   675  06A8  1303               	bcf	status, 6	;RP1=0, select bank0
   676  06A9  01B3               	clrf	(main@read+1)
   677  06AA  07B3               	addwf	(main@read+1)
   678  06AB  0870               	movf	(0+(?_ADCRead)),w
   679  06AC  01B2               	clrf	(main@read)
   680  06AD  07B2               	addwf	(main@read)
   681                           
   682                           	line	333
   683                           	
   684  06AE                     l6471:	
   685                           ;newmain.c: 333: leftpt = (read > 1.5) ? 1 : 0;
   686  06AE  3000               	movlw	0x0
   687  06AF  00F8               	movwf	(?___ftge)
   688  06B0  30C0               	movlw	0xc0
   689  06B1  00F9               	movwf	(?___ftge+1)
   690  06B2  303F               	movlw	0x3f
   691  06B3  00FA               	movwf	(?___ftge+2)
   692  06B4  0833               	movf	(main@read+1),w
   693  06B5  01A7               	clrf	(?___awtoft+1)
   694  06B6  07A7               	addwf	(?___awtoft+1)
   695  06B7  0832               	movf	(main@read),w
   696  06B8  01A6               	clrf	(?___awtoft)
   697  06B9  07A6               	addwf	(?___awtoft)
   698                           
   699  06BA  120A  118A  247F   	fcall	___awtoft
              120A  118A         
   700  06BF  1283               	bcf	status, 5	;RP0=0, select bank0
   701  06C0  1303               	bcf	status, 6	;RP1=0, select bank0
   702  06C1  0826               	movf	(0+(?___awtoft)),w
   703  06C2  00FB               	movwf	0+(?___ftge)+03h
   704  06C3  0827               	movf	(1+(?___awtoft)),w
   705  06C4  00FC               	movwf	1+(?___ftge)+03h
   706  06C5  0828               	movf	(2+(?___awtoft)),w
   707  06C6  00FD               	movwf	2+(?___ftge)+03h
   708  06C7  120A  118A  2591   	fcall	___ftge
              120A  118A         
   709  06CC  3000               	movlw	0
   710  06CD  1C03               	btfss	status,0
   711  06CE  3001               	movlw	1
   712  06CF  1283               	bcf	status, 5	;RP0=0, select bank0
   713  06D0  1303               	bcf	status, 6	;RP1=0, select bank0
   714  06D1  00AC               	movwf	(??_main+0)+0
   715  06D2  01AD               	clrf	(??_main+0)+0+1
   716  06D3  082C               	movf	0+(??_main+0)+0,w
   717  06D4  00AE               	movwf	(main@leftpt)
   718  06D5  082D               	movf	1+(??_main+0)+0,w
   719  06D6  00AF               	movwf	(main@leftpt+1)
   720                           	line	336
   721                           	
   722  06D7                     l6473:	
   723                           ;newmain.c: 336: read = ADCRead(1);
   724  06D7  3001               	movlw	(01h)
   725  06D8  120A  118A  24AB   	fcall	_ADCRead
              120A  118A         
   726  06DD  0871               	movf	(1+(?_ADCRead)),w
   727  06DE  1283               	bcf	status, 5	;RP0=0, select bank0
   728  06DF  1303               	bcf	status, 6	;RP1=0, select bank0
   729  06E0  01B3               	clrf	(main@read+1)
   730  06E1  07B3               	addwf	(main@read+1)
   731  06E2  0870               	movf	(0+(?_ADCRead)),w
   732  06E3  01B2               	clrf	(main@read)
   733  06E4  07B2               	addwf	(main@read)
   734                           
   735                           	line	337
   736                           	
   737  06E5                     l6475:	
   738                           ;newmain.c: 337: rightpt = (read > 1.5) ? 1 : 0;
   739  06E5  3000               	movlw	0x0
   740  06E6  00F8               	movwf	(?___ftge)
   741  06E7  30C0               	movlw	0xc0
   742  06E8  00F9               	movwf	(?___ftge+1)
   743  06E9  303F               	movlw	0x3f
   744  06EA  00FA               	movwf	(?___ftge+2)
   745  06EB  0833               	movf	(main@read+1),w
   746  06EC  01A7               	clrf	(?___awtoft+1)
   747  06ED  07A7               	addwf	(?___awtoft+1)
   748  06EE  0832               	movf	(main@read),w
   749  06EF  01A6               	clrf	(?___awtoft)
   750  06F0  07A6               	addwf	(?___awtoft)
   751                           
   752  06F1  120A  118A  247F   	fcall	___awtoft
              120A  118A         
   753  06F6  1283               	bcf	status, 5	;RP0=0, select bank0
   754  06F7  1303               	bcf	status, 6	;RP1=0, select bank0
   755  06F8  0826               	movf	(0+(?___awtoft)),w
   756  06F9  00FB               	movwf	0+(?___ftge)+03h
   757  06FA  0827               	movf	(1+(?___awtoft)),w
   758  06FB  00FC               	movwf	1+(?___ftge)+03h
   759  06FC  0828               	movf	(2+(?___awtoft)),w
   760  06FD  00FD               	movwf	2+(?___ftge)+03h
   761  06FE  120A  118A  2591   	fcall	___ftge
              120A  118A         
   762  0703  3000               	movlw	0
   763  0704  1C03               	btfss	status,0
   764  0705  3001               	movlw	1
   765  0706  1283               	bcf	status, 5	;RP0=0, select bank0
   766  0707  1303               	bcf	status, 6	;RP1=0, select bank0
   767  0708  00AC               	movwf	(??_main+0)+0
   768  0709  01AD               	clrf	(??_main+0)+0+1
   769  070A  082C               	movf	0+(??_main+0)+0,w
   770  070B  00B0               	movwf	(main@rightpt)
   771  070C  082D               	movf	1+(??_main+0)+0,w
   772  070D  00B1               	movwf	(main@rightpt+1)
   773                           	line	339
   774                           	
   775  070E                     l6477:	
   776                           ;newmain.c: 339: if((leftpt==0) && (rightpt==0))
   777  070E  082F               	movf	((main@leftpt+1)),w
   778  070F  042E               	iorwf	((main@leftpt)),w
   779  0710  1D03               	skipz
   780  0711  2F13               	goto	u3251
   781  0712  2F14               	goto	u3250
   782  0713                     u3251:
   783  0713  2F20               	goto	l6483
   784  0714                     u3250:
   785                           	
   786  0714                     l6479:	
   787  0714  0831               	movf	((main@rightpt+1)),w
   788  0715  0430               	iorwf	((main@rightpt)),w
   789  0716  1D03               	skipz
   790  0717  2F19               	goto	u3261
   791  0718  2F1A               	goto	u3260
   792  0719                     u3261:
   793  0719  2F20               	goto	l6483
   794  071A                     u3260:
   795                           	line	341
   796                           	
   797  071A                     l6481:	
   798                           ;newmain.c: 340: {
   799                           ;newmain.c: 341: searchTrack();
   800  071A  120A  118A  24D8   	fcall	_searchTrack
              120A  118A         
   801                           	line	342
   802                           ;newmain.c: 342: }
   803  071F  2EA0               	goto	l6469
   804                           	line	343
   805                           	
   806  0720                     l1565:	
   807                           	line	345
   808                           	
   809  0720                     l6483:	
   810                           ;newmain.c: 343: else
   811                           ;newmain.c: 344: {
   812                           ;newmain.c: 345: controlMotor(leftpt, rightpt);
   813  0720  1283               	bcf	status, 5	;RP0=0, select bank0
   814  0721  1303               	bcf	status, 6	;RP1=0, select bank0
   815  0722  082F               	movf	(main@leftpt+1),w
   816  0723  01F1               	clrf	(?_controlMotor+1)
   817  0724  07F1               	addwf	(?_controlMotor+1)
   818  0725  082E               	movf	(main@leftpt),w
   819  0726  01F0               	clrf	(?_controlMotor)
   820  0727  07F0               	addwf	(?_controlMotor)
   821                           
   822  0728  0831               	movf	(main@rightpt+1),w
   823  0729  01F3               	clrf	1+(?_controlMotor)+02h
   824  072A  07F3               	addwf	1+(?_controlMotor)+02h
   825  072B  0830               	movf	(main@rightpt),w
   826  072C  01F2               	clrf	0+(?_controlMotor)+02h
   827  072D  07F2               	addwf	0+(?_controlMotor)+02h
   828                           
   829  072E  120A  118A  2413   	fcall	_controlMotor
              120A  118A         
   830  0733  2EA0               	goto	l6469
   831                           	line	346
   832                           	
   833  0734                     l1566:	
   834  0734  2EA0               	goto	l6469
   835                           	line	347
   836                           	
   837  0735                     l1567:	
   838                           	line	329
   839  0735  2EA0               	goto	l6469
   840                           	
   841  0736                     l1568:	
   842                           	line	349
   843                           	
   844  0736                     l1569:	
   845                           	global	start
   846  0736  120A  118A  2800   	ljmp	start
   847                           	opt stack 0
   848                           GLOBAL	__end_of_main
   849  0739                     	__end_of_main:
   850 ;; =============== function _main ends ============
   851                           
   852                           	signat	_main,90
   853                           	global	_doDelay
   854                           psect	text414,local,class=CODE,delta=2
   855                           global __ptext414
   856  0739                     __ptext414:
   857                           
   858 ;; *************** function _doDelay *****************
   859 ;; Defined at:
   860 ;;		line 167 in file "newmain.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    3
   881 ;; This function calls:
   882 ;;		_lcdCountdown
   883 ;;		__delay_ms
   884 ;;		_lcd_goto
   885 ;;		_lcd_puts
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           psect	text414
   891                           	file	"newmain.c"
   892                           	line	167
   893                           	global	__size_of_doDelay
   894  00C7                     	__size_of_doDelay	equ	__end_of_doDelay-_doDelay
   895                           	
   896  0739                     _doDelay:	
   897                           	opt	stack 4
   898                           ; Regs used in _doDelay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   899                           	line	168
   900                           	
   901  0739                     l6441:	
   902                           ;newmain.c: 168: lcdCountdown('8');
   903  0739  3038               	movlw	(038h)
   904  073A  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
   905                           	line	169
   906                           ;newmain.c: 169: _delay_ms(1000);
   907  073F  30E8               	movlw	low(03E8h)
   908  0740  00F0               	movwf	(?__delay_ms)
   909  0741  3003               	movlw	high(03E8h)
   910  0742  00F1               	movwf	((?__delay_ms))+1
   911  0743  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
   912                           	line	171
   913                           ;newmain.c: 171: lcdCountdown('7');
   914  0748  3037               	movlw	(037h)
   915  0749  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
   916                           	line	172
   917                           ;newmain.c: 172: _delay_ms(1000);
   918  074E  30E8               	movlw	low(03E8h)
   919  074F  00F0               	movwf	(?__delay_ms)
   920  0750  3003               	movlw	high(03E8h)
   921  0751  00F1               	movwf	((?__delay_ms))+1
   922  0752  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
   923                           	line	174
   924                           ;newmain.c: 174: lcdCountdown('6');
   925  0757  3036               	movlw	(036h)
   926  0758  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
   927                           	line	175
   928                           ;newmain.c: 175: _delay_ms(1000);
   929  075D  30E8               	movlw	low(03E8h)
   930  075E  00F0               	movwf	(?__delay_ms)
   931  075F  3003               	movlw	high(03E8h)
   932  0760  00F1               	movwf	((?__delay_ms))+1
   933  0761  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
   934                           	line	177
   935                           ;newmain.c: 177: lcdCountdown('5');
   936  0766  3035               	movlw	(035h)
   937  0767  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
   938                           	line	178
   939                           ;newmain.c: 178: _delay_ms(1000);
   940  076C  30E8               	movlw	low(03E8h)
   941  076D  00F0               	movwf	(?__delay_ms)
   942  076E  3003               	movlw	high(03E8h)
   943  076F  00F1               	movwf	((?__delay_ms))+1
   944  0770  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
   945                           	line	180
   946                           ;newmain.c: 180: lcdCountdown('4');
   947  0775  3034               	movlw	(034h)
   948  0776  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
   949                           	line	181
   950                           ;newmain.c: 181: _delay_ms(1000);
   951  077B  30E8               	movlw	low(03E8h)
   952  077C  00F0               	movwf	(?__delay_ms)
   953  077D  3003               	movlw	high(03E8h)
   954  077E  00F1               	movwf	((?__delay_ms))+1
   955  077F  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
   956                           	line	186
   957                           ;newmain.c: 186: lcdCountdown('3');
   958  0784  3033               	movlw	(033h)
   959  0785  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
   960                           	line	187
   961                           	
   962  078A                     l6443:	
   963                           ;newmain.c: 187: RC3 = 1;
   964  078A  1283               	bcf	status, 5	;RP0=0, select bank0
   965  078B  1303               	bcf	status, 6	;RP1=0, select bank0
   966  078C  1587               	bsf	(59/8),(59)&7
   967                           	line	188
   968                           ;newmain.c: 188: _delay_ms(200);
   969  078D  30C8               	movlw	low(0C8h)
   970  078E  00F0               	movwf	(?__delay_ms)
   971  078F  3000               	movlw	high(0C8h)
   972  0790  00F1               	movwf	((?__delay_ms))+1
   973  0791  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
   974                           	line	189
   975                           	
   976  0796                     l6445:	
   977                           ;newmain.c: 189: RC3 = 0;
   978  0796  1283               	bcf	status, 5	;RP0=0, select bank0
   979  0797  1303               	bcf	status, 6	;RP1=0, select bank0
   980  0798  1187               	bcf	(59/8),(59)&7
   981                           	line	190
   982                           ;newmain.c: 190: _delay_ms(700);
   983  0799  30BC               	movlw	low(02BCh)
   984  079A  00F0               	movwf	(?__delay_ms)
   985  079B  3002               	movlw	high(02BCh)
   986  079C  00F1               	movwf	((?__delay_ms))+1
   987  079D  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
   988                           	line	192
   989                           	
   990  07A2                     l6447:	
   991                           ;newmain.c: 192: RC3 = 1;
   992  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
   993  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
   994  07A4  1587               	bsf	(59/8),(59)&7
   995                           	line	193
   996                           ;newmain.c: 193: _delay_ms(100);
   997  07A5  3064               	movlw	low(064h)
   998  07A6  00F0               	movwf	(?__delay_ms)
   999  07A7  3000               	movlw	high(064h)
  1000  07A8  00F1               	movwf	((?__delay_ms))+1
  1001  07A9  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
  1002                           	line	194
  1003                           ;newmain.c: 194: lcdCountdown('2');
  1004  07AE  3032               	movlw	(032h)
  1005  07AF  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
  1006                           	line	195
  1007                           ;newmain.c: 195: _delay_ms(100);
  1008  07B4  3064               	movlw	low(064h)
  1009  07B5  00F0               	movwf	(?__delay_ms)
  1010  07B6  3000               	movlw	high(064h)
  1011  07B7  00F1               	movwf	((?__delay_ms))+1
  1012  07B8  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
  1013                           	line	196
  1014                           	
  1015  07BD                     l6449:	
  1016                           ;newmain.c: 196: RC3 = 0;
  1017  07BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1018  07BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1019  07BF  1187               	bcf	(59/8),(59)&7
  1020                           	line	197
  1021                           ;newmain.c: 197: _delay_ms(700);
  1022  07C0  30BC               	movlw	low(02BCh)
  1023  07C1  00F0               	movwf	(?__delay_ms)
  1024  07C2  3002               	movlw	high(02BCh)
  1025  07C3  00F1               	movwf	((?__delay_ms))+1
  1026  07C4  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
  1027                           	line	199
  1028                           	
  1029  07C9                     l6451:	
  1030                           ;newmain.c: 199: RC3 = 1;
  1031  07C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1032  07CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1033  07CB  1587               	bsf	(59/8),(59)&7
  1034                           	line	200
  1035                           ;newmain.c: 200: _delay_ms(200);
  1036  07CC  30C8               	movlw	low(0C8h)
  1037  07CD  00F0               	movwf	(?__delay_ms)
  1038  07CE  3000               	movlw	high(0C8h)
  1039  07CF  00F1               	movwf	((?__delay_ms))+1
  1040  07D0  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
  1041                           	line	201
  1042                           ;newmain.c: 201: lcdCountdown('1');
  1043  07D5  3031               	movlw	(031h)
  1044  07D6  120A  118A  23D8   	fcall	_lcdCountdown
              120A  118A         
  1045                           	line	202
  1046                           	
  1047  07DB                     l6453:	
  1048                           ;newmain.c: 202: RC3 = 0;
  1049  07DB  1283               	bcf	status, 5	;RP0=0, select bank0
  1050  07DC  1303               	bcf	status, 6	;RP1=0, select bank0
  1051  07DD  1187               	bcf	(59/8),(59)&7
  1052                           	line	203
  1053                           ;newmain.c: 203: _delay_ms(700);
  1054  07DE  30BC               	movlw	low(02BCh)
  1055  07DF  00F0               	movwf	(?__delay_ms)
  1056  07E0  3002               	movlw	high(02BCh)
  1057  07E1  00F1               	movwf	((?__delay_ms))+1
  1058  07E2  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
  1059                           	line	205
  1060                           	
  1061  07E7                     l6455:	
  1062                           ;newmain.c: 205: RC4 = 1;
  1063  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1064  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1065  07E9  1607               	bsf	(60/8),(60)&7
  1066                           	line	206
  1067                           ;newmain.c: 206: _delay_ms(300);
  1068  07EA  302C               	movlw	low(012Ch)
  1069  07EB  00F0               	movwf	(?__delay_ms)
  1070  07EC  3001               	movlw	high(012Ch)
  1071  07ED  00F1               	movwf	((?__delay_ms))+1
  1072  07EE  120A  118A  2459   	fcall	__delay_ms
              120A  118A         
  1073                           	line	208
  1074                           ;newmain.c: 208: lcd_goto(0);
  1075  07F3  3000               	movlw	(0)
  1076  07F4  120A  118A  23BF   	fcall	_lcd_goto
              120A  118A         
  1077                           	line	209
  1078                           	
  1079  07F9                     l6457:	
  1080                           ;newmain.c: 209: lcd_puts("Start!");
  1081  07F9  3001               	movlw	((STR_1-__stringbase))&0ffh
  1082  07FA  120A  118A  2435   	fcall	_lcd_puts
              120A  118A         
  1083                           	line	211
  1084                           	
  1085  07FF                     l1542:	
  1086  07FF  0008               	return
  1087                           	opt stack 0
  1088                           GLOBAL	__end_of_doDelay
  1089  0800                     	__end_of_doDelay:
  1090 ;; =============== function _doDelay ends ============
  1091                           
  1092                           	signat	_doDelay,88
  1093                           	global	_lcd_init
  1094                           psect	text415,local,class=CODE,delta=2
  1095                           global __ptext415
  1096  053B                     __ptext415:
  1097                           
  1098 ;; *************** function _lcd_init *****************
  1099 ;; Defined at:
  1100 ;;		line 93 in file "lcd.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;  init_value      1    6[COMMON] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;		None               void
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, pclath, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1114 ;;      Params:         0       0       0       0       0
  1115 ;;      Locals:         1       0       0       0       0
  1116 ;;      Temps:          2       0       0       0       0
  1117 ;;      Totals:         3       0       0       0       0
  1118 ;;Total ram usage:        3 bytes
  1119 ;; Hardware stack levels used:    1
  1120 ;; Hardware stack levels required when called:    2
  1121 ;; This function calls:
  1122 ;;		_lcd_write
  1123 ;;		_lcd_clear
  1124 ;; This function is called by:
  1125 ;;		_main
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           psect	text415
  1129                           	file	"lcd.c"
  1130                           	line	93
  1131                           	global	__size_of_lcd_init
  1132  0056                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1133                           	
  1134  053B                     _lcd_init:	
  1135                           	opt	stack 5
  1136                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1137                           	line	96
  1138                           	
  1139  053B                     l6405:	
  1140                           ;lcd.c: 94: char init_value;
  1141                           ;lcd.c: 96: ADCON1 = 0x06;
  1142  053B  3006               	movlw	(06h)
  1143  053C  1683               	bsf	status, 5	;RP0=1, select bank1
  1144  053D  1303               	bcf	status, 6	;RP1=0, select bank1
  1145  053E  009F               	movwf	(159)^080h	;volatile
  1146                           	line	98
  1147                           ;lcd.c: 98: init_value = 0x3;
  1148  053F  3003               	movlw	(03h)
  1149  0540  00F4               	movwf	(??_lcd_init+0)+0
  1150  0541  0874               	movf	(??_lcd_init+0)+0,w
  1151  0542  00F6               	movwf	(lcd_init@init_value)
  1152                           	line	99
  1153                           	
  1154  0543                     l6407:	
  1155                           ;lcd.c: 99: TRISA=0;
  1156  0543  0185               	clrf	(133)^080h	;volatile
  1157                           	line	100
  1158                           	
  1159  0544                     l6409:	
  1160                           ;lcd.c: 100: TRISD=0;
  1161  0544  0188               	clrf	(136)^080h	;volatile
  1162                           	line	101
  1163                           	
  1164  0545                     l6411:	
  1165                           ;lcd.c: 101: RA3 = 0;
  1166  0545  1283               	bcf	status, 5	;RP0=0, select bank0
  1167  0546  1303               	bcf	status, 6	;RP1=0, select bank0
  1168  0547  1185               	bcf	(43/8),(43)&7
  1169                           	line	102
  1170                           	
  1171  0548                     l6413:	
  1172                           ;lcd.c: 102: RA1 = 0;
  1173  0548  1085               	bcf	(41/8),(41)&7
  1174                           	line	103
  1175                           	
  1176  0549                     l6415:	
  1177                           ;lcd.c: 103: RA2 = 0;
  1178  0549  1105               	bcf	(42/8),(42)&7
  1179                           	line	105
  1180                           ;lcd.c: 105: _delay((unsigned long)((15)*(4000000/4000.0)));
  1181                           	opt asmopt_off
  1182  054A  3014               movlw	20
  1183  054B  00F5               movwf	((??_lcd_init+0)+0+1),f
  1184  054C  3079               	movlw	121
  1185  054D  00F4               movwf	((??_lcd_init+0)+0),f
  1186  054E                     u3277:
  1187  054E  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1188  054F  2D4E               	goto	u3277
  1189  0550  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1190  0551  2D4E               	goto	u3277
  1191  0552  2D53               	nop2
  1192                           opt asmopt_on
  1193                           
  1194                           	line	106
  1195                           ;lcd.c: 106: PORTD = init_value;
  1196  0553  0876               	movf	(lcd_init@init_value),w
  1197  0554  1283               	bcf	status, 5	;RP0=0, select bank0
  1198  0555  1303               	bcf	status, 6	;RP1=0, select bank0
  1199  0556  0088               	movwf	(8)	;volatile
  1200                           	line	107
  1201                           	
  1202  0557                     l6417:	
  1203                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
  1204  0557  1485               	bsf	(41/8),(41)&7
  1205                           	
  1206  0558                     l6419:	
  1207  0558  1085               	bcf	(41/8),(41)&7
  1208                           	line	108
  1209                           ;lcd.c: 108: _delay((unsigned long)((5)*(4000000/4000.0)));
  1210                           	opt asmopt_off
  1211  0559  3007               movlw	7
  1212  055A  00F5               movwf	((??_lcd_init+0)+0+1),f
  1213  055B  307D               	movlw	125
  1214  055C  00F4               movwf	((??_lcd_init+0)+0),f
  1215  055D                     u3287:
  1216  055D  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1217  055E  2D5D               	goto	u3287
  1218  055F  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1219  0560  2D5D               	goto	u3287
  1220                           opt asmopt_on
  1221                           
  1222                           	line	109
  1223                           	
  1224  0561                     l6421:	
  1225                           ;lcd.c: 109: ((RA1 = 1),(RA1=0));
  1226  0561  1283               	bcf	status, 5	;RP0=0, select bank0
  1227  0562  1303               	bcf	status, 6	;RP1=0, select bank0
  1228  0563  1485               	bsf	(41/8),(41)&7
  1229                           	
  1230  0564                     l6423:	
  1231  0564  1085               	bcf	(41/8),(41)&7
  1232                           	line	110
  1233                           ;lcd.c: 110: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1234                           	opt asmopt_off
  1235  0565  3042               movlw	66
  1236  0566  00F4               movwf	(??_lcd_init+0)+0,f
  1237  0567                     u3297:
  1238  0567  0BF4               decfsz	(??_lcd_init+0)+0,f
  1239  0568  2D67               	goto	u3297
  1240  0569  0064               	clrwdt
  1241                           opt asmopt_on
  1242                           
  1243                           	line	111
  1244                           	
  1245  056A                     l6425:	
  1246                           ;lcd.c: 111: ((RA1 = 1),(RA1=0));
  1247  056A  1283               	bcf	status, 5	;RP0=0, select bank0
  1248  056B  1303               	bcf	status, 6	;RP1=0, select bank0
  1249  056C  1485               	bsf	(41/8),(41)&7
  1250                           	
  1251  056D                     l6427:	
  1252  056D  1085               	bcf	(41/8),(41)&7
  1253                           	line	112
  1254                           ;lcd.c: 112: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1255                           	opt asmopt_off
  1256  056E  3042               movlw	66
  1257  056F  00F4               movwf	(??_lcd_init+0)+0,f
  1258  0570                     u3307:
  1259  0570  0BF4               decfsz	(??_lcd_init+0)+0,f
  1260  0571  2D70               	goto	u3307
  1261  0572  0064               	clrwdt
  1262                           opt asmopt_on
  1263                           
  1264                           	line	113
  1265                           ;lcd.c: 113: PORTD = 2;
  1266  0573  3002               	movlw	(02h)
  1267  0574  1283               	bcf	status, 5	;RP0=0, select bank0
  1268  0575  1303               	bcf	status, 6	;RP1=0, select bank0
  1269  0576  0088               	movwf	(8)	;volatile
  1270                           	line	114
  1271                           	
  1272  0577                     l6429:	
  1273                           ;lcd.c: 114: ((RA1 = 1),(RA1=0));
  1274  0577  1485               	bsf	(41/8),(41)&7
  1275                           	
  1276  0578                     l6431:	
  1277  0578  1085               	bcf	(41/8),(41)&7
  1278                           	line	116
  1279                           	
  1280  0579                     l6433:	
  1281                           ;lcd.c: 116: lcd_write(0x28);
  1282  0579  3028               	movlw	(028h)
  1283  057A  120A  118A  23F9   	fcall	_lcd_write
              120A  118A         
  1284                           	line	117
  1285                           	
  1286  057F                     l6435:	
  1287                           ;lcd.c: 117: lcd_write(0xF);
  1288  057F  300F               	movlw	(0Fh)
  1289  0580  120A  118A  23F9   	fcall	_lcd_write
              120A  118A         
  1290                           	line	118
  1291                           	
  1292  0585                     l6437:	
  1293                           ;lcd.c: 118: lcd_clear();
  1294  0585  120A  118A  23E6   	fcall	_lcd_clear
              120A  118A         
  1295                           	line	119
  1296                           	
  1297  058A                     l6439:	
  1298                           ;lcd.c: 119: lcd_write(0x6);
  1299  058A  3006               	movlw	(06h)
  1300  058B  120A  118A  23F9   	fcall	_lcd_write
              120A  118A         
  1301                           	line	120
  1302                           	
  1303  0590                     l3080:	
  1304  0590  0008               	return
  1305                           	opt stack 0
  1306                           GLOBAL	__end_of_lcd_init
  1307  0591                     	__end_of_lcd_init:
  1308 ;; =============== function _lcd_init ends ============
  1309                           
  1310                           	signat	_lcd_init,88
  1311                           	global	_lcdCountdown
  1312                           psect	text416,local,class=CODE,delta=2
  1313                           global __ptext416
  1314  03D8                     __ptext416:
  1315                           
  1316 ;; *************** function _lcdCountdown *****************
  1317 ;; Defined at:
  1318 ;;		line 214 in file "newmain.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  t               1    wreg     unsigned char 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  t               1    3[COMMON] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;		None               void
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0, pclath, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       0       0       0       0
  1333 ;;      Locals:         1       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0
  1335 ;;      Totals:         1       0       0       0       0
  1336 ;;Total ram usage:        1 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    2
  1339 ;; This function calls:
  1340 ;;		_lcd_goto
  1341 ;;		_lcd_putch
  1342 ;; This function is called by:
  1343 ;;		_doDelay
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           psect	text416
  1347                           	file	"newmain.c"
  1348                           	line	214
  1349                           	global	__size_of_lcdCountdown
  1350  000E                     	__size_of_lcdCountdown	equ	__end_of_lcdCountdown-_lcdCountdown
  1351                           	
  1352  03D8                     _lcdCountdown:	
  1353                           	opt	stack 4
  1354                           ; Regs used in _lcdCountdown: [wreg+status,2+status,0+pclath+cstack]
  1355                           ;lcdCountdown@t stored from wreg
  1356  03D8  00F3               	movwf	(lcdCountdown@t)
  1357                           	line	215
  1358                           	
  1359  03D9                     l6403:	
  1360                           ;newmain.c: 215: lcd_goto(0);
  1361  03D9  3000               	movlw	(0)
  1362  03DA  120A  118A  23BF   	fcall	_lcd_goto
              120A  118A         
  1363                           	line	216
  1364                           ;newmain.c: 216: lcd_putch(t);
  1365  03DF  0873               	movf	(lcdCountdown@t),w
  1366  03E0  120A  118A  23B4   	fcall	_lcd_putch
              120A  118A         
  1367                           	line	217
  1368                           	
  1369  03E5                     l1545:	
  1370  03E5  0008               	return
  1371                           	opt stack 0
  1372                           GLOBAL	__end_of_lcdCountdown
  1373  03E6                     	__end_of_lcdCountdown:
  1374 ;; =============== function _lcdCountdown ends ============
  1375                           
  1376                           	signat	_lcdCountdown,4216
  1377                           	global	_lcd_clear
  1378                           psect	text417,local,class=CODE,delta=2
  1379                           global __ptext417
  1380  03E6                     __ptext417:
  1381                           
  1382 ;; *************** function _lcd_clear *****************
  1383 ;; Defined at:
  1384 ;;		line 53 in file "lcd.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;		None               void
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       0       0       0
  1399 ;;      Locals:         0       0       0       0       0
  1400 ;;      Temps:          2       0       0       0       0
  1401 ;;      Totals:         2       0       0       0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    1
  1405 ;; This function calls:
  1406 ;;		_lcd_write
  1407 ;; This function is called by:
  1408 ;;		_lcd_init
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           psect	text417
  1412                           	file	"lcd.c"
  1413                           	line	53
  1414                           	global	__size_of_lcd_clear
  1415  0013                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1416                           	
  1417  03E6                     _lcd_clear:	
  1418                           	opt	stack 5
  1419                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1420                           	line	54
  1421                           	
  1422  03E6                     l6397:	
  1423                           ;lcd.c: 54: RA3 = 0;
  1424  03E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1425  03E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1426  03E8  1185               	bcf	(43/8),(43)&7
  1427                           	line	55
  1428                           	
  1429  03E9                     l6399:	
  1430                           ;lcd.c: 55: lcd_write(0x1);
  1431  03E9  3001               	movlw	(01h)
  1432  03EA  120A  118A  23F9   	fcall	_lcd_write
              120A  118A         
  1433                           	line	56
  1434                           	
  1435  03EF                     l6401:	
  1436                           ;lcd.c: 56: _delay((unsigned long)((2)*(4000000/4000.0)));
  1437                           	opt asmopt_off
  1438  03EF  3003               movlw	3
  1439  03F0  00F3               movwf	((??_lcd_clear+0)+0+1),f
  1440  03F1  3097               	movlw	151
  1441  03F2  00F2               movwf	((??_lcd_clear+0)+0),f
  1442  03F3                     u3317:
  1443  03F3  0BF2               	decfsz	((??_lcd_clear+0)+0),f
  1444  03F4  2BF3               	goto	u3317
  1445  03F5  0BF3               	decfsz	((??_lcd_clear+0)+0+1),f
  1446  03F6  2BF3               	goto	u3317
  1447  03F7  2BF8               	nop2
  1448                           opt asmopt_on
  1449                           
  1450                           	line	57
  1451                           	
  1452  03F8                     l3065:	
  1453  03F8  0008               	return
  1454                           	opt stack 0
  1455                           GLOBAL	__end_of_lcd_clear
  1456  03F9                     	__end_of_lcd_clear:
  1457 ;; =============== function _lcd_clear ends ============
  1458                           
  1459                           	signat	_lcd_clear,88
  1460                           	global	_lcd_putch
  1461                           psect	text418,local,class=CODE,delta=2
  1462                           global __ptext418
  1463  03B4                     __ptext418:
  1464                           
  1465 ;; *************** function _lcd_putch *****************
  1466 ;; Defined at:
  1467 ;;		line 73 in file "lcd.c"
  1468 ;; Parameters:    Size  Location     Type
  1469 ;;  c               1    wreg     unsigned char 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;  c               1    2[COMMON] unsigned char 
  1472 ;; Return value:  Size  Location     Type
  1473 ;;		None               void
  1474 ;; Registers used:
  1475 ;;		wreg, status,2, status,0, pclath, cstack
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1481 ;;      Params:         0       0       0       0       0
  1482 ;;      Locals:         1       0       0       0       0
  1483 ;;      Temps:          0       0       0       0       0
  1484 ;;      Totals:         1       0       0       0       0
  1485 ;;Total ram usage:        1 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    1
  1488 ;; This function calls:
  1489 ;;		_lcd_write
  1490 ;; This function is called by:
  1491 ;;		_lcdCountdown
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           psect	text418
  1495                           	file	"lcd.c"
  1496                           	line	73
  1497                           	global	__size_of_lcd_putch
  1498  000B                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  1499                           	
  1500  03B4                     _lcd_putch:	
  1501                           	opt	stack 4
  1502                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1503                           ;lcd_putch@c stored from wreg
  1504  03B4  00F2               	movwf	(lcd_putch@c)
  1505                           	line	74
  1506                           	
  1507  03B5                     l6393:	
  1508                           ;lcd.c: 74: RA3 = 1;
  1509  03B5  1283               	bcf	status, 5	;RP0=0, select bank0
  1510  03B6  1303               	bcf	status, 6	;RP1=0, select bank0
  1511  03B7  1585               	bsf	(43/8),(43)&7
  1512                           	line	75
  1513                           	
  1514  03B8                     l6395:	
  1515                           ;lcd.c: 75: lcd_write( c );
  1516  03B8  0872               	movf	(lcd_putch@c),w
  1517  03B9  120A  118A  23F9   	fcall	_lcd_write
              120A  118A         
  1518                           	line	76
  1519                           	
  1520  03BE                     l3074:	
  1521  03BE  0008               	return
  1522                           	opt stack 0
  1523                           GLOBAL	__end_of_lcd_putch
  1524  03BF                     	__end_of_lcd_putch:
  1525 ;; =============== function _lcd_putch ends ============
  1526                           
  1527                           	signat	_lcd_putch,4216
  1528                           	global	_lcd_puts
  1529                           psect	text419,local,class=CODE,delta=2
  1530                           global __ptext419
  1531  0435                     __ptext419:
  1532                           
  1533 ;; *************** function _lcd_puts *****************
  1534 ;; Defined at:
  1535 ;;		line 63 in file "lcd.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  s               1    wreg     PTR const unsigned char 
  1538 ;;		 -> STR_1(7), 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  s               1    3[COMMON] PTR const unsigned char 
  1541 ;;		 -> STR_1(7), 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;		None               void
  1544 ;; Registers used:
  1545 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0
  1553 ;;      Temps:          1       0       0       0       0
  1554 ;;      Totals:         2       0       0       0       0
  1555 ;;Total ram usage:        2 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    1
  1558 ;; This function calls:
  1559 ;;		_lcd_write
  1560 ;; This function is called by:
  1561 ;;		_doDelay
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           psect	text419
  1565                           	file	"lcd.c"
  1566                           	line	63
  1567                           	global	__size_of_lcd_puts
  1568  0024                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1569                           	
  1570  0435                     _lcd_puts:	
  1571                           	opt	stack 5
  1572                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1573                           ;lcd_puts@s stored from wreg
  1574  0435  00F3               	movwf	(lcd_puts@s)
  1575                           	line	64
  1576                           	
  1577  0436                     l6385:	
  1578                           ;lcd.c: 64: RA3 = 1;
  1579  0436  1283               	bcf	status, 5	;RP0=0, select bank0
  1580  0437  1303               	bcf	status, 6	;RP1=0, select bank0
  1581  0438  1585               	bsf	(43/8),(43)&7
  1582                           	line	65
  1583                           ;lcd.c: 65: while(*s)
  1584  0439  2C4B               	goto	l6391
  1585                           	
  1586  043A                     l3069:	
  1587                           	line	66
  1588                           	
  1589  043A                     l6387:	
  1590                           ;lcd.c: 66: lcd_write(*s++);
  1591  043A  0873               	movf	(lcd_puts@s),w
  1592  043B  0084               	movwf	fsr0
  1593  043C  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1594  0441  120A  118A  23F9   	fcall	_lcd_write
              120A  118A         
  1595                           	
  1596  0446                     l6389:	
  1597  0446  3001               	movlw	(01h)
  1598  0447  00F2               	movwf	(??_lcd_puts+0)+0
  1599  0448  0872               	movf	(??_lcd_puts+0)+0,w
  1600  0449  07F3               	addwf	(lcd_puts@s),f
  1601  044A  2C4B               	goto	l6391
  1602                           	
  1603  044B                     l3068:	
  1604                           	line	65
  1605                           	
  1606  044B                     l6391:	
  1607  044B  0873               	movf	(lcd_puts@s),w
  1608  044C  0084               	movwf	fsr0
  1609  044D  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1610  0452  3800               	iorlw	0
  1611  0453  1D03               	skipz
  1612  0454  2C56               	goto	u3241
  1613  0455  2C57               	goto	u3240
  1614  0456                     u3241:
  1615  0456  2C3A               	goto	l6387
  1616  0457                     u3240:
  1617  0457  2C58               	goto	l3071
  1618                           	
  1619  0458                     l3070:	
  1620                           	line	67
  1621                           	
  1622  0458                     l3071:	
  1623  0458  0008               	return
  1624                           	opt stack 0
  1625                           GLOBAL	__end_of_lcd_puts
  1626  0459                     	__end_of_lcd_puts:
  1627 ;; =============== function _lcd_puts ends ============
  1628                           
  1629                           	signat	_lcd_puts,4216
  1630                           	global	_lcd_goto
  1631                           psect	text420,local,class=CODE,delta=2
  1632                           global __ptext420
  1633  03BF                     __ptext420:
  1634                           
  1635 ;; *************** function _lcd_goto *****************
  1636 ;; Defined at:
  1637 ;;		line 85 in file "lcd.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;  pos             1    wreg     unsigned char 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  pos             1    2[COMMON] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;		None               void
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, pclath, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1651 ;;      Params:         0       0       0       0       0
  1652 ;;      Locals:         1       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0
  1654 ;;      Totals:         1       0       0       0       0
  1655 ;;Total ram usage:        1 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    1
  1658 ;; This function calls:
  1659 ;;		_lcd_write
  1660 ;; This function is called by:
  1661 ;;		_doDelay
  1662 ;;		_lcdCountdown
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           psect	text420
  1666                           	file	"lcd.c"
  1667                           	line	85
  1668                           	global	__size_of_lcd_goto
  1669  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1670                           	
  1671  03BF                     _lcd_goto:	
  1672                           	opt	stack 5
  1673                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1674                           ;lcd_goto@pos stored from wreg
  1675  03BF  00F2               	movwf	(lcd_goto@pos)
  1676                           	line	86
  1677                           	
  1678  03C0                     l6381:	
  1679                           ;lcd.c: 86: RA3 = 0;
  1680  03C0  1283               	bcf	status, 5	;RP0=0, select bank0
  1681  03C1  1303               	bcf	status, 6	;RP1=0, select bank0
  1682  03C2  1185               	bcf	(43/8),(43)&7
  1683                           	line	87
  1684                           	
  1685  03C3                     l6383:	
  1686                           ;lcd.c: 87: lcd_write(0x80+pos);
  1687  03C3  0872               	movf	(lcd_goto@pos),w
  1688  03C4  3E80               	addlw	080h
  1689  03C5  120A  118A  23F9   	fcall	_lcd_write
              120A  118A         
  1690                           	line	88
  1691                           	
  1692  03CA                     l3077:	
  1693  03CA  0008               	return
  1694                           	opt stack 0
  1695                           GLOBAL	__end_of_lcd_goto
  1696  03CB                     	__end_of_lcd_goto:
  1697 ;; =============== function _lcd_goto ends ============
  1698                           
  1699                           	signat	_lcd_goto,4216
  1700                           	global	___awtoft
  1701                           psect	text421,local,class=CODE,delta=2
  1702                           global __ptext421
  1703  047F                     __ptext421:
  1704                           
  1705 ;; *************** function ___awtoft *****************
  1706 ;; Defined at:
  1707 ;;		line 33 in file "/usr/hitech/picc/9.82/sources/awtoft.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;  c               2    6[BANK0 ] int 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  sign            1   11[BANK0 ] unsigned char 
  1712 ;; Return value:  Size  Location     Type
  1713 ;;                  3    6[BANK0 ] float 
  1714 ;; Registers used:
  1715 ;;		wreg, status,2, status,0, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1721 ;;      Params:         0       3       0       0       0
  1722 ;;      Locals:         0       1       0       0       0
  1723 ;;      Temps:          0       2       0       0       0
  1724 ;;      Totals:         0       6       0       0       0
  1725 ;;Total ram usage:        6 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    1
  1728 ;; This function calls:
  1729 ;;		___ftpack
  1730 ;; This function is called by:
  1731 ;;		_main
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           psect	text421
  1735                           	file	"/usr/hitech/picc/9.82/sources/awtoft.c"
  1736                           	line	33
  1737                           	global	__size_of___awtoft
  1738  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  1739                           	
  1740  047F                     ___awtoft:	
  1741                           	opt	stack 6
  1742                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1743                           	line	36
  1744                           	
  1745  047F                     l6373:	
  1746  047F  1283               	bcf	status, 5	;RP0=0, select bank0
  1747  0480  1303               	bcf	status, 6	;RP1=0, select bank0
  1748  0481  01AB               	clrf	(___awtoft@sign)
  1749                           	line	37
  1750  0482  1FA7               	btfss	(___awtoft@c+1),7
  1751  0483  2C85               	goto	u3231
  1752  0484  2C86               	goto	u3230
  1753  0485                     u3231:
  1754  0485  2C8F               	goto	l6377
  1755  0486                     u3230:
  1756                           	line	38
  1757                           	
  1758  0486                     l6375:	
  1759  0486  09A6               	comf	(___awtoft@c),f
  1760  0487  09A7               	comf	(___awtoft@c+1),f
  1761  0488  0AA6               	incf	(___awtoft@c),f
  1762  0489  1903               	skipnz
  1763  048A  0AA7               	incf	(___awtoft@c+1),f
  1764                           	line	39
  1765  048B  01AB               	clrf	(___awtoft@sign)
  1766  048C  1403               	bsf	status,0
  1767  048D  0DAB               	rlf	(___awtoft@sign),f
  1768  048E  2C8F               	goto	l6377
  1769                           	line	40
  1770                           	
  1771  048F                     l4653:	
  1772                           	line	41
  1773                           	
  1774  048F                     l6377:	
  1775  048F  0826               	movf	(___awtoft@c),w
  1776  0490  00F0               	movwf	(?___ftpack)
  1777  0491  0827               	movf	(___awtoft@c+1),w
  1778  0492  00F1               	movwf	(?___ftpack+1)
  1779  0493  01F2               	clrf	(?___ftpack+2)
  1780  0494  308E               	movlw	(08Eh)
  1781  0495  00A9               	movwf	(??___awtoft+0)+0
  1782  0496  0829               	movf	(??___awtoft+0)+0,w
  1783  0497  00F3               	movwf	0+(?___ftpack)+03h
  1784  0498  082B               	movf	(___awtoft@sign),w
  1785  0499  00AA               	movwf	(??___awtoft+1)+0
  1786  049A  082A               	movf	(??___awtoft+1)+0,w
  1787  049B  00F4               	movwf	0+(?___ftpack)+04h
  1788  049C  120A  118A  2601   	fcall	___ftpack
              120A  118A         
  1789  04A1  0870               	movf	(0+(?___ftpack)),w
  1790  04A2  1283               	bcf	status, 5	;RP0=0, select bank0
  1791  04A3  1303               	bcf	status, 6	;RP1=0, select bank0
  1792  04A4  00A6               	movwf	(?___awtoft)
  1793  04A5  0871               	movf	(1+(?___ftpack)),w
  1794  04A6  00A7               	movwf	(?___awtoft+1)
  1795  04A7  0872               	movf	(2+(?___ftpack)),w
  1796  04A8  00A8               	movwf	(?___awtoft+2)
  1797  04A9  2CAA               	goto	l4654
  1798                           	
  1799  04AA                     l6379:	
  1800                           	line	42
  1801                           	
  1802  04AA                     l4654:	
  1803  04AA  0008               	return
  1804                           	opt stack 0
  1805                           GLOBAL	__end_of___awtoft
  1806  04AB                     	__end_of___awtoft:
  1807 ;; =============== function ___awtoft ends ============
  1808                           
  1809                           	signat	___awtoft,4219
  1810                           	global	_lcd_write
  1811                           psect	text422,local,class=CODE,delta=2
  1812                           global __ptext422
  1813  03F9                     __ptext422:
  1814                           
  1815 ;; *************** function _lcd_write *****************
  1816 ;; Defined at:
  1817 ;;		line 39 in file "lcd.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  c               1    wreg     unsigned char 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  c               1    1[COMMON] unsigned char 
  1822 ;; Return value:  Size  Location     Type
  1823 ;;		None               void
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1831 ;;      Params:         0       0       0       0       0
  1832 ;;      Locals:         1       0       0       0       0
  1833 ;;      Temps:          1       0       0       0       0
  1834 ;;      Totals:         2       0       0       0       0
  1835 ;;Total ram usage:        2 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_lcd_clear
  1841 ;;		_lcd_puts
  1842 ;;		_lcd_putch
  1843 ;;		_lcd_goto
  1844 ;;		_lcd_init
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           psect	text422
  1848                           	file	"lcd.c"
  1849                           	line	39
  1850                           	global	__size_of_lcd_write
  1851  001A                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  1852                           	
  1853  03F9                     _lcd_write:	
  1854                           	opt	stack 5
  1855                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  1856                           ;lcd_write@c stored from wreg
  1857  03F9  00F1               	movwf	(lcd_write@c)
  1858                           	line	40
  1859                           	
  1860  03FA                     l6359:	
  1861                           ;lcd.c: 40: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1862                           	opt asmopt_off
  1863  03FA  300D               movlw	13
  1864  03FB  00F0               movwf	(??_lcd_write+0)+0,f
  1865  03FC                     u3327:
  1866  03FC  0BF0               decfsz	(??_lcd_write+0)+0,f
  1867  03FD  2BFC               	goto	u3327
  1868                           opt asmopt_on
  1869                           
  1870                           	line	41
  1871                           	
  1872  03FE                     l6361:	
  1873                           ;lcd.c: 41: PORTD = ( ( c >> 4 ) & 0x0F );
  1874  03FE  0871               	movf	(lcd_write@c),w
  1875  03FF  00F0               	movwf	(??_lcd_write+0)+0
  1876  0400  3004               	movlw	04h
  1877  0401                     u3225:
  1878  0401  1003               	clrc
  1879  0402  0CF0               	rrf	(??_lcd_write+0)+0,f
  1880  0403  3EFF               	addlw	-1
  1881  0404  1D03               	skipz
  1882  0405  2C01               	goto	u3225
  1883  0406  0870               	movf	0+(??_lcd_write+0)+0,w
  1884  0407  390F               	andlw	0Fh
  1885  0408  1283               	bcf	status, 5	;RP0=0, select bank0
  1886  0409  1303               	bcf	status, 6	;RP1=0, select bank0
  1887  040A  0088               	movwf	(8)	;volatile
  1888                           	line	42
  1889                           	
  1890  040B                     l6363:	
  1891                           ;lcd.c: 42: ((RA1 = 1),(RA1=0));
  1892  040B  1485               	bsf	(41/8),(41)&7
  1893                           	
  1894  040C                     l6365:	
  1895  040C  1085               	bcf	(41/8),(41)&7
  1896                           	line	43
  1897                           	
  1898  040D                     l6367:	
  1899                           ;lcd.c: 43: PORTD = ( c & 0x0F );
  1900  040D  0871               	movf	(lcd_write@c),w
  1901  040E  390F               	andlw	0Fh
  1902  040F  0088               	movwf	(8)	;volatile
  1903                           	line	44
  1904                           	
  1905  0410                     l6369:	
  1906                           ;lcd.c: 44: ((RA1 = 1),(RA1=0));
  1907  0410  1485               	bsf	(41/8),(41)&7
  1908                           	
  1909  0411                     l6371:	
  1910  0411  1085               	bcf	(41/8),(41)&7
  1911                           	line	45
  1912                           	
  1913  0412                     l3062:	
  1914  0412  0008               	return
  1915                           	opt stack 0
  1916                           GLOBAL	__end_of_lcd_write
  1917  0413                     	__end_of_lcd_write:
  1918 ;; =============== function _lcd_write ends ============
  1919                           
  1920                           	signat	_lcd_write,4216
  1921                           	global	_searchTrack
  1922                           psect	text423,local,class=CODE,delta=2
  1923                           global __ptext423
  1924  04D8                     __ptext423:
  1925                           
  1926 ;; *************** function _searchTrack *****************
  1927 ;; Defined at:
  1928 ;;		line 109 in file "newmain.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  2  1529[COMMON] int 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0
  1945 ;;      Totals:         0       0       0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    1
  1949 ;; This function calls:
  1950 ;;		_controlMotor
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           psect	text423
  1956                           	file	"newmain.c"
  1957                           	line	109
  1958                           	global	__size_of_searchTrack
  1959  0030                     	__size_of_searchTrack	equ	__end_of_searchTrack-_searchTrack
  1960                           	
  1961  04D8                     _searchTrack:	
  1962                           	opt	stack 6
  1963                           ; Regs used in _searchTrack: [wreg+status,2+status,0+pclath+cstack]
  1964                           	line	110
  1965                           	
  1966  04D8                     l6351:	
  1967                           ;newmain.c: 110: if (lastMotor == 1)
  1968  04D8  3001               	movlw	01h
  1969  04D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1970  04DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1971  04DB  0642               	xorwf	(_lastMotor),w
  1972  04DC  0443               	iorwf	(_lastMotor+1),w
  1973  04DD  1D03               	skipz
  1974  04DE  2CE0               	goto	u3201
  1975  04DF  2CE1               	goto	u3200
  1976  04E0                     u3201:
  1977  04E0  2CEF               	goto	l6355
  1978  04E1                     u3200:
  1979                           	line	112
  1980                           	
  1981  04E1                     l6353:	
  1982                           ;newmain.c: 111: {
  1983                           ;newmain.c: 112: controlMotor(1, 0);
  1984  04E1  3001               	movlw	low(01h)
  1985  04E2  00F0               	movwf	(?_controlMotor)
  1986  04E3  3000               	movlw	high(01h)
  1987  04E4  00F1               	movwf	((?_controlMotor))+1
  1988  04E5  3000               	movlw	low(0)
  1989  04E6  00F2               	movwf	0+(?_controlMotor)+02h
  1990  04E7  3000               	movlw	high(0)
  1991  04E8  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  1992  04E9  120A  118A  2413   	fcall	_controlMotor
              120A  118A         
  1993                           	line	113
  1994                           ;newmain.c: 113: }
  1995  04EE  2D07               	goto	l1533
  1996                           	line	114
  1997                           	
  1998  04EF                     l1530:	
  1999                           	
  2000  04EF                     l6355:	
  2001                           ;newmain.c: 114: else if (lastMotor == 2)
  2002  04EF  3002               	movlw	02h
  2003  04F0  1283               	bcf	status, 5	;RP0=0, select bank0
  2004  04F1  1303               	bcf	status, 6	;RP1=0, select bank0
  2005  04F2  0642               	xorwf	(_lastMotor),w
  2006  04F3  0443               	iorwf	(_lastMotor+1),w
  2007  04F4  1D03               	skipz
  2008  04F5  2CF7               	goto	u3211
  2009  04F6  2CF8               	goto	u3210
  2010  04F7                     u3211:
  2011  04F7  2D07               	goto	l1533
  2012  04F8                     u3210:
  2013                           	line	116
  2014                           	
  2015  04F8                     l6357:	
  2016                           ;newmain.c: 115: {
  2017                           ;newmain.c: 116: controlMotor(0, 1);
  2018  04F8  3000               	movlw	low(0)
  2019  04F9  00F0               	movwf	(?_controlMotor)
  2020  04FA  3000               	movlw	high(0)
  2021  04FB  00F1               	movwf	((?_controlMotor))+1
  2022  04FC  3001               	movlw	low(01h)
  2023  04FD  00F2               	movwf	0+(?_controlMotor)+02h
  2024  04FE  3000               	movlw	high(01h)
  2025  04FF  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  2026  0500  120A  118A  2413   	fcall	_controlMotor
              120A  118A         
  2027  0505  2D07               	goto	l1533
  2028                           	line	117
  2029                           	
  2030  0506                     l1532:	
  2031  0506  2D07               	goto	l1533
  2032                           	line	118
  2033                           	
  2034  0507                     l1531:	
  2035                           	
  2036  0507                     l1533:	
  2037  0507  0008               	return
  2038                           	opt stack 0
  2039                           GLOBAL	__end_of_searchTrack
  2040  0508                     	__end_of_searchTrack:
  2041 ;; =============== function _searchTrack ends ============
  2042                           
  2043                           	signat	_searchTrack,90
  2044                           	global	___ftge
  2045                           psect	text424,local,class=CODE,delta=2
  2046                           global __ptext424
  2047  0591                     __ptext424:
  2048                           
  2049 ;; *************** function ___ftge *****************
  2050 ;; Defined at:
  2051 ;;		line 5 in file "/usr/hitech/picc/9.82/sources/ftge.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  ff1             3    8[COMMON] float 
  2054 ;;  ff2             3   11[COMMON] float 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;		None
  2057 ;; Return value:  Size  Location     Type
  2058 ;;		None               void
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2066 ;;      Params:         6       0       0       0       0
  2067 ;;      Locals:         0       0       0       0       0
  2068 ;;      Temps:          0       6       0       0       0
  2069 ;;      Totals:         6       6       0       0       0
  2070 ;;Total ram usage:       12 bytes
  2071 ;; Hardware stack levels used:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_main
  2076 ;; This function uses a non-reentrant model
  2077 ;;
  2078                           psect	text424
  2079                           	file	"/usr/hitech/picc/9.82/sources/ftge.c"
  2080                           	line	5
  2081                           	global	__size_of___ftge
  2082  0070                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  2083                           	
  2084  0591                     ___ftge:	
  2085                           	opt	stack 7
  2086                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2087                           	line	6
  2088                           	
  2089  0591                     l6285:	
  2090  0591  1FFA               	btfss	(___ftge@ff1+2),(23)&7
  2091  0592  2D94               	goto	u3091
  2092  0593  2D95               	goto	u3090
  2093  0594                     u3091:
  2094  0594  2DBD               	goto	l6289
  2095  0595                     u3090:
  2096                           	line	7
  2097                           	
  2098  0595                     l6287:	
  2099  0595  3000               	movlw	0
  2100  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  2101  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  2102  0598  00A0               	movwf	((??___ftge+0)+0)
  2103  0599  3000               	movlw	0
  2104  059A  00A1               	movwf	((??___ftge+0)+0+1)
  2105  059B  3080               	movlw	080h
  2106  059C  00A2               	movwf	((??___ftge+0)+0+2)
  2107  059D  0978               	comf	(___ftge@ff1),w
  2108  059E  00A3               	movwf	(??___ftge+3)+0
  2109  059F  0979               	comf	(___ftge@ff1+1),w
  2110  05A0  00A4               	movwf	((??___ftge+3)+0+1)
  2111  05A1  097A               	comf	(___ftge@ff1+2),w
  2112  05A2  00A5               	movwf	((??___ftge+3)+0+2)
  2113  05A3  0AA3               	incf	(??___ftge+3)+0,f
  2114  05A4  1903               	skipnz
  2115  05A5  0AA4               	incf	((??___ftge+3)+0+1),f
  2116  05A6  1903               	skipnz
  2117  05A7  0AA5               	incf	((??___ftge+3)+0+2),f
  2118  05A8  0823               	movf	0+(??___ftge+3)+0,w
  2119  05A9  07A0               	addwf	(??___ftge+0)+0,f
  2120  05AA  0824               	movf	1+(??___ftge+3)+0,w
  2121  05AB  1803               	skipnc
  2122  05AC  0F24               	incfsz	1+(??___ftge+3)+0,w
  2123  05AD  2DAF               	goto	u3101
  2124  05AE  2DB0               	goto	u3102
  2125  05AF                     u3101:
  2126  05AF  07A1               	addwf	(??___ftge+0)+1,f
  2127                           	
  2128  05B0                     u3102:
  2129  05B0  0825               	movf	2+(??___ftge+3)+0,w
  2130  05B1  1803               	skipnc
  2131  05B2  0F25               	incfsz	2+(??___ftge+3)+0,w
  2132  05B3  2DB5               	goto	u3103
  2133  05B4  2DB6               	goto	u3104
  2134  05B5                     u3103:
  2135  05B5  07A2               	addwf	(??___ftge+0)+2,f
  2136                           	
  2137  05B6                     u3104:
  2138  05B6  0820               	movf	0+(??___ftge+0)+0,w
  2139  05B7  00F8               	movwf	(___ftge@ff1)
  2140  05B8  0821               	movf	1+(??___ftge+0)+0,w
  2141  05B9  00F9               	movwf	(___ftge@ff1+1)
  2142  05BA  0822               	movf	2+(??___ftge+0)+0,w
  2143  05BB  00FA               	movwf	(___ftge@ff1+2)
  2144  05BC  2DBD               	goto	l6289
  2145                           	
  2146  05BD                     l4684:	
  2147                           	line	8
  2148                           	
  2149  05BD                     l6289:	
  2150  05BD  1FFD               	btfss	(___ftge@ff2+2),(23)&7
  2151  05BE  2DC0               	goto	u3111
  2152  05BF  2DC1               	goto	u3110
  2153  05C0                     u3111:
  2154  05C0  2DE9               	goto	l6293
  2155  05C1                     u3110:
  2156                           	line	9
  2157                           	
  2158  05C1                     l6291:	
  2159  05C1  3000               	movlw	0
  2160  05C2  1283               	bcf	status, 5	;RP0=0, select bank0
  2161  05C3  1303               	bcf	status, 6	;RP1=0, select bank0
  2162  05C4  00A0               	movwf	((??___ftge+0)+0)
  2163  05C5  3000               	movlw	0
  2164  05C6  00A1               	movwf	((??___ftge+0)+0+1)
  2165  05C7  3080               	movlw	080h
  2166  05C8  00A2               	movwf	((??___ftge+0)+0+2)
  2167  05C9  097B               	comf	(___ftge@ff2),w
  2168  05CA  00A3               	movwf	(??___ftge+3)+0
  2169  05CB  097C               	comf	(___ftge@ff2+1),w
  2170  05CC  00A4               	movwf	((??___ftge+3)+0+1)
  2171  05CD  097D               	comf	(___ftge@ff2+2),w
  2172  05CE  00A5               	movwf	((??___ftge+3)+0+2)
  2173  05CF  0AA3               	incf	(??___ftge+3)+0,f
  2174  05D0  1903               	skipnz
  2175  05D1  0AA4               	incf	((??___ftge+3)+0+1),f
  2176  05D2  1903               	skipnz
  2177  05D3  0AA5               	incf	((??___ftge+3)+0+2),f
  2178  05D4  0823               	movf	0+(??___ftge+3)+0,w
  2179  05D5  07A0               	addwf	(??___ftge+0)+0,f
  2180  05D6  0824               	movf	1+(??___ftge+3)+0,w
  2181  05D7  1803               	skipnc
  2182  05D8  0F24               	incfsz	1+(??___ftge+3)+0,w
  2183  05D9  2DDB               	goto	u3121
  2184  05DA  2DDC               	goto	u3122
  2185  05DB                     u3121:
  2186  05DB  07A1               	addwf	(??___ftge+0)+1,f
  2187                           	
  2188  05DC                     u3122:
  2189  05DC  0825               	movf	2+(??___ftge+3)+0,w
  2190  05DD  1803               	skipnc
  2191  05DE  0F25               	incfsz	2+(??___ftge+3)+0,w
  2192  05DF  2DE1               	goto	u3123
  2193  05E0  2DE2               	goto	u3124
  2194  05E1                     u3123:
  2195  05E1  07A2               	addwf	(??___ftge+0)+2,f
  2196                           	
  2197  05E2                     u3124:
  2198  05E2  0820               	movf	0+(??___ftge+0)+0,w
  2199  05E3  00FB               	movwf	(___ftge@ff2)
  2200  05E4  0821               	movf	1+(??___ftge+0)+0,w
  2201  05E5  00FC               	movwf	(___ftge@ff2+1)
  2202  05E6  0822               	movf	2+(??___ftge+0)+0,w
  2203  05E7  00FD               	movwf	(___ftge@ff2+2)
  2204  05E8  2DE9               	goto	l6293
  2205                           	
  2206  05E9                     l4685:	
  2207                           	line	10
  2208                           	
  2209  05E9                     l6293:	
  2210  05E9  3080               	movlw	080h
  2211  05EA  06FA               	xorwf	(___ftge@ff1+2),f
  2212                           	line	11
  2213                           	
  2214  05EB                     l6295:	
  2215  05EB  3080               	movlw	080h
  2216  05EC  06FD               	xorwf	(___ftge@ff2+2),f
  2217                           	line	12
  2218                           	
  2219  05ED                     l6297:	
  2220  05ED  087D               	movf	(___ftge@ff2+2),w
  2221  05EE  027A               	subwf	(___ftge@ff1+2),w
  2222  05EF  1D03               	skipz
  2223  05F0  2DF7               	goto	u3135
  2224  05F1  087C               	movf	(___ftge@ff2+1),w
  2225  05F2  0279               	subwf	(___ftge@ff1+1),w
  2226  05F3  1D03               	skipz
  2227  05F4  2DF7               	goto	u3135
  2228  05F5  087B               	movf	(___ftge@ff2),w
  2229  05F6  0278               	subwf	(___ftge@ff1),w
  2230  05F7                     u3135:
  2231  05F7  1803               	skipnc
  2232  05F8  2DFA               	goto	u3131
  2233  05F9  2DFB               	goto	u3130
  2234  05FA                     u3131:
  2235  05FA  2DFD               	goto	l6301
  2236  05FB                     u3130:
  2237                           	
  2238  05FB                     l6299:	
  2239  05FB  1003               	clrc
  2240                           	
  2241  05FC  2E00               	goto	l4686
  2242                           	
  2243  05FD                     l6013:	
  2244                           	
  2245  05FD                     l6301:	
  2246  05FD  1403               	setc
  2247                           	
  2248  05FE  2E00               	goto	l4686
  2249                           	
  2250  05FF                     l6015:	
  2251  05FF  2E00               	goto	l4686
  2252                           	
  2253  0600                     l6303:	
  2254                           	line	13
  2255                           	
  2256  0600                     l4686:	
  2257  0600  0008               	return
  2258                           	opt stack 0
  2259                           GLOBAL	__end_of___ftge
  2260  0601                     	__end_of___ftge:
  2261 ;; =============== function ___ftge ends ============
  2262                           
  2263                           	signat	___ftge,8312
  2264                           	global	___ftpack
  2265                           psect	text425,local,class=CODE,delta=2
  2266                           global __ptext425
  2267  0601                     __ptext425:
  2268                           
  2269 ;; *************** function ___ftpack *****************
  2270 ;; Defined at:
  2271 ;;		line 63 in file "/usr/hitech/picc/9.82/sources/float.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  arg             3    0[COMMON] unsigned um
  2274 ;;  exp             1    3[COMMON] unsigned char 
  2275 ;;  sign            1    4[COMMON] unsigned char 
  2276 ;; Auto vars:     Size  Location     Type
  2277 ;;		None
  2278 ;; Return value:  Size  Location     Type
  2279 ;;                  3    0[COMMON] float 
  2280 ;; Registers used:
  2281 ;;		wreg, status,2, status,0
  2282 ;; Tracked objects:
  2283 ;;		On entry : 0/0
  2284 ;;		On exit  : 0/0
  2285 ;;		Unchanged: 0/0
  2286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2287 ;;      Params:         5       0       0       0       0
  2288 ;;      Locals:         0       0       0       0       0
  2289 ;;      Temps:          3       0       0       0       0
  2290 ;;      Totals:         8       0       0       0       0
  2291 ;;Total ram usage:        8 bytes
  2292 ;; Hardware stack levels used:    1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		___awtoft
  2297 ;;		___ftadd
  2298 ;;		___ftdiv
  2299 ;;		___ftmul
  2300 ;;		___lbtoft
  2301 ;;		___abtoft
  2302 ;;		___lwtoft
  2303 ;;		___altoft
  2304 ;;		___lltoft
  2305 ;;		___attoft
  2306 ;;		___lttoft
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           psect	text425
  2310                           	file	"/usr/hitech/picc/9.82/sources/float.c"
  2311                           	line	63
  2312                           	global	__size_of___ftpack
  2313  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  2314                           	
  2315  0601                     ___ftpack:	
  2316                           	opt	stack 6
  2317                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2318                           	line	64
  2319                           	
  2320  0601                     l6153:	
  2321  0601  0873               	movf	(___ftpack@exp),w
  2322  0602  1D03               	skipz
  2323  0603  2E05               	goto	u2750
  2324  0604  2E0D               	goto	l6157
  2325  0605                     u2750:
  2326                           	
  2327  0605                     l6155:	
  2328  0605  0872               	movf	(___ftpack@arg+2),w
  2329  0606  0471               	iorwf	(___ftpack@arg+1),w
  2330  0607  0470               	iorwf	(___ftpack@arg),w
  2331  0608  1D03               	skipz
  2332  0609  2E0B               	goto	u2761
  2333  060A  2E0C               	goto	u2760
  2334  060B                     u2761:
  2335  060B  2E23               	goto	l6163
  2336  060C                     u2760:
  2337  060C  2E0D               	goto	l6157
  2338                           	
  2339  060D                     l4851:	
  2340                           	line	65
  2341                           	
  2342  060D                     l6157:	
  2343  060D  3000               	movlw	0x0
  2344  060E  00F0               	movwf	(?___ftpack)
  2345  060F  3000               	movlw	0x0
  2346  0610  00F1               	movwf	(?___ftpack+1)
  2347  0611  3000               	movlw	0x0
  2348  0612  00F2               	movwf	(?___ftpack+2)
  2349  0613  2E7B               	goto	l4852
  2350                           	
  2351  0614                     l6159:	
  2352  0614  2E7B               	goto	l4852
  2353                           	
  2354  0615                     l4849:	
  2355                           	line	66
  2356  0615  2E23               	goto	l6163
  2357                           	
  2358  0616                     l4854:	
  2359                           	line	67
  2360                           	
  2361  0616                     l6161:	
  2362  0616  3001               	movlw	(01h)
  2363  0617  00F5               	movwf	(??___ftpack+0)+0
  2364  0618  0875               	movf	(??___ftpack+0)+0,w
  2365  0619  07F3               	addwf	(___ftpack@exp),f
  2366                           	line	68
  2367  061A  3001               	movlw	01h
  2368  061B                     u2775:
  2369  061B  1003               	clrc
  2370  061C  0CF2               	rrf	(___ftpack@arg+2),f
  2371  061D  0CF1               	rrf	(___ftpack@arg+1),f
  2372  061E  0CF0               	rrf	(___ftpack@arg),f
  2373  061F  3EFF               	addlw	-1
  2374  0620  1D03               	skipz
  2375  0621  2E1B               	goto	u2775
  2376                           
  2377  0622  2E23               	goto	l6163
  2378                           	line	69
  2379                           	
  2380  0623                     l4853:	
  2381                           	line	66
  2382                           	
  2383  0623                     l6163:	
  2384  0623  30FE               	movlw	low highword(0FE0000h)
  2385  0624  0572               	andwf	(___ftpack@arg+2),w
  2386  0625  1D03               	btfss	status,2
  2387  0626  2E28               	goto	u2781
  2388  0627  2E29               	goto	u2780
  2389  0628                     u2781:
  2390  0628  2E16               	goto	l6161
  2391  0629                     u2780:
  2392  0629  2E41               	goto	l4856
  2393                           	
  2394  062A                     l4855:	
  2395                           	line	70
  2396  062A  2E41               	goto	l4856
  2397                           	
  2398  062B                     l4857:	
  2399                           	line	71
  2400                           	
  2401  062B                     l6165:	
  2402  062B  3001               	movlw	(01h)
  2403  062C  00F5               	movwf	(??___ftpack+0)+0
  2404  062D  0875               	movf	(??___ftpack+0)+0,w
  2405  062E  07F3               	addwf	(___ftpack@exp),f
  2406                           	line	72
  2407                           	
  2408  062F                     l6167:	
  2409  062F  3001               	movlw	01h
  2410  0630  07F0               	addwf	(___ftpack@arg),f
  2411  0631  3000               	movlw	0
  2412  0632  1803               	skipnc
  2413  0633  3001               movlw 1
  2414  0634  07F1               	addwf	(___ftpack@arg+1),f
  2415  0635  3000               	movlw	0
  2416  0636  1803               	skipnc
  2417  0637  3001               movlw 1
  2418  0638  07F2               	addwf	(___ftpack@arg+2),f
  2419                           	line	73
  2420                           	
  2421  0639                     l6169:	
  2422  0639  3001               	movlw	01h
  2423  063A                     u2795:
  2424  063A  1003               	clrc
  2425  063B  0CF2               	rrf	(___ftpack@arg+2),f
  2426  063C  0CF1               	rrf	(___ftpack@arg+1),f
  2427  063D  0CF0               	rrf	(___ftpack@arg),f
  2428  063E  3EFF               	addlw	-1
  2429  063F  1D03               	skipz
  2430  0640  2E3A               	goto	u2795
  2431                           
  2432                           	line	74
  2433                           	
  2434  0641                     l4856:	
  2435                           	line	70
  2436  0641  30FF               	movlw	low highword(0FF0000h)
  2437  0642  0572               	andwf	(___ftpack@arg+2),w
  2438  0643  1D03               	btfss	status,2
  2439  0644  2E46               	goto	u2801
  2440  0645  2E47               	goto	u2800
  2441  0646                     u2801:
  2442  0646  2E2B               	goto	l6165
  2443  0647                     u2800:
  2444  0647  2E54               	goto	l6173
  2445                           	
  2446  0648                     l4858:	
  2447                           	line	75
  2448  0648  2E54               	goto	l6173
  2449                           	
  2450  0649                     l4860:	
  2451                           	line	76
  2452                           	
  2453  0649                     l6171:	
  2454  0649  3001               	movlw	low(01h)
  2455  064A  02F3               	subwf	(___ftpack@exp),f
  2456                           	line	77
  2457  064B  3001               	movlw	01h
  2458  064C                     u2815:
  2459  064C  1003               	clrc
  2460  064D  0DF0               	rlf	(___ftpack@arg),f
  2461  064E  0DF1               	rlf	(___ftpack@arg+1),f
  2462  064F  0DF2               	rlf	(___ftpack@arg+2),f
  2463  0650  3EFF               	addlw	-1
  2464  0651  1D03               	skipz
  2465  0652  2E4C               	goto	u2815
  2466  0653  2E54               	goto	l6173
  2467                           	line	78
  2468                           	
  2469  0654                     l4859:	
  2470                           	line	75
  2471                           	
  2472  0654                     l6173:	
  2473  0654  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  2474  0655  2E57               	goto	u2821
  2475  0656  2E58               	goto	u2820
  2476  0657                     u2821:
  2477  0657  2E49               	goto	l6171
  2478  0658                     u2820:
  2479                           	
  2480  0658                     l4861:	
  2481                           	line	79
  2482  0658  1873               	btfsc	(___ftpack@exp),(0)&7
  2483  0659  2E5B               	goto	u2831
  2484  065A  2E5C               	goto	u2830
  2485  065B                     u2831:
  2486  065B  2E62               	goto	l4862
  2487  065C                     u2830:
  2488                           	line	80
  2489                           	
  2490  065C                     l6175:	
  2491  065C  30FF               	movlw	0FFh
  2492  065D  05F0               	andwf	(___ftpack@arg),f
  2493  065E  307F               	movlw	07Fh
  2494  065F  05F1               	andwf	(___ftpack@arg+1),f
  2495  0660  30FF               	movlw	0FFh
  2496  0661  05F2               	andwf	(___ftpack@arg+2),f
  2497                           	
  2498  0662                     l4862:	
  2499                           	line	81
  2500  0662  1003               	clrc
  2501  0663  0CF3               	rrf	(___ftpack@exp),f
  2502                           
  2503                           	line	82
  2504                           	
  2505  0664                     l6177:	
  2506  0664  0873               	movf	(___ftpack@exp),w
  2507  0665  00F5               	movwf	((??___ftpack+0)+0)
  2508  0666  01F6               	clrf	((??___ftpack+0)+0+1)
  2509  0667  01F7               	clrf	((??___ftpack+0)+0+2)
  2510  0668  3010               	movlw	010h
  2511  0669                     u2845:
  2512  0669  1003               	clrc
  2513  066A  0DF5               	rlf	(??___ftpack+0)+0,f
  2514  066B  0DF6               	rlf	(??___ftpack+0)+1,f
  2515  066C  0DF7               	rlf	(??___ftpack+0)+2,f
  2516  066D                     u2840:
  2517  066D  3EFF               	addlw	-1
  2518  066E  1D03               	skipz
  2519  066F  2E69               	goto	u2845
  2520  0670  0875               	movf	0+(??___ftpack+0)+0,w
  2521  0671  04F0               	iorwf	(___ftpack@arg),f
  2522  0672  0876               	movf	1+(??___ftpack+0)+0,w
  2523  0673  04F1               	iorwf	(___ftpack@arg+1),f
  2524  0674  0877               	movf	2+(??___ftpack+0)+0,w
  2525  0675  04F2               	iorwf	(___ftpack@arg+2),f
  2526                           	line	83
  2527                           	
  2528  0676                     l6179:	
  2529  0676  0874               	movf	(___ftpack@sign),w
  2530  0677  1D03               	skipz
  2531  0678  2E7A               	goto	u2850
  2532  0679  2E7B               	goto	l4863
  2533  067A                     u2850:
  2534                           	line	84
  2535                           	
  2536  067A                     l6181:	
  2537  067A  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  2538                           	
  2539  067B                     l4863:	
  2540                           	line	85
  2541                           	line	86
  2542                           	
  2543  067B                     l4852:	
  2544  067B  0008               	return
  2545                           	opt stack 0
  2546                           GLOBAL	__end_of___ftpack
  2547  067C                     	__end_of___ftpack:
  2548 ;; =============== function ___ftpack ends ============
  2549                           
  2550                           	signat	___ftpack,12411
  2551                           	global	_ADCRead
  2552                           psect	text426,local,class=CODE,delta=2
  2553                           global __ptext426
  2554  04AB                     __ptext426:
  2555                           
  2556 ;; *************** function _ADCRead *****************
  2557 ;; Defined at:
  2558 ;;		line 233 in file "newmain.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  ch              1    wreg     unsigned char 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  ch              1    6[COMMON] unsigned char 
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  2    0[COMMON] unsigned int 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2572 ;;      Params:         2       0       0       0       0
  2573 ;;      Locals:         1       0       0       0       0
  2574 ;;      Temps:          4       0       0       0       0
  2575 ;;      Totals:         7       0       0       0       0
  2576 ;;Total ram usage:        7 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           psect	text426
  2585                           	file	"newmain.c"
  2586                           	line	233
  2587                           	global	__size_of_ADCRead
  2588  002D                     	__size_of_ADCRead	equ	__end_of_ADCRead-_ADCRead
  2589                           	
  2590  04AB                     _ADCRead:	
  2591                           	opt	stack 7
  2592                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  2593                           ;ADCRead@ch stored from wreg
  2594  04AB  00F6               	movwf	(ADCRead@ch)
  2595                           	line	234
  2596                           	
  2597  04AC                     l6071:	
  2598                           ;newmain.c: 234: ADCON0 = 0x00;
  2599  04AC  1283               	bcf	status, 5	;RP0=0, select bank0
  2600  04AD  1303               	bcf	status, 6	;RP1=0, select bank0
  2601  04AE  019F               	clrf	(31)	;volatile
  2602                           	line	235
  2603                           	
  2604  04AF                     l6073:	
  2605                           ;newmain.c: 235: ADCON0 = (ch<<2);
  2606  04AF  0876               	movf	(ADCRead@ch),w
  2607  04B0  00F2               	movwf	(??_ADCRead+0)+0
  2608  04B1  3001               	movlw	(02h)-1
  2609  04B2                     u2495:
  2610  04B2  1003               	clrc
  2611  04B3  0DF2               	rlf	(??_ADCRead+0)+0,f
  2612  04B4  3EFF               	addlw	-1
  2613  04B5  1D03               	skipz
  2614  04B6  2CB2               	goto	u2495
  2615  04B7  1003               	clrc
  2616  04B8  0D72               	rlf	(??_ADCRead+0)+0,w
  2617  04B9  009F               	movwf	(31)	;volatile
  2618                           	line	237
  2619                           	
  2620  04BA                     l6075:	
  2621                           ;newmain.c: 237: ADON=1;
  2622  04BA  141F               	bsf	(248/8),(248)&7
  2623                           	line	239
  2624                           	
  2625  04BB                     l6077:	
  2626                           ;newmain.c: 239: GO_DONE=1;
  2627  04BB  149F               	bsf	(249/8),(249)&7
  2628                           	line	240
  2629                           ;newmain.c: 240: while(GO_DONE);
  2630  04BC  2CBD               	goto	l1558
  2631                           	
  2632  04BD                     l1559:	
  2633                           	
  2634  04BD                     l1558:	
  2635  04BD  189F               	btfsc	(249/8),(249)&7
  2636  04BE  2CC0               	goto	u2501
  2637  04BF  2CC1               	goto	u2500
  2638  04C0                     u2501:
  2639  04C0  2CBD               	goto	l1558
  2640  04C1                     u2500:
  2641                           	
  2642  04C1                     l1560:	
  2643                           	line	242
  2644                           ;newmain.c: 242: ADON=0;
  2645  04C1  101F               	bcf	(248/8),(248)&7
  2646                           	line	244
  2647                           	
  2648  04C2                     l6079:	
  2649                           ;newmain.c: 244: return (ADRESH<8)|ADRESL;
  2650  04C2  1683               	bsf	status, 5	;RP0=1, select bank1
  2651  04C3  1303               	bcf	status, 6	;RP1=0, select bank1
  2652  04C4  081E               	movf	(158)^080h,w	;volatile
  2653  04C5  00F2               	movwf	(??_ADCRead+0)+0
  2654  04C6  01F3               	clrf	(??_ADCRead+0)+0+1
  2655  04C7  3008               	movlw	(08h)
  2656  04C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2657  04C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2658  04CA  021E               	subwf	(30),w	;volatile
  2659  04CB  3000               	movlw	0
  2660  04CC  1C03               	skipc
  2661  04CD  3001               	movlw	1
  2662  04CE  00F4               	movwf	(??_ADCRead+2)+0
  2663  04CF  01F5               	clrf	(??_ADCRead+2)+0+1
  2664  04D0  0872               	movf	0+(??_ADCRead+0)+0,w
  2665  04D1  0474               	iorwf	0+(??_ADCRead+2)+0,w
  2666  04D2  00F0               	movwf	(?_ADCRead)
  2667  04D3  0873               	movf	1+(??_ADCRead+0)+0,w
  2668  04D4  0475               	iorwf	1+(??_ADCRead+2)+0,w
  2669  04D5  00F1               	movwf	1+(?_ADCRead)
  2670  04D6  2CD7               	goto	l1561
  2671                           	
  2672  04D7                     l6081:	
  2673                           	line	246
  2674                           	
  2675  04D7                     l1561:	
  2676  04D7  0008               	return
  2677                           	opt stack 0
  2678                           GLOBAL	__end_of_ADCRead
  2679  04D8                     	__end_of_ADCRead:
  2680 ;; =============== function _ADCRead ends ============
  2681                           
  2682                           	signat	_ADCRead,4218
  2683                           	global	_ADCInit
  2684                           psect	text427,local,class=CODE,delta=2
  2685                           global __ptext427
  2686  0508                     __ptext427:
  2687                           
  2688 ;; *************** function _ADCInit *****************
  2689 ;; Defined at:
  2690 ;;		line 222 in file "newmain.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  ADC_Channel     2    0[COMMON] int 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;		None
  2695 ;; Return value:  Size  Location     Type
  2696 ;;		None               void
  2697 ;; Registers used:
  2698 ;;		wreg, status,2, status,0
  2699 ;; Tracked objects:
  2700 ;;		On entry : 0/0
  2701 ;;		On exit  : 0/0
  2702 ;;		Unchanged: 0/0
  2703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2704 ;;      Params:         2       0       0       0       0
  2705 ;;      Locals:         0       0       0       0       0
  2706 ;;      Temps:          0       0       0       0       0
  2707 ;;      Totals:         2       0       0       0       0
  2708 ;;Total ram usage:        2 bytes
  2709 ;; Hardware stack levels used:    1
  2710 ;; This function calls:
  2711 ;;		Nothing
  2712 ;; This function is called by:
  2713 ;;		_main
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           psect	text427
  2717                           	file	"newmain.c"
  2718                           	line	222
  2719                           	global	__size_of_ADCInit
  2720  0033                     	__size_of_ADCInit	equ	__end_of_ADCInit-_ADCInit
  2721                           	
  2722  0508                     _ADCInit:	
  2723                           	opt	stack 7
  2724                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  2725                           	line	223
  2726                           	
  2727  0508                     l6053:	
  2728                           ;newmain.c: 223: if (ADC_Channel == 0) TRISA0 = 1;
  2729  0508  0871               	movf	((ADCInit@ADC_Channel+1)),w
  2730  0509  0470               	iorwf	((ADCInit@ADC_Channel)),w
  2731  050A  1D03               	skipz
  2732  050B  2D0D               	goto	u2451
  2733  050C  2D0E               	goto	u2450
  2734  050D                     u2451:
  2735  050D  2D12               	goto	l6057
  2736  050E                     u2450:
  2737                           	
  2738  050E                     l6055:	
  2739  050E  1683               	bsf	status, 5	;RP0=1, select bank1
  2740  050F  1303               	bcf	status, 6	;RP1=0, select bank1
  2741  0510  1405               	bsf	(1064/8)^080h,(1064)&7
  2742  0511  2D36               	goto	l6069
  2743                           	line	224
  2744                           	
  2745  0512                     l1548:	
  2746                           	
  2747  0512                     l6057:	
  2748                           ;newmain.c: 224: else if (ADC_Channel == 1) TRISA1 = 1;
  2749  0512  3001               	movlw	01h
  2750  0513  0670               	xorwf	(ADCInit@ADC_Channel),w
  2751  0514  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2752  0515  1D03               	skipz
  2753  0516  2D18               	goto	u2461
  2754  0517  2D19               	goto	u2460
  2755  0518                     u2461:
  2756  0518  2D1D               	goto	l6061
  2757  0519                     u2460:
  2758                           	
  2759  0519                     l6059:	
  2760  0519  1683               	bsf	status, 5	;RP0=1, select bank1
  2761  051A  1303               	bcf	status, 6	;RP1=0, select bank1
  2762  051B  1485               	bsf	(1065/8)^080h,(1065)&7
  2763  051C  2D36               	goto	l6069
  2764                           	line	225
  2765                           	
  2766  051D                     l1550:	
  2767                           	
  2768  051D                     l6061:	
  2769                           ;newmain.c: 225: else if (ADC_Channel == 2) TRISA2 = 1;
  2770  051D  3002               	movlw	02h
  2771  051E  0670               	xorwf	(ADCInit@ADC_Channel),w
  2772  051F  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2773  0520  1D03               	skipz
  2774  0521  2D23               	goto	u2471
  2775  0522  2D24               	goto	u2470
  2776  0523                     u2471:
  2777  0523  2D28               	goto	l6065
  2778  0524                     u2470:
  2779                           	
  2780  0524                     l6063:	
  2781  0524  1683               	bsf	status, 5	;RP0=1, select bank1
  2782  0525  1303               	bcf	status, 6	;RP1=0, select bank1
  2783  0526  1505               	bsf	(1066/8)^080h,(1066)&7
  2784  0527  2D36               	goto	l6069
  2785                           	line	226
  2786                           	
  2787  0528                     l1552:	
  2788                           	
  2789  0528                     l6065:	
  2790                           ;newmain.c: 226: else if (ADC_Channel == 3) TRISA3 = 1;
  2791  0528  3003               	movlw	03h
  2792  0529  0670               	xorwf	(ADCInit@ADC_Channel),w
  2793  052A  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2794  052B  1D03               	skipz
  2795  052C  2D2E               	goto	u2481
  2796  052D  2D2F               	goto	u2480
  2797  052E                     u2481:
  2798  052E  2D36               	goto	l6069
  2799  052F                     u2480:
  2800                           	
  2801  052F                     l6067:	
  2802  052F  1683               	bsf	status, 5	;RP0=1, select bank1
  2803  0530  1303               	bcf	status, 6	;RP1=0, select bank1
  2804  0531  1585               	bsf	(1067/8)^080h,(1067)&7
  2805  0532  2D36               	goto	l6069
  2806                           	
  2807  0533                     l1554:	
  2808  0533  2D36               	goto	l6069
  2809                           	line	228
  2810                           	
  2811  0534                     l1553:	
  2812  0534  2D36               	goto	l6069
  2813                           	
  2814  0535                     l1551:	
  2815  0535  2D36               	goto	l6069
  2816                           	
  2817  0536                     l1549:	
  2818                           	
  2819  0536                     l6069:	
  2820                           ;newmain.c: 228: ADCON1 = 0b10000100;
  2821  0536  3084               	movlw	(084h)
  2822  0537  1683               	bsf	status, 5	;RP0=1, select bank1
  2823  0538  1303               	bcf	status, 6	;RP1=0, select bank1
  2824  0539  009F               	movwf	(159)^080h	;volatile
  2825                           	line	229
  2826                           	
  2827  053A                     l1555:	
  2828  053A  0008               	return
  2829                           	opt stack 0
  2830                           GLOBAL	__end_of_ADCInit
  2831  053B                     	__end_of_ADCInit:
  2832 ;; =============== function _ADCInit ends ============
  2833                           
  2834                           	signat	_ADCInit,4216
  2835                           	global	_controlMotor
  2836                           psect	text428,local,class=CODE,delta=2
  2837                           global __ptext428
  2838  0413                     __ptext428:
  2839                           
  2840 ;; *************** function _controlMotor *****************
  2841 ;; Defined at:
  2842 ;;		line 73 in file "newmain.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;  Leftpt          2    0[COMMON] int 
  2845 ;;  Rightpt         2    2[COMMON] int 
  2846 ;; Auto vars:     Size  Location     Type
  2847 ;;		None
  2848 ;; Return value:  Size  Location     Type
  2849 ;;		None               void
  2850 ;; Registers used:
  2851 ;;		wreg
  2852 ;; Tracked objects:
  2853 ;;		On entry : 0/0
  2854 ;;		On exit  : 0/0
  2855 ;;		Unchanged: 0/0
  2856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2857 ;;      Params:         4       0       0       0       0
  2858 ;;      Locals:         0       0       0       0       0
  2859 ;;      Temps:          0       0       0       0       0
  2860 ;;      Totals:         4       0       0       0       0
  2861 ;;Total ram usage:        4 bytes
  2862 ;; Hardware stack levels used:    1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_searchTrack
  2867 ;;		_main
  2868 ;; This function uses a non-reentrant model
  2869 ;;
  2870                           psect	text428
  2871                           	file	"newmain.c"
  2872                           	line	73
  2873                           	global	__size_of_controlMotor
  2874  0022                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
  2875                           	
  2876  0413                     _controlMotor:	
  2877                           	opt	stack 7
  2878                           ; Regs used in _controlMotor: [wreg]
  2879                           	line	74
  2880                           	
  2881  0413                     l6025:	
  2882                           ;newmain.c: 74: if (Leftpt == 1)
  2883  0413  3001               	movlw	01h
  2884  0414  0670               	xorwf	(controlMotor@Leftpt),w
  2885  0415  0471               	iorwf	(controlMotor@Leftpt+1),w
  2886  0416  1D03               	skipz
  2887  0417  2C19               	goto	u2431
  2888  0418  2C1A               	goto	u2430
  2889  0419                     u2431:
  2890  0419  2C1E               	goto	l1523
  2891  041A                     u2430:
  2892                           	line	78
  2893                           	
  2894  041A                     l6027:	
  2895                           ;newmain.c: 75: {
  2896                           ;newmain.c: 78: RC1 = 1;
  2897  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  2898  041B  1303               	bcf	status, 6	;RP1=0, select bank0
  2899  041C  1487               	bsf	(57/8),(57)&7
  2900                           	line	79
  2901                           ;newmain.c: 79: }
  2902  041D  2C25               	goto	l1524
  2903                           	line	80
  2904                           	
  2905  041E                     l1523:	
  2906                           	line	84
  2907                           ;newmain.c: 80: else
  2908                           ;newmain.c: 81: {
  2909                           ;newmain.c: 84: RC1 = 0;
  2910  041E  1283               	bcf	status, 5	;RP0=0, select bank0
  2911  041F  1303               	bcf	status, 6	;RP1=0, select bank0
  2912  0420  1087               	bcf	(57/8),(57)&7
  2913                           	line	85
  2914                           	
  2915  0421                     l6029:	
  2916                           ;newmain.c: 85: lastMotor = 2;
  2917  0421  3002               	movlw	low(02h)
  2918  0422  00C2               	movwf	(_lastMotor)
  2919  0423  3000               	movlw	high(02h)
  2920  0424  00C3               	movwf	((_lastMotor))+1
  2921                           	line	86
  2922                           	
  2923  0425                     l1524:	
  2924                           	line	89
  2925                           ;newmain.c: 86: }
  2926                           ;newmain.c: 89: if (Rightpt == 1)
  2927  0425  3001               	movlw	01h
  2928  0426  0672               	xorwf	(controlMotor@Rightpt),w
  2929  0427  0473               	iorwf	(controlMotor@Rightpt+1),w
  2930  0428  1D03               	skipz
  2931  0429  2C2B               	goto	u2441
  2932  042A  2C2C               	goto	u2440
  2933  042B                     u2441:
  2934  042B  2C2E               	goto	l1525
  2935  042C                     u2440:
  2936                           	line	93
  2937                           	
  2938  042C                     l6031:	
  2939                           ;newmain.c: 90: {
  2940                           ;newmain.c: 93: RA0 = 1;
  2941  042C  1405               	bsf	(40/8),(40)&7
  2942                           	line	94
  2943                           ;newmain.c: 94: }
  2944  042D  2C34               	goto	l1527
  2945                           	line	95
  2946                           	
  2947  042E                     l1525:	
  2948                           	line	98
  2949                           ;newmain.c: 95: else
  2950                           ;newmain.c: 96: {
  2951                           ;newmain.c: 98: RA0 = 0;
  2952  042E  1005               	bcf	(40/8),(40)&7
  2953                           	line	99
  2954                           	
  2955  042F                     l6033:	
  2956                           ;newmain.c: 99: lastMotor = 1;
  2957  042F  3001               	movlw	low(01h)
  2958  0430  00C2               	movwf	(_lastMotor)
  2959  0431  3000               	movlw	high(01h)
  2960  0432  00C3               	movwf	((_lastMotor))+1
  2961  0433  2C34               	goto	l1527
  2962                           	line	100
  2963                           	
  2964  0434                     l1526:	
  2965                           	line	101
  2966                           	
  2967  0434                     l1527:	
  2968  0434  0008               	return
  2969                           	opt stack 0
  2970                           GLOBAL	__end_of_controlMotor
  2971  0435                     	__end_of_controlMotor:
  2972 ;; =============== function _controlMotor ends ============
  2973                           
  2974                           	signat	_controlMotor,8312
  2975                           	global	__delay_ms
  2976                           psect	text429,local,class=CODE,delta=2
  2977                           global __ptext429
  2978  0459                     __ptext429:
  2979                           
  2980 ;; *************** function __delay_ms *****************
  2981 ;; Defined at:
  2982 ;;		line 45 in file "newmain.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  ms              2    0[COMMON] unsigned int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  us              1    4[COMMON] unsigned char 
  2987 ;;  i               1    3[COMMON] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;		None               void
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2997 ;;      Params:         2       0       0       0       0
  2998 ;;      Locals:         2       0       0       0       0
  2999 ;;      Temps:          1       0       0       0       0
  3000 ;;      Totals:         5       0       0       0       0
  3001 ;;Total ram usage:        5 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_doDelay
  3007 ;;		_controlBuzzer
  3008 ;; This function uses a non-reentrant model
  3009 ;;
  3010                           psect	text429
  3011                           	file	"newmain.c"
  3012                           	line	45
  3013                           	global	__size_of__delay_ms
  3014  0026                     	__size_of__delay_ms	equ	__end_of__delay_ms-__delay_ms
  3015                           	
  3016  0459                     __delay_ms:	
  3017                           	opt	stack 6
  3018                           ; Regs used in __delay_ms: [wreg+status,2+status,0]
  3019                           	line	47
  3020                           ;newmain.c: 46: unsigned char i;
  3021                           ;newmain.c: 47: do
  3022                           	
  3023  0459                     l1513:	
  3024                           	line	49
  3025                           	
  3026  0459                     l6017:	
  3027                           ;newmain.c: 48: {
  3028                           ;newmain.c: 49: i = 4;
  3029  0459  3004               	movlw	(04h)
  3030  045A  00F2               	movwf	(??__delay_ms+0)+0
  3031  045B  0872               	movf	(??__delay_ms+0)+0,w
  3032  045C  00F3               	movwf	(__delay_ms@i)
  3033                           	line	50
  3034                           ;newmain.c: 50: do
  3035                           	
  3036  045D                     l1514:	
  3037                           	line	52
  3038                           ;newmain.c: 51: {
  3039                           ;newmain.c: 52: { unsigned char us; us = (250)/(12000000/8000000L)|1; while(--us != 0) c
                                 ontinue; };
  3040  045D  30FB               	movlw	(0FBh)
  3041  045E  00F2               	movwf	(??__delay_ms+0)+0
  3042  045F  0872               	movf	(??__delay_ms+0)+0,w
  3043  0460  00F4               	movwf	(__delay_ms@us)
  3044  0461  2C63               	goto	l6019
  3045                           	
  3046  0462                     l1516:	
  3047  0462  2C63               	goto	l6019
  3048                           	
  3049  0463                     l1515:	
  3050                           	
  3051  0463                     l6019:	
  3052  0463  3001               	movlw	low(01h)
  3053  0464  02F4               	subwf	(__delay_ms@us),f
  3054  0465  1D03               	btfss	status,2
  3055  0466  2C68               	goto	u2401
  3056  0467  2C69               	goto	u2400
  3057  0468                     u2401:
  3058  0468  2C63               	goto	l6019
  3059  0469                     u2400:
  3060  0469  2C6A               	goto	l6021
  3061                           	
  3062  046A                     l1517:	
  3063                           	line	53
  3064                           	
  3065  046A                     l6021:	
  3066                           ;newmain.c: 53: } while(--i);
  3067  046A  3001               	movlw	low(01h)
  3068  046B  02F3               	subwf	(__delay_ms@i),f
  3069  046C  1D03               	btfss	status,2
  3070  046D  2C6F               	goto	u2411
  3071  046E  2C70               	goto	u2410
  3072  046F                     u2411:
  3073  046F  2C5D               	goto	l1514
  3074  0470                     u2410:
  3075  0470  2C71               	goto	l6023
  3076                           	
  3077  0471                     l1518:	
  3078                           	line	54
  3079                           	
  3080  0471                     l6023:	
  3081                           ;newmain.c: 54: } while(--ms);
  3082  0471  3001               	movlw	low(01h)
  3083  0472  02F0               	subwf	(__delay_ms@ms),f
  3084  0473  3000               	movlw	high(01h)
  3085  0474  1C03               	skipc
  3086  0475  03F1               	decf	(__delay_ms@ms+1),f
  3087  0476  02F1               	subwf	(__delay_ms@ms+1),f
  3088  0477  0871               	movf	(((__delay_ms@ms+1))),w
  3089  0478  0470               	iorwf	(((__delay_ms@ms))),w
  3090  0479  1D03               	skipz
  3091  047A  2C7C               	goto	u2421
  3092  047B  2C7D               	goto	u2420
  3093  047C                     u2421:
  3094  047C  2C59               	goto	l1513
  3095  047D                     u2420:
  3096  047D  2C7E               	goto	l1520
  3097                           	
  3098  047E                     l1519:	
  3099                           	line	55
  3100                           	
  3101  047E                     l1520:	
  3102  047E  0008               	return
  3103                           	opt stack 0
  3104                           GLOBAL	__end_of__delay_ms
  3105  047F                     	__end_of__delay_ms:
  3106 ;; =============== function __delay_ms ends ============
  3107                           
  3108                           	signat	__delay_ms,4216
  3109                           psect	text430,local,class=CODE,delta=2
  3110                           global __ptext430
  3111  0000                     __ptext430:
  3112                           	global	btemp
  3113  007E                     	btemp set 07Eh
  3114                           
  3115                           	DABS	1,126,2	;btemp
  3116                           	global	wtemp0
  3117  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun Mar  4 00:06:27 2012

                    pc 0002                     _RD 0C60                     _WR 0C61                     fsr 0004  
                  _GIE 005F                    _RA0 0028                    _RA1 0029                    _RA2 002A  
                  _RA3 002B                    _RC1 0039                    _RC3 003B                    _RC4 003C  
                  fsr0 0004        __end_of_ADCInit 053B        __end_of_ADCRead 04D8                    indf 0000  
          lcd_goto@pos 0072                   l1520 047E                   l1513 0459                   l1514 045D  
                 l1530 04EF                   l1515 0463                   l1523 041E                   l1531 0507  
                 l1516 0462                   l1524 0425                   l1532 0506                   l1517 046A  
                 l1525 042E                   l1533 0507                   l1518 0471                   l1526 0434  
                 l1550 051D                   l3062 0412                   l3070 0458                   l1542 07FF  
                 l1519 047E                   l1527 0434                   l1551 0535                   l3071 0458  
                 l1552 0528                   l1560 04C1                   l3080 0590                   l1553 0534  
                 l1561 04D7                   l3065 03F8                   l1545 03E5                   l1554 0533  
                 l3074 03BE                   l1555 053A                   l1548 0512                   l3068 044B  
                 l1564 06A0                   l1549 0536                   l3077 03CA                   l3069 043A  
                 l1565 0720                   l1558 04BD                   l1566 0734                   l1559 04BD  
                 l1567 0735                   l1568 0736                   l1569 0736                   l6021 046A  
                 l6013 05FD                   l6023 0471                   l6031 042C                   l6015 05FF  
                 l6017 0459                   l6033 042F                   l6025 0413                   l6019 0463  
                 l6027 041A                   l6029 0421                   l6061 051D                   l6053 0508  
                 l6301 05FD                   l6063 0524                   l6055 050E                   l6071 04AC  
                 l6303 0600                   l6065 0528                   l6057 0512                   l6081 04D7  
                 l6073 04AF                   l6161 0616                   l6153 0601                   l6401 03EF  
                 l6067 052F                   l6059 0519                   l6075 04BA                   l6171 0649  
                 l6163 0623                   l6155 0605                   l6403 03D9                   l6411 0545  
                 l6069 0536                   l6077 04BB                   l6181 067A                   l6173 0654  
                 l6165 062B                   l6157 060D                   l4653 048F                   l6421 0561  
                 l6413 0548                   l6405 053B                   l4654 04AA                   l6079 04C2  
                 l6175 065C                   l6167 062F                   l6159 0614                   l6351 04D8  
                 l6431 0578                   l6423 0564                   l6415 0549                   l6407 0543  
                 l6177 0664                   l6169 0639                   l6353 04E1                   l6361 03FE  
                 l6433 0579                   l6425 056A                   l6417 0557                   l6409 0544  
                 l6441 0739                   l6179 0676                   l4851 060D                   l6291 05C1  
                 l6355 04EF                   l6371 0411                   l6363 040B                   l6435 057F  
                 l6427 056D                   l6419 0558                   l6451 07C9                   l6443 078A  
                 l4860 0649                   l4852 067B                   l4684 05BD                   l4861 0658  
                 l4853 0623                   l4685 05E9                   l6293 05E9                   l6285 0591  
                 l6357 04F8                   l6365 040C                   l6373 047F                   l6381 03C0  
                 l6437 0585                   l6429 0577                   l6453 07DB                   l6445 0796  
                 l6461 0683                   l4862 0662                   l4854 0616                   l4686 0600  
                 l4863 067B                   l4855 062A                   l6295 05EB                   l6287 0595  
                 l6367 040D                   l6359 03FA                   l6375 0486                   l6383 03C3  
                 l6391 044B                   l6439 058A                   l6455 07E7                   l6447 07A2  
                 l6471 06AE                   l6463 0688                   l4856 0641                   l4857 062B  
                 l4849 0615                   l6297 05ED                   l6289 05BD                   l6369 0410  
                 l6377 048F                   l6385 0436                   l6393 03B5                   l6457 07F9  
                 l6449 07BD                   l6481 071A                   l6473 06D7                   l6465 068D  
                 l4858 0648                   l4859 0654                   l6299 05FB                   l6379 04AA  
                 l6387 043A                   l6395 03B8                   l6483 0720                   l6475 06E5  
                 l6467 0696                   l6459 067C                   l6389 0446                   l6397 03E6  
                 l6477 070E                   l6469 06A0                   l6399 03E9                   l6479 0714  
                 _ADON 00F8                   STR_1 0009                   u3101 05AF                   u3110 05C1  
                 u3102 05B0                   u3111 05C0                   u3103 05B5                   u2400 0469  
                 u3104 05B6                   u3200 04E1                   u2401 0468                   u3121 05DB  
                 u3201 04E0                   u2410 0470                   u3130 05FB                   u3122 05DC  
                 u3210 04F8                   u2411 046F                   u3131 05FA                   u3123 05E1  
                 u3211 04F7                   u2420 047D                   u2500 04C1                   u3124 05E2  
                 u2421 047C                   u2501 04C0                   u2430 041A                   u3230 0486  
                 u2431 0419                   u3135 05F7                   u3231 0485                   u2440 042C  
                 u3240 0457                   u2441 042B                   u3225 0401                   u3241 0456  
                 u2450 050E                   u3090 0595                   u3250 0714                   u2451 050D  
                 u3091 0594                   u3307 0570                   u3251 0713                   u2460 0519  
                 u3260 071A                   u2461 0518                   u3317 03F3                   u3261 0719  
                 u2470 0524                   u2471 0523                   u3327 03FC                   u2480 052F  
                 u2800 0647                   u2481 052E                   u2801 0646                   u2820 0658  
                 u2821 0657                   u3277 054E                   u2830 065C                   u2750 0605  
                 u2495 04B2                   u2831 065B                   u2815 064C                   u3287 055D  
                 u2840 066D                   u2760 060C                   u2761 060B                   u3297 0567  
                 u2850 067A                   u2780 0629                   u2845 0669                   u2781 0628  
                 u2775 061B                   u2795 063A                   _WREN 0C62                   _main 067C  
         ___ftpack@arg 0070            main@rightpt 0030           ___ftpack@exp 0073                   btemp 007E  
                 _stop 003C                   start 0000          ?_controlMotor 0070                  ?_main 0070  
   controlMotor@Leftpt 0070                  _EEADR 010D                  _CARRY 0018        __end_of_doDelay 0800  
         __delay_ms@ms 0070           __delay_ms@us 0074                  _PORTD 0008                  _TRISA 0085  
                _TRISB 0086                  _TRISC 0087                  _TRISD 0088                  _TRISE 0089  
        ___awtoft@sign 002B                  _count 0034                  _ticks 0044          ___ftpack@sign 0074  
                _start 0038                  pclath 000A                  status 0003                  wtemp0 007E  
 __end_of_lcdCountdown 03E6           __end_of_main 0739         ??_controlMotor 0074           ?_searchTrack 0070  
            ??_ADCInit 0072              ??_ADCRead 0072                 ??_main 002C              ADCRead@ch 0076  
               _ADCON0 001F                 _ADCON1 009F                 _ADRESH 001E                 _ADRESL 009E  
               _EEDATA 010C                 _EECON1 018C                 _EECON2 018D       __end_of___awtoft 04AB  
     __end_of___ftpack 067C    controlMotor@Rightpt 0072                 _TRISA0 0428                 _TRISA1 0429  
               _TRISA2 042A                 _TRISA3 042B       __end_of_lcd_init 0591       __end_of_lcd_goto 03CB  
     __end_of_lcd_puts 0459                 ___ftge 0591              ??_doDelay 0075                 clrloop 03AD  
           ___ftge@ff1 0078             ___ftge@ff2 007B     __size_of__delay_ms 0026             ___awtoft@c 0026  
       __pcstackCOMMON 0070     __size_of_lcd_clear 0013     __size_of_lcd_putch 000B     __size_of_lcd_write 001A  
           __pbssBANK0 0034   __end_of_controlMotor 0435  __size_of_lcdCountdown 000E             __pmaintext 067C  
              ?___ftge 0078                _ADCInit 0508                _ADCRead 04AB              ?___awtoft 0026  
            ?___ftpack 0070   __size_of_searchTrack 0030      __end_of__delay_ms 047F                _GO_DONE 00F9  
         _lcdCountdown 03D8              ?_lcd_init 0070              ?_lcd_goto 0070              ?_lcd_puts 0070  
    __end_of_lcd_clear 03F9        __size_of___ftge 0070      __end_of_lcd_putch 03BF      __end_of_lcd_write 0413  
              _doDelay 0739             ??___awtoft 0029             ??___ftpack 0075                _clock_t 0040  
           ??_lcd_init 0074             ??_lcd_goto 0072             ??_lcd_puts 0072   end_of_initialization 03D4  
__size_of_controlMotor 0022     ADCInit@ADC_Channel 0070             main@leftpt 002E             lcd_putch@c 0072  
           lcd_write@c 0071         __end_of___ftge 0601            __delay_ms@i 0073           _controlMotor 0413  
  start_initialization 03CB     lcd_init@init_value 0076               ??___ftge 0020               ?_ADCInit 0070  
             ?_ADCRead 0070      __size_of___awtoft 002C      __size_of___ftpack 007B          __pcstackBANK0 0020  
            __delay_ms 0459      __size_of_lcd_init 0056      __size_of_lcd_goto 000C      __size_of_lcd_puts 0024  
            __ptext420 03BF              __ptext421 047F              __ptext413 0000              __ptext430 0000  
            __ptext422 03F9              __ptext414 0739              __ptext423 04D8              __ptext415 053B  
            __ptext424 0591              __ptext416 03D8              __ptext425 0601              __ptext417 03E6  
            __ptext426 04AB              __ptext418 03B4              __ptext427 0508              __ptext419 0435  
            __ptext428 0413              __ptext429 0459          ??_searchTrack 0074               ?_doDelay 0070  
            _lcd_clear 03E6              __pstrings 0003              _lcd_putch 03B4              _lcd_write 03F9  
            _lastMotor 0042             ?__delay_ms 0070             ?_lcd_clear 0070          lcdCountdown@t 0073  
     __size_of_ADCInit 0033       __size_of_ADCRead 002D             ?_lcd_putch 0070            __stringbase 0008  
           ?_lcd_write 0070    __end_of_searchTrack 0508              lcd_puts@s 0073       __size_of_doDelay 00C7  
             ___awtoft 047F               ___ftpack 0601            ??__delay_ms 0072               _lcd_init 053B  
             _lcd_goto 03BF               _lcd_puts 0435          __size_of_main 00BD               clear_ram 03AC  
          _searchTrack 04D8            ??_lcd_clear 0072               main@read 0032            ??_lcd_putch 0072  
          ??_lcd_write 0070          ?_lcdCountdown 0070              stringcode 0003         ??_lcdCountdown 0073  
             stringdir 0003               stringtab 0003  
