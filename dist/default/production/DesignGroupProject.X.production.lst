

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sun Mar  4 12:18:13 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 10 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 10 "newmain.c"
    45  2007  FFF5               	dw 0xFFFD & 0xFFF7 ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_doDelay
    48                           	FNCALL	_main,_ADCInit
    49                           	FNCALL	_main,_ADCRead
    50                           	FNCALL	_main,___awtoft
    51                           	FNCALL	_main,___ftge
    52                           	FNCALL	_main,_searchTrack
    53                           	FNCALL	_main,_controlMotor
    54                           	FNCALL	_doDelay,_lcdCountdown
    55                           	FNCALL	_doDelay,__delay_ms
    56                           	FNCALL	_doDelay,_lcd_goto
    57                           	FNCALL	_doDelay,_lcd_puts
    58                           	FNCALL	_lcd_init,_lcd_write
    59                           	FNCALL	_lcd_init,_lcd_clear
    60                           	FNCALL	_lcdCountdown,_lcd_goto
    61                           	FNCALL	_lcdCountdown,_lcd_putch
    62                           	FNCALL	_lcd_clear,_lcd_write
    63                           	FNCALL	_lcd_putch,_lcd_write
    64                           	FNCALL	_lcd_puts,_lcd_write
    65                           	FNCALL	_lcd_goto,_lcd_write
    66                           	FNCALL	___awtoft,___ftpack
    67                           	FNCALL	_searchTrack,_controlMotor
    68                           	FNROOT	_main
    69                           	global	_count
    70                           	global	_start
    71                           	global	_stop
    72                           	global	_clock_t
    73                           	global	_lastMotor
    74                           	global	_ticks
    75                           	global	_ADCON0
    76                           psect	text413,local,class=CODE,delta=2
    77                           global __ptext413
    78  0000                     __ptext413:
    79  001F                     _ADCON0	set	31
    80                           	global	_ADRESH
    81  001E                     _ADRESH	set	30
    82                           	global	_PORTD
    83  0008                     _PORTD	set	8
    84                           	global	_ADON
    85  00F8                     _ADON	set	248
    86                           	global	_CARRY
    87  0018                     _CARRY	set	24
    88                           	global	_GIE
    89  005F                     _GIE	set	95
    90                           	global	_GO_DONE
    91  00F9                     _GO_DONE	set	249
    92                           	global	_RA1
    93  0029                     _RA1	set	41
    94                           	global	_RA2
    95  002A                     _RA2	set	42
    96                           	global	_RA3
    97  002B                     _RA3	set	43
    98                           	global	_RC0
    99  0038                     _RC0	set	56
   100                           	global	_RC1
   101  0039                     _RC1	set	57
   102                           	global	_RC3
   103  003B                     _RC3	set	59
   104                           	global	_RC4
   105  003C                     _RC4	set	60
   106                           	global	_ADCON1
   107  009F                     _ADCON1	set	159
   108                           	global	_ADRESL
   109  009E                     _ADRESL	set	158
   110                           	global	_TRISA
   111  0085                     _TRISA	set	133
   112                           	global	_TRISB
   113  0086                     _TRISB	set	134
   114                           	global	_TRISC
   115  0087                     _TRISC	set	135
   116                           	global	_TRISD
   117  0088                     _TRISD	set	136
   118                           	global	_TRISE
   119  0089                     _TRISE	set	137
   120                           	global	_TRISD0
   121  0440                     _TRISD0	set	1088
   122                           	global	_TRISD1
   123  0441                     _TRISD1	set	1089
   124                           	global	_TRISD2
   125  0442                     _TRISD2	set	1090
   126                           	global	_TRISD3
   127  0443                     _TRISD3	set	1091
   128                           	global	_EEADR
   129  010D                     _EEADR	set	269
   130                           	global	_EEDATA
   131  010C                     _EEDATA	set	268
   132                           	global	_EECON1
   133  018C                     _EECON1	set	396
   134                           	global	_EECON2
   135  018D                     _EECON2	set	397
   136                           	global	_RD
   137  0C60                     _RD	set	3168
   138                           	global	_WR
   139  0C61                     _WR	set	3169
   140                           	global	_WREN
   141  0C62                     _WREN	set	3170
   142                           psect	strings,class=STRING,delta=2
   143                           global __pstrings
   144  0003                     __pstrings:
   145                           ;	global	stringdir,stringtab,__stringbase
   146  0003                     stringtab:
   147                           ;	String table - string pointers are 1 byte each
   148  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   149  0003  3000               movlw high(stringdir)
   150  0004  008A               movwf pclath
   151  0005  0804               movf fsr,w
   152  0006  0A84               incf fsr
   153  0007  0782               	addwf pc
   154  0008                     __stringbase:
   155  0008  3400               	retlw	0
   156                           psect	strings
   157                           	
   158  0009                     STR_1:	
   159  0009  3453               	retlw	83	;'S'
   160  000A  3474               	retlw	116	;'t'
   161  000B  3461               	retlw	97	;'a'
   162  000C  3472               	retlw	114	;'r'
   163  000D  3474               	retlw	116	;'t'
   164  000E  3421               	retlw	33	;'!'
   165  000F  3400               	retlw	0
   166                           psect	strings
   167                           	file	"/tmp/cgtuKCC3A"
   168                           	line	#
   169                           psect cinit,class=CODE,delta=2
   170                           global start_initialization
   171  03C8                     start_initialization:
   172                           
   173                           psect	bssBANK0,class=BANK0,space=1
   174                           global __pbssBANK0
   175  0034                     __pbssBANK0:
   176  0034                     _count:
   177  0034                            ds      4
   178                           
   179  0038                     _start:
   180  0038                            ds      4
   181                           
   182  003C                     _stop:
   183  003C                            ds      4
   184                           
   185  0040                     _clock_t:
   186  0040                            ds      2
   187                           
   188  0042                     _lastMotor:
   189  0042                            ds      2
   190                           
   191  0044                     _ticks:
   192  0044                            ds      2
   193                           
   194                           psect clrtext,class=CODE,delta=2
   195                           global clear_ram
   196                           ;	Called with FSR containing the base address, and
   197                           ;	W with the last address+1
   198  03A9                     clear_ram:
   199  03A9  0064               	clrwdt			;clear the watchdog before getting into this loop
   200  03AA                     clrloop:
   201  03AA  0180               	clrf	indf		;clear RAM location pointed to by FSR
   202  03AB  0A84               	incf	fsr,f		;increment pointer
   203  03AC  0604               	xorwf	fsr,w		;XOR with final address
   204  03AD  1903               	btfsc	status,2	;have we reached the end yet?
   205  03AE  3400               	retlw	0		;all done for this memory range, return
   206  03AF  0604               	xorwf	fsr,w		;XOR again to restore value
   207  03B0  2BAA               	goto	clrloop		;do the next byte
   208                           
   209                           ; Clear objects allocated to BANK0
   210                           psect cinit,class=CODE,delta=2
   211  03C8  1383               	bcf	status, 7	;select IRP bank0
   212  03C9  3034               	movlw	low(__pbssBANK0)
   213  03CA  0084               	movwf	fsr
   214  03CB  3046               	movlw	low((__pbssBANK0)+012h)
   215  03CC  120A  118A  23A9   	fcall	clear_ram
              120A  118A         
   216                           psect cinit,class=CODE,delta=2
   217                           global end_of_initialization
   218                           
   219                           ;End of C runtime variable initialization code
   220                           
   221  03D1                     end_of_initialization:
   222  03D1  0183               clrf status
   223  03D2  120A  118A  2E79   ljmp _main	;jump to C main() function
   224                           psect	cstackCOMMON,class=COMMON,space=1
   225                           global __pcstackCOMMON
   226  0070                     __pcstackCOMMON:
   227                           	global	?_lcdCountdown
   228  0070                     ?_lcdCountdown:	; 0 bytes @ 0x0
   229                           	global	?_lcd_goto
   230  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   231                           	global	?_lcd_puts
   232  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   233                           	global	?_lcd_putch
   234  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   235                           	global	?_lcd_init
   236  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   237                           	global	?__delay_ms
   238  0070                     ?__delay_ms:	; 0 bytes @ 0x0
   239                           	global	?_controlMotor
   240  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   241                           	global	?_doDelay
   242  0070                     ?_doDelay:	; 0 bytes @ 0x0
   243                           	global	?_ADCInit
   244  0070                     ?_ADCInit:	; 0 bytes @ 0x0
   245                           	global	?_lcd_write
   246  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   247                           	global	??_lcd_write
   248  0070                     ??_lcd_write:	; 0 bytes @ 0x0
   249                           	global	?_lcd_clear
   250  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   251                           	global	?_searchTrack
   252  0070                     ?_searchTrack:	; 2 bytes @ 0x0
   253                           	global	?_ADCRead
   254  0070                     ?_ADCRead:	; 2 bytes @ 0x0
   255                           	global	?_main
   256  0070                     ?_main:	; 2 bytes @ 0x0
   257                           	global	?___ftpack
   258  0070                     ?___ftpack:	; 3 bytes @ 0x0
   259                           	global	__delay_ms@ms
   260  0070                     __delay_ms@ms:	; 2 bytes @ 0x0
   261                           	global	controlMotor@Leftpt
   262  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   263                           	global	ADCInit@ADC_Channel
   264  0070                     ADCInit@ADC_Channel:	; 2 bytes @ 0x0
   265                           	global	___ftpack@arg
   266  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   267  0070                     	ds	1
   268                           	global	lcd_write@c
   269  0071                     lcd_write@c:	; 1 bytes @ 0x1
   270  0071                     	ds	1
   271                           	global	??_lcd_goto
   272  0072                     ??_lcd_goto:	; 0 bytes @ 0x2
   273                           	global	??_lcd_puts
   274  0072                     ??_lcd_puts:	; 0 bytes @ 0x2
   275                           	global	??_lcd_putch
   276  0072                     ??_lcd_putch:	; 0 bytes @ 0x2
   277                           	global	??__delay_ms
   278  0072                     ??__delay_ms:	; 0 bytes @ 0x2
   279                           	global	??_ADCInit
   280  0072                     ??_ADCInit:	; 0 bytes @ 0x2
   281                           	global	??_ADCRead
   282  0072                     ??_ADCRead:	; 0 bytes @ 0x2
   283                           	global	??_lcd_clear
   284  0072                     ??_lcd_clear:	; 0 bytes @ 0x2
   285                           	global	lcd_putch@c
   286  0072                     lcd_putch@c:	; 1 bytes @ 0x2
   287                           	global	lcd_goto@pos
   288  0072                     lcd_goto@pos:	; 1 bytes @ 0x2
   289                           	global	controlMotor@Rightpt
   290  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   291  0072                     	ds	1
   292                           	global	??_lcdCountdown
   293  0073                     ??_lcdCountdown:	; 0 bytes @ 0x3
   294                           	global	__delay_ms@i
   295  0073                     __delay_ms@i:	; 1 bytes @ 0x3
   296                           	global	lcdCountdown@t
   297  0073                     lcdCountdown@t:	; 1 bytes @ 0x3
   298                           	global	lcd_puts@s
   299  0073                     lcd_puts@s:	; 1 bytes @ 0x3
   300                           	global	___ftpack@exp
   301  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   302  0073                     	ds	1
   303                           	global	??_lcd_init
   304  0074                     ??_lcd_init:	; 0 bytes @ 0x4
   305                           	global	??_controlMotor
   306  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   307                           	global	??_searchTrack
   308  0074                     ??_searchTrack:	; 0 bytes @ 0x4
   309                           	global	__delay_ms@us
   310  0074                     __delay_ms@us:	; 1 bytes @ 0x4
   311                           	global	___ftpack@sign
   312  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   313  0074                     	ds	1
   314                           	global	??___ftpack
   315  0075                     ??___ftpack:	; 0 bytes @ 0x5
   316                           	global	??_doDelay
   317  0075                     ??_doDelay:	; 0 bytes @ 0x5
   318  0075                     	ds	1
   319                           	global	ADCRead@ch
   320  0076                     ADCRead@ch:	; 1 bytes @ 0x6
   321                           	global	lcd_init@init_value
   322  0076                     lcd_init@init_value:	; 1 bytes @ 0x6
   323  0076                     	ds	2
   324                           	global	?___ftge
   325  0078                     ?___ftge:	; 1 bit 
   326                           	global	___ftge@ff1
   327  0078                     ___ftge@ff1:	; 3 bytes @ 0x8
   328  0078                     	ds	3
   329                           	global	___ftge@ff2
   330  007B                     ___ftge@ff2:	; 3 bytes @ 0xB
   331  007B                     	ds	3
   332                           psect	cstackBANK0,class=BANK0,space=1
   333                           global __pcstackBANK0
   334  0020                     __pcstackBANK0:
   335                           	global	??___ftge
   336  0020                     ??___ftge:	; 0 bytes @ 0x0
   337  0020                     	ds	6
   338                           	global	?___awtoft
   339  0026                     ?___awtoft:	; 3 bytes @ 0x6
   340                           	global	___awtoft@c
   341  0026                     ___awtoft@c:	; 2 bytes @ 0x6
   342  0026                     	ds	3
   343                           	global	??___awtoft
   344  0029                     ??___awtoft:	; 0 bytes @ 0x9
   345  0029                     	ds	2
   346                           	global	___awtoft@sign
   347  002B                     ___awtoft@sign:	; 1 bytes @ 0xB
   348  002B                     	ds	1
   349                           	global	??_main
   350  002C                     ??_main:	; 0 bytes @ 0xC
   351  002C                     	ds	2
   352                           	global	main@leftpt
   353  002E                     main@leftpt:	; 2 bytes @ 0xE
   354  002E                     	ds	2
   355                           	global	main@rightpt
   356  0030                     main@rightpt:	; 2 bytes @ 0x10
   357  0030                     	ds	2
   358                           	global	main@read
   359  0032                     main@read:	; 2 bytes @ 0x12
   360  0032                     	ds	2
   361 ;;Data sizes: Strings 7, constant 0, data 0, bss 18, persistent 0 stack 0
   362 ;;Auto spaces:   Size  Autos    Used
   363 ;; COMMON          14     14      14
   364 ;; BANK0           80     20      38
   365 ;; BANK1           80      0       0
   366 ;; BANK3           96      0       0
   367 ;; BANK2           80      0       0
   368                           
   369 ;;
   370 ;; Pointer list with targets:
   371                           
   372 ;; ?___ftpack	float  size(1) Largest target is 0
   373 ;;
   374 ;; ?___awtoft	float  size(1) Largest target is 0
   375 ;;
   376 ;; ?_ADCRead	unsigned int  size(1) Largest target is 0
   377 ;;
   378 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 7
   379 ;;		 -> STR_1(CODE[7]), 
   380 ;;
   381                           
   382                           
   383 ;;
   384 ;; Critical Paths under _main in COMMON
   385 ;;
   386 ;;   _main->___ftge
   387 ;;   _doDelay->__delay_ms
   388 ;;   _lcd_init->_lcd_clear
   389 ;;   _lcdCountdown->_lcd_goto
   390 ;;   _lcdCountdown->_lcd_putch
   391 ;;   _lcd_clear->_lcd_write
   392 ;;   _lcd_putch->_lcd_write
   393 ;;   _lcd_puts->_lcd_write
   394 ;;   _lcd_goto->_lcd_write
   395 ;;   ___awtoft->___ftge
   396 ;;   _searchTrack->_controlMotor
   397 ;;   ___ftge->___ftpack
   398 ;;
   399 ;; Critical Paths under _main in BANK0
   400 ;;
   401 ;;   _main->___awtoft
   402 ;;   ___awtoft->___ftge
   403 ;;
   404 ;; Critical Paths under _main in BANK1
   405 ;;
   406 ;;   None.
   407 ;;
   408 ;; Critical Paths under _main in BANK3
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;; Critical Paths under _main in BANK2
   413 ;;
   414 ;;   None.
   415                           
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   418 ;;
   419                           
   420 ;;
   421 ;;Call Graph Tables:
   422 ;;
   423 ;; ---------------------------------------------------------------------------------
   424 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   425 ;; ---------------------------------------------------------------------------------
   426 ;; (0) _main                                                 8     8      0    1258
   427 ;;                                             12 BANK0      8     8      0
   428 ;;                           _lcd_init
   429 ;;                            _doDelay
   430 ;;                            _ADCInit
   431 ;;                            _ADCRead
   432 ;;                           ___awtoft
   433 ;;                             ___ftge
   434 ;;                        _searchTrack
   435 ;;                       _controlMotor
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (1) _doDelay                                              0     0      0     377
   438 ;;                       _lcdCountdown
   439 ;;                          __delay_ms
   440 ;;                           _lcd_goto
   441 ;;                           _lcd_puts
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (1) _lcd_init                                             3     3      0     111
   444 ;;                                              4 COMMON     3     3      0
   445 ;;                          _lcd_write
   446 ;;                          _lcd_clear
   447 ;; ---------------------------------------------------------------------------------
   448 ;; (2) _lcdCountdown                                         1     1      0     154
   449 ;;                                              3 COMMON     1     1      0
   450 ;;                           _lcd_goto
   451 ;;                          _lcd_putch
   452 ;; ---------------------------------------------------------------------------------
   453 ;; (2) _lcd_clear                                            2     2      0      44
   454 ;;                                              2 COMMON     2     2      0
   455 ;;                          _lcd_write
   456 ;; ---------------------------------------------------------------------------------
   457 ;; (3) _lcd_putch                                            1     1      0      66
   458 ;;                                              2 COMMON     1     1      0
   459 ;;                          _lcd_write
   460 ;; ---------------------------------------------------------------------------------
   461 ;; (2) _lcd_puts                                             2     2      0      89
   462 ;;                                              2 COMMON     2     2      0
   463 ;;                          _lcd_write
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (2) _lcd_goto                                             1     1      0      66
   466 ;;                                              2 COMMON     1     1      0
   467 ;;                          _lcd_write
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (1) ___awtoft                                             6     3      3     300
   470 ;;                                              6 BANK0      6     3      3
   471 ;;                           ___ftpack
   472 ;;                             ___ftge (ARG)
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (3) _lcd_write                                            2     2      0      44
   475 ;;                                              0 COMMON     2     2      0
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (1) _searchTrack                                          0     0      0      44
   478 ;;                       _controlMotor
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (1) ___ftge                                              12     6      6     136
   481 ;;                                              8 COMMON     6     0      6
   482 ;;                                              0 BANK0      6     6      0
   483 ;;                           ___ftpack (ARG)
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (2) ___ftpack                                             8     3      5     209
   486 ;;                                              0 COMMON     8     3      5
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _ADCRead                                              7     5      2      22
   489 ;;                                              0 COMMON     7     5      2
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (1) _ADCInit                                              2     0      2      88
   492 ;;                                              0 COMMON     2     0      2
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (1) _controlMotor                                         4     0      4      44
   495 ;;                                              0 COMMON     4     0      4
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (2) __delay_ms                                            5     3      2      68
   498 ;;                                              0 COMMON     5     3      2
   499 ;; ---------------------------------------------------------------------------------
   500 ;; Estimated maximum stack depth 3
   501 ;; ---------------------------------------------------------------------------------
   502                           
   503 ;; Call Graph Graphs:
   504                           
   505 ;; _main (ROOT)
   506 ;;   _lcd_init
   507 ;;     _lcd_write
   508 ;;     _lcd_clear
   509 ;;       _lcd_write
   510 ;;   _doDelay
   511 ;;     _lcdCountdown
   512 ;;       _lcd_goto
   513 ;;         _lcd_write
   514 ;;       _lcd_putch
   515 ;;         _lcd_write
   516 ;;     __delay_ms
   517 ;;     _lcd_goto
   518 ;;       _lcd_write
   519 ;;     _lcd_puts
   520 ;;       _lcd_write
   521 ;;   _ADCInit
   522 ;;   _ADCRead
   523 ;;   ___awtoft
   524 ;;     ___ftpack
   525 ;;     ___ftge (ARG)
   526 ;;       ___ftpack (ARG)
   527 ;;   ___ftge
   528 ;;     ___ftpack (ARG)
   529 ;;   _searchTrack
   530 ;;     _controlMotor
   531 ;;   _controlMotor
   532 ;;
   533                           
   534 ;; Address spaces:
   535                           
   536 ;;Name               Size   Autos  Total    Cost      Usage
   537 ;;BITCOMMON            E      0       0       0        0.0%
   538 ;;EEDATA             100      0       0       0        0.0%
   539 ;;NULL                 0      0       0       0        0.0%
   540 ;;CODE                 0      0       0       0        0.0%
   541 ;;COMMON               E      E       E       1      100.0%
   542 ;;BITSFR0              0      0       0       1        0.0%
   543 ;;SFR0                 0      0       0       1        0.0%
   544 ;;BITSFR1              0      0       0       2        0.0%
   545 ;;SFR1                 0      0       0       2        0.0%
   546 ;;STACK                0      0       4       2        0.0%
   547 ;;BITBANK0            50      0       0       3        0.0%
   548 ;;BANK0               50     14      26       4       47.5%
   549 ;;BITSFR3              0      0       0       4        0.0%
   550 ;;SFR3                 0      0       0       4        0.0%
   551 ;;BITBANK1            50      0       0       5        0.0%
   552 ;;BITSFR2              0      0       0       5        0.0%
   553 ;;SFR2                 0      0       0       5        0.0%
   554 ;;BANK1               50      0       0       6        0.0%
   555 ;;BITBANK3            60      0       0       7        0.0%
   556 ;;BANK3               60      0       0       8        0.0%
   557 ;;BANK2               50      0       0       9        0.0%
   558 ;;ABS                  0      0      34      10        0.0%
   559 ;;BITBANK2            50      0       0      11        0.0%
   560 ;;DATA                 0      0      38      12        0.0%
   561                           
   562                           	global	_main
   563                           psect	maintext,global,class=CODE,delta=2
   564                           global __pmaintext
   565  0679                     __pmaintext:
   566                           
   567 ;; *************** function _main *****************
   568 ;; Defined at:
   569 ;;		line 312 in file "newmain.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  read            2   18[BANK0 ] int 
   574 ;;  rightpt         2   16[BANK0 ] int 
   575 ;;  leftpt          2   14[BANK0 ] int 
   576 ;; Return value:  Size  Location     Type
   577 ;;                  2  1563[COMMON] int 
   578 ;; Registers used:
   579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   580 ;; Tracked objects:
   581 ;;		On entry : 17F/0
   582 ;;		On exit  : 0/0
   583 ;;		Unchanged: 0/0
   584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   585 ;;      Params:         0       0       0       0       0
   586 ;;      Locals:         0       6       0       0       0
   587 ;;      Temps:          0       2       0       0       0
   588 ;;      Totals:         0       8       0       0       0
   589 ;;Total ram usage:        8 bytes
   590 ;; Hardware stack levels required when called:    4
   591 ;; This function calls:
   592 ;;		_lcd_init
   593 ;;		_doDelay
   594 ;;		_ADCInit
   595 ;;		_ADCRead
   596 ;;		___awtoft
   597 ;;		___ftge
   598 ;;		_searchTrack
   599 ;;		_controlMotor
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           psect	maintext
   605                           	file	"newmain.c"
   606                           	line	312
   607                           	global	__size_of_main
   608  00BD                     	__size_of_main	equ	__end_of_main-_main
   609                           	
   610  0679                     _main:	
   611                           	opt	stack 4
   612                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   613                           	line	314
   614                           	
   615  0679                     l6463:	
   616                           ;newmain.c: 314: TRISA = 0x00;
   617  0679  1683               	bsf	status, 5	;RP0=1, select bank1
   618  067A  1303               	bcf	status, 6	;RP1=0, select bank1
   619  067B  0185               	clrf	(133)^080h	;volatile
   620                           	line	315
   621                           ;newmain.c: 315: TRISB = 0x00;
   622  067C  0186               	clrf	(134)^080h	;volatile
   623                           	line	316
   624                           ;newmain.c: 316: TRISC = 0x00;
   625  067D  0187               	clrf	(135)^080h	;volatile
   626                           	line	317
   627                           ;newmain.c: 317: TRISD = 0X00;
   628  067E  0188               	clrf	(136)^080h	;volatile
   629                           	line	318
   630                           ;newmain.c: 318: TRISE = 0X00;
   631  067F  0189               	clrf	(137)^080h	;volatile
   632                           	line	320
   633                           	
   634  0680                     l6465:	
   635                           ;newmain.c: 320: lcd_init();
   636  0680  120A  118A  2538   	fcall	_lcd_init
              120A  118A         
   637                           	line	324
   638                           	
   639  0685                     l6467:	
   640                           ;newmain.c: 324: doDelay();
   641  0685  120A  118A  2736   	fcall	_doDelay
              120A  118A         
   642                           	line	326
   643                           	
   644  068A                     l6469:	
   645                           ;newmain.c: 326: ADCInit (0);
   646  068A  3000               	movlw	low(0)
   647  068B  00F0               	movwf	(?_ADCInit)
   648  068C  3000               	movlw	high(0)
   649  068D  00F1               	movwf	((?_ADCInit))+1
   650  068E  120A  118A  2505   	fcall	_ADCInit
              120A  118A         
   651                           	line	327
   652                           	
   653  0693                     l6471:	
   654                           ;newmain.c: 327: ADCInit (1);
   655  0693  3001               	movlw	low(01h)
   656  0694  00F0               	movwf	(?_ADCInit)
   657  0695  3000               	movlw	high(01h)
   658  0696  00F1               	movwf	((?_ADCInit))+1
   659  0697  120A  118A  2505   	fcall	_ADCInit
              120A  118A         
   660  069C  2E9D               	goto	l6473
   661                           	line	330
   662                           ;newmain.c: 328: int read, leftpt, rightpt;
   663                           ;newmain.c: 330: while (1)
   664                           	
   665  069D                     l1564:	
   666                           	line	333
   667                           	
   668  069D                     l6473:	
   669                           ;newmain.c: 331: {
   670                           ;newmain.c: 333: read = ADCRead(0);
   671  069D  3000               	movlw	(0)
   672  069E  120A  118A  24A8   	fcall	_ADCRead
              120A  118A         
   673  06A3  0871               	movf	(1+(?_ADCRead)),w
   674  06A4  1283               	bcf	status, 5	;RP0=0, select bank0
   675  06A5  1303               	bcf	status, 6	;RP1=0, select bank0
   676  06A6  01B3               	clrf	(main@read+1)
   677  06A7  07B3               	addwf	(main@read+1)
   678  06A8  0870               	movf	(0+(?_ADCRead)),w
   679  06A9  01B2               	clrf	(main@read)
   680  06AA  07B2               	addwf	(main@read)
   681                           
   682                           	line	334
   683                           	
   684  06AB                     l6475:	
   685                           ;newmain.c: 334: leftpt = (read > 2.2) ? 1 : 0;
   686  06AB  30CD               	movlw	0xcd
   687  06AC  00F8               	movwf	(?___ftge)
   688  06AD  300C               	movlw	0xc
   689  06AE  00F9               	movwf	(?___ftge+1)
   690  06AF  3040               	movlw	0x40
   691  06B0  00FA               	movwf	(?___ftge+2)
   692  06B1  0833               	movf	(main@read+1),w
   693  06B2  01A7               	clrf	(?___awtoft+1)
   694  06B3  07A7               	addwf	(?___awtoft+1)
   695  06B4  0832               	movf	(main@read),w
   696  06B5  01A6               	clrf	(?___awtoft)
   697  06B6  07A6               	addwf	(?___awtoft)
   698                           
   699  06B7  120A  118A  247C   	fcall	___awtoft
              120A  118A         
   700  06BC  1283               	bcf	status, 5	;RP0=0, select bank0
   701  06BD  1303               	bcf	status, 6	;RP1=0, select bank0
   702  06BE  0826               	movf	(0+(?___awtoft)),w
   703  06BF  00FB               	movwf	0+(?___ftge)+03h
   704  06C0  0827               	movf	(1+(?___awtoft)),w
   705  06C1  00FC               	movwf	1+(?___ftge)+03h
   706  06C2  0828               	movf	(2+(?___awtoft)),w
   707  06C3  00FD               	movwf	2+(?___ftge)+03h
   708  06C4  120A  118A  258E   	fcall	___ftge
              120A  118A         
   709  06C9  3000               	movlw	0
   710  06CA  1C03               	btfss	status,0
   711  06CB  3001               	movlw	1
   712  06CC  1283               	bcf	status, 5	;RP0=0, select bank0
   713  06CD  1303               	bcf	status, 6	;RP1=0, select bank0
   714  06CE  00AC               	movwf	(??_main+0)+0
   715  06CF  01AD               	clrf	(??_main+0)+0+1
   716  06D0  082C               	movf	0+(??_main+0)+0,w
   717  06D1  00AE               	movwf	(main@leftpt)
   718  06D2  082D               	movf	1+(??_main+0)+0,w
   719  06D3  00AF               	movwf	(main@leftpt+1)
   720                           	line	337
   721                           	
   722  06D4                     l6477:	
   723                           ;newmain.c: 337: read = ADCRead(1);
   724  06D4  3001               	movlw	(01h)
   725  06D5  120A  118A  24A8   	fcall	_ADCRead
              120A  118A         
   726  06DA  0871               	movf	(1+(?_ADCRead)),w
   727  06DB  1283               	bcf	status, 5	;RP0=0, select bank0
   728  06DC  1303               	bcf	status, 6	;RP1=0, select bank0
   729  06DD  01B3               	clrf	(main@read+1)
   730  06DE  07B3               	addwf	(main@read+1)
   731  06DF  0870               	movf	(0+(?_ADCRead)),w
   732  06E0  01B2               	clrf	(main@read)
   733  06E1  07B2               	addwf	(main@read)
   734                           
   735                           	line	338
   736                           	
   737  06E2                     l6479:	
   738                           ;newmain.c: 338: rightpt = (read > 2.2) ? 1 : 0;
   739  06E2  30CD               	movlw	0xcd
   740  06E3  00F8               	movwf	(?___ftge)
   741  06E4  300C               	movlw	0xc
   742  06E5  00F9               	movwf	(?___ftge+1)
   743  06E6  3040               	movlw	0x40
   744  06E7  00FA               	movwf	(?___ftge+2)
   745  06E8  0833               	movf	(main@read+1),w
   746  06E9  01A7               	clrf	(?___awtoft+1)
   747  06EA  07A7               	addwf	(?___awtoft+1)
   748  06EB  0832               	movf	(main@read),w
   749  06EC  01A6               	clrf	(?___awtoft)
   750  06ED  07A6               	addwf	(?___awtoft)
   751                           
   752  06EE  120A  118A  247C   	fcall	___awtoft
              120A  118A         
   753  06F3  1283               	bcf	status, 5	;RP0=0, select bank0
   754  06F4  1303               	bcf	status, 6	;RP1=0, select bank0
   755  06F5  0826               	movf	(0+(?___awtoft)),w
   756  06F6  00FB               	movwf	0+(?___ftge)+03h
   757  06F7  0827               	movf	(1+(?___awtoft)),w
   758  06F8  00FC               	movwf	1+(?___ftge)+03h
   759  06F9  0828               	movf	(2+(?___awtoft)),w
   760  06FA  00FD               	movwf	2+(?___ftge)+03h
   761  06FB  120A  118A  258E   	fcall	___ftge
              120A  118A         
   762  0700  3000               	movlw	0
   763  0701  1C03               	btfss	status,0
   764  0702  3001               	movlw	1
   765  0703  1283               	bcf	status, 5	;RP0=0, select bank0
   766  0704  1303               	bcf	status, 6	;RP1=0, select bank0
   767  0705  00AC               	movwf	(??_main+0)+0
   768  0706  01AD               	clrf	(??_main+0)+0+1
   769  0707  082C               	movf	0+(??_main+0)+0,w
   770  0708  00B0               	movwf	(main@rightpt)
   771  0709  082D               	movf	1+(??_main+0)+0,w
   772  070A  00B1               	movwf	(main@rightpt+1)
   773                           	line	340
   774                           	
   775  070B                     l6481:	
   776                           ;newmain.c: 340: if((leftpt==0) && (rightpt==0))
   777  070B  082F               	movf	((main@leftpt+1)),w
   778  070C  042E               	iorwf	((main@leftpt)),w
   779  070D  1D03               	skipz
   780  070E  2F10               	goto	u3251
   781  070F  2F11               	goto	u3250
   782  0710                     u3251:
   783  0710  2F1D               	goto	l6487
   784  0711                     u3250:
   785                           	
   786  0711                     l6483:	
   787  0711  0831               	movf	((main@rightpt+1)),w
   788  0712  0430               	iorwf	((main@rightpt)),w
   789  0713  1D03               	skipz
   790  0714  2F16               	goto	u3261
   791  0715  2F17               	goto	u3260
   792  0716                     u3261:
   793  0716  2F1D               	goto	l6487
   794  0717                     u3260:
   795                           	line	342
   796                           	
   797  0717                     l6485:	
   798                           ;newmain.c: 341: {
   799                           ;newmain.c: 342: searchTrack();
   800  0717  120A  118A  24D5   	fcall	_searchTrack
              120A  118A         
   801                           	line	343
   802                           ;newmain.c: 343: }
   803  071C  2E9D               	goto	l6473
   804                           	line	344
   805                           	
   806  071D                     l1565:	
   807                           	line	346
   808                           	
   809  071D                     l6487:	
   810                           ;newmain.c: 344: else
   811                           ;newmain.c: 345: {
   812                           ;newmain.c: 346: controlMotor(leftpt, rightpt);
   813  071D  1283               	bcf	status, 5	;RP0=0, select bank0
   814  071E  1303               	bcf	status, 6	;RP1=0, select bank0
   815  071F  082F               	movf	(main@leftpt+1),w
   816  0720  01F1               	clrf	(?_controlMotor+1)
   817  0721  07F1               	addwf	(?_controlMotor+1)
   818  0722  082E               	movf	(main@leftpt),w
   819  0723  01F0               	clrf	(?_controlMotor)
   820  0724  07F0               	addwf	(?_controlMotor)
   821                           
   822  0725  0831               	movf	(main@rightpt+1),w
   823  0726  01F3               	clrf	1+(?_controlMotor)+02h
   824  0727  07F3               	addwf	1+(?_controlMotor)+02h
   825  0728  0830               	movf	(main@rightpt),w
   826  0729  01F2               	clrf	0+(?_controlMotor)+02h
   827  072A  07F2               	addwf	0+(?_controlMotor)+02h
   828                           
   829  072B  120A  118A  2410   	fcall	_controlMotor
              120A  118A         
   830  0730  2E9D               	goto	l6473
   831                           	line	347
   832                           	
   833  0731                     l1566:	
   834  0731  2E9D               	goto	l6473
   835                           	line	348
   836                           	
   837  0732                     l1567:	
   838                           	line	330
   839  0732  2E9D               	goto	l6473
   840                           	
   841  0733                     l1568:	
   842                           	line	350
   843                           	
   844  0733                     l1569:	
   845                           	global	start
   846  0733  120A  118A  2800   	ljmp	start
   847                           	opt stack 0
   848                           GLOBAL	__end_of_main
   849  0736                     	__end_of_main:
   850 ;; =============== function _main ends ============
   851                           
   852                           	signat	_main,90
   853                           	global	_doDelay
   854                           psect	text414,local,class=CODE,delta=2
   855                           global __ptext414
   856  0736                     __ptext414:
   857                           
   858 ;; *************** function _doDelay *****************
   859 ;; Defined at:
   860 ;;		line 167 in file "newmain.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   874 ;;      Params:         0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used:    1
   880 ;; Hardware stack levels required when called:    3
   881 ;; This function calls:
   882 ;;		_lcdCountdown
   883 ;;		__delay_ms
   884 ;;		_lcd_goto
   885 ;;		_lcd_puts
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           psect	text414
   891                           	file	"newmain.c"
   892                           	line	167
   893                           	global	__size_of_doDelay
   894  00CA                     	__size_of_doDelay	equ	__end_of_doDelay-_doDelay
   895                           	
   896  0736                     _doDelay:	
   897                           	opt	stack 4
   898                           ; Regs used in _doDelay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   899                           	line	168
   900                           	
   901  0736                     l6443:	
   902                           ;newmain.c: 168: lcdCountdown('8');
   903  0736  3038               	movlw	(038h)
   904  0737  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
   905                           	line	169
   906                           ;newmain.c: 169: _delay_ms(1000);
   907  073C  30E8               	movlw	low(03E8h)
   908  073D  00F0               	movwf	(?__delay_ms)
   909  073E  3003               	movlw	high(03E8h)
   910  073F  00F1               	movwf	((?__delay_ms))+1
   911  0740  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
   912                           	line	171
   913                           ;newmain.c: 171: lcdCountdown('7');
   914  0745  3037               	movlw	(037h)
   915  0746  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
   916                           	line	172
   917                           ;newmain.c: 172: _delay_ms(1000);
   918  074B  30E8               	movlw	low(03E8h)
   919  074C  00F0               	movwf	(?__delay_ms)
   920  074D  3003               	movlw	high(03E8h)
   921  074E  00F1               	movwf	((?__delay_ms))+1
   922  074F  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
   923                           	line	174
   924                           ;newmain.c: 174: lcdCountdown('6');
   925  0754  3036               	movlw	(036h)
   926  0755  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
   927                           	line	175
   928                           ;newmain.c: 175: _delay_ms(1000);
   929  075A  30E8               	movlw	low(03E8h)
   930  075B  00F0               	movwf	(?__delay_ms)
   931  075C  3003               	movlw	high(03E8h)
   932  075D  00F1               	movwf	((?__delay_ms))+1
   933  075E  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
   934                           	line	177
   935                           ;newmain.c: 177: lcdCountdown('5');
   936  0763  3035               	movlw	(035h)
   937  0764  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
   938                           	line	178
   939                           ;newmain.c: 178: _delay_ms(1000);
   940  0769  30E8               	movlw	low(03E8h)
   941  076A  00F0               	movwf	(?__delay_ms)
   942  076B  3003               	movlw	high(03E8h)
   943  076C  00F1               	movwf	((?__delay_ms))+1
   944  076D  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
   945                           	line	180
   946                           ;newmain.c: 180: lcdCountdown('4');
   947  0772  3034               	movlw	(034h)
   948  0773  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
   949                           	line	181
   950                           ;newmain.c: 181: _delay_ms(1000);
   951  0778  30E8               	movlw	low(03E8h)
   952  0779  00F0               	movwf	(?__delay_ms)
   953  077A  3003               	movlw	high(03E8h)
   954  077B  00F1               	movwf	((?__delay_ms))+1
   955  077C  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
   956                           	line	186
   957                           ;newmain.c: 186: lcdCountdown('3');
   958  0781  3033               	movlw	(033h)
   959  0782  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
   960                           	line	187
   961                           	
   962  0787                     l6445:	
   963                           ;newmain.c: 187: RC3 = 1;
   964  0787  1283               	bcf	status, 5	;RP0=0, select bank0
   965  0788  1303               	bcf	status, 6	;RP1=0, select bank0
   966  0789  1587               	bsf	(59/8),(59)&7
   967                           	line	188
   968                           ;newmain.c: 188: _delay_ms(200);
   969  078A  30C8               	movlw	low(0C8h)
   970  078B  00F0               	movwf	(?__delay_ms)
   971  078C  3000               	movlw	high(0C8h)
   972  078D  00F1               	movwf	((?__delay_ms))+1
   973  078E  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
   974                           	line	189
   975                           	
   976  0793                     l6447:	
   977                           ;newmain.c: 189: RC3 = 0;
   978  0793  1283               	bcf	status, 5	;RP0=0, select bank0
   979  0794  1303               	bcf	status, 6	;RP1=0, select bank0
   980  0795  1187               	bcf	(59/8),(59)&7
   981                           	line	190
   982                           ;newmain.c: 190: _delay_ms(700);
   983  0796  30BC               	movlw	low(02BCh)
   984  0797  00F0               	movwf	(?__delay_ms)
   985  0798  3002               	movlw	high(02BCh)
   986  0799  00F1               	movwf	((?__delay_ms))+1
   987  079A  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
   988                           	line	192
   989                           	
   990  079F                     l6449:	
   991                           ;newmain.c: 192: RC3 = 1;
   992  079F  1283               	bcf	status, 5	;RP0=0, select bank0
   993  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
   994  07A1  1587               	bsf	(59/8),(59)&7
   995                           	line	193
   996                           ;newmain.c: 193: _delay_ms(100);
   997  07A2  3064               	movlw	low(064h)
   998  07A3  00F0               	movwf	(?__delay_ms)
   999  07A4  3000               	movlw	high(064h)
  1000  07A5  00F1               	movwf	((?__delay_ms))+1
  1001  07A6  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
  1002                           	line	194
  1003                           ;newmain.c: 194: lcdCountdown('2');
  1004  07AB  3032               	movlw	(032h)
  1005  07AC  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
  1006                           	line	195
  1007                           ;newmain.c: 195: _delay_ms(100);
  1008  07B1  3064               	movlw	low(064h)
  1009  07B2  00F0               	movwf	(?__delay_ms)
  1010  07B3  3000               	movlw	high(064h)
  1011  07B4  00F1               	movwf	((?__delay_ms))+1
  1012  07B5  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
  1013                           	line	196
  1014                           	
  1015  07BA                     l6451:	
  1016                           ;newmain.c: 196: RC3 = 0;
  1017  07BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1018  07BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1019  07BC  1187               	bcf	(59/8),(59)&7
  1020                           	line	197
  1021                           ;newmain.c: 197: _delay_ms(700);
  1022  07BD  30BC               	movlw	low(02BCh)
  1023  07BE  00F0               	movwf	(?__delay_ms)
  1024  07BF  3002               	movlw	high(02BCh)
  1025  07C0  00F1               	movwf	((?__delay_ms))+1
  1026  07C1  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
  1027                           	line	199
  1028                           	
  1029  07C6                     l6453:	
  1030                           ;newmain.c: 199: RC3 = 1;
  1031  07C6  1283               	bcf	status, 5	;RP0=0, select bank0
  1032  07C7  1303               	bcf	status, 6	;RP1=0, select bank0
  1033  07C8  1587               	bsf	(59/8),(59)&7
  1034                           	line	200
  1035                           ;newmain.c: 200: _delay_ms(200);
  1036  07C9  30C8               	movlw	low(0C8h)
  1037  07CA  00F0               	movwf	(?__delay_ms)
  1038  07CB  3000               	movlw	high(0C8h)
  1039  07CC  00F1               	movwf	((?__delay_ms))+1
  1040  07CD  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
  1041                           	line	201
  1042                           ;newmain.c: 201: lcdCountdown('1');
  1043  07D2  3031               	movlw	(031h)
  1044  07D3  120A  118A  23D5   	fcall	_lcdCountdown
              120A  118A         
  1045                           	line	202
  1046                           	
  1047  07D8                     l6455:	
  1048                           ;newmain.c: 202: RC3 = 0;
  1049  07D8  1283               	bcf	status, 5	;RP0=0, select bank0
  1050  07D9  1303               	bcf	status, 6	;RP1=0, select bank0
  1051  07DA  1187               	bcf	(59/8),(59)&7
  1052                           	line	203
  1053                           ;newmain.c: 203: _delay_ms(700);
  1054  07DB  30BC               	movlw	low(02BCh)
  1055  07DC  00F0               	movwf	(?__delay_ms)
  1056  07DD  3002               	movlw	high(02BCh)
  1057  07DE  00F1               	movwf	((?__delay_ms))+1
  1058  07DF  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
  1059                           	line	205
  1060                           	
  1061  07E4                     l6457:	
  1062                           ;newmain.c: 205: RC4 = 1;
  1063  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1064  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1065  07E6  1607               	bsf	(60/8),(60)&7
  1066                           	line	206
  1067                           ;newmain.c: 206: _delay_ms(300);
  1068  07E7  302C               	movlw	low(012Ch)
  1069  07E8  00F0               	movwf	(?__delay_ms)
  1070  07E9  3001               	movlw	high(012Ch)
  1071  07EA  00F1               	movwf	((?__delay_ms))+1
  1072  07EB  120A  118A  2456   	fcall	__delay_ms
              120A  118A         
  1073                           	line	207
  1074                           	
  1075  07F0                     l6459:	
  1076                           ;newmain.c: 207: RC4 = 0;
  1077  07F0  1283               	bcf	status, 5	;RP0=0, select bank0
  1078  07F1  1303               	bcf	status, 6	;RP1=0, select bank0
  1079  07F2  1207               	bcf	(60/8),(60)&7
  1080                           	line	209
  1081                           ;newmain.c: 209: lcd_goto(0);
  1082  07F3  3000               	movlw	(0)
  1083  07F4  120A  118A  23BC   	fcall	_lcd_goto
              120A  118A         
  1084                           	line	210
  1085                           	
  1086  07F9                     l6461:	
  1087                           ;newmain.c: 210: lcd_puts("Start!");
  1088  07F9  3001               	movlw	((STR_1-__stringbase))&0ffh
  1089  07FA  120A  118A  2432   	fcall	_lcd_puts
              120A  118A         
  1090                           	line	212
  1091                           	
  1092  07FF                     l1542:	
  1093  07FF  0008               	return
  1094                           	opt stack 0
  1095                           GLOBAL	__end_of_doDelay
  1096  0800                     	__end_of_doDelay:
  1097 ;; =============== function _doDelay ends ============
  1098                           
  1099                           	signat	_doDelay,88
  1100                           	global	_lcd_init
  1101                           psect	text415,local,class=CODE,delta=2
  1102                           global __ptext415
  1103  0538                     __ptext415:
  1104                           
  1105 ;; *************** function _lcd_init *****************
  1106 ;; Defined at:
  1107 ;;		line 93 in file "lcd.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  init_value      1    6[COMMON] unsigned char 
  1112 ;; Return value:  Size  Location     Type
  1113 ;;		None               void
  1114 ;; Registers used:
  1115 ;;		wreg, status,2, status,0, pclath, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/0
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1121 ;;      Params:         0       0       0       0       0
  1122 ;;      Locals:         1       0       0       0       0
  1123 ;;      Temps:          2       0       0       0       0
  1124 ;;      Totals:         3       0       0       0       0
  1125 ;;Total ram usage:        3 bytes
  1126 ;; Hardware stack levels used:    1
  1127 ;; Hardware stack levels required when called:    2
  1128 ;; This function calls:
  1129 ;;		_lcd_write
  1130 ;;		_lcd_clear
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           psect	text415
  1136                           	file	"lcd.c"
  1137                           	line	93
  1138                           	global	__size_of_lcd_init
  1139  0056                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1140                           	
  1141  0538                     _lcd_init:	
  1142                           	opt	stack 5
  1143                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1144                           	line	96
  1145                           	
  1146  0538                     l6407:	
  1147                           ;lcd.c: 94: char init_value;
  1148                           ;lcd.c: 96: ADCON1 = 0x06;
  1149  0538  3006               	movlw	(06h)
  1150  0539  1683               	bsf	status, 5	;RP0=1, select bank1
  1151  053A  1303               	bcf	status, 6	;RP1=0, select bank1
  1152  053B  009F               	movwf	(159)^080h	;volatile
  1153                           	line	98
  1154                           ;lcd.c: 98: init_value = 0x3;
  1155  053C  3003               	movlw	(03h)
  1156  053D  00F4               	movwf	(??_lcd_init+0)+0
  1157  053E  0874               	movf	(??_lcd_init+0)+0,w
  1158  053F  00F6               	movwf	(lcd_init@init_value)
  1159                           	line	99
  1160                           	
  1161  0540                     l6409:	
  1162                           ;lcd.c: 99: TRISA=0;
  1163  0540  0185               	clrf	(133)^080h	;volatile
  1164                           	line	100
  1165                           	
  1166  0541                     l6411:	
  1167                           ;lcd.c: 100: TRISD=0;
  1168  0541  0188               	clrf	(136)^080h	;volatile
  1169                           	line	101
  1170                           	
  1171  0542                     l6413:	
  1172                           ;lcd.c: 101: RA3 = 0;
  1173  0542  1283               	bcf	status, 5	;RP0=0, select bank0
  1174  0543  1303               	bcf	status, 6	;RP1=0, select bank0
  1175  0544  1185               	bcf	(43/8),(43)&7
  1176                           	line	102
  1177                           	
  1178  0545                     l6415:	
  1179                           ;lcd.c: 102: RA1 = 0;
  1180  0545  1085               	bcf	(41/8),(41)&7
  1181                           	line	103
  1182                           	
  1183  0546                     l6417:	
  1184                           ;lcd.c: 103: RA2 = 0;
  1185  0546  1105               	bcf	(42/8),(42)&7
  1186                           	line	105
  1187                           ;lcd.c: 105: _delay((unsigned long)((15)*(4000000/4000.0)));
  1188                           	opt asmopt_off
  1189  0547  3014               movlw	20
  1190  0548  00F5               movwf	((??_lcd_init+0)+0+1),f
  1191  0549  3079               	movlw	121
  1192  054A  00F4               movwf	((??_lcd_init+0)+0),f
  1193  054B                     u3277:
  1194  054B  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1195  054C  2D4B               	goto	u3277
  1196  054D  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1197  054E  2D4B               	goto	u3277
  1198  054F  2D50               	nop2
  1199                           opt asmopt_on
  1200                           
  1201                           	line	106
  1202                           ;lcd.c: 106: PORTD = init_value;
  1203  0550  0876               	movf	(lcd_init@init_value),w
  1204  0551  1283               	bcf	status, 5	;RP0=0, select bank0
  1205  0552  1303               	bcf	status, 6	;RP1=0, select bank0
  1206  0553  0088               	movwf	(8)	;volatile
  1207                           	line	107
  1208                           	
  1209  0554                     l6419:	
  1210                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
  1211  0554  1485               	bsf	(41/8),(41)&7
  1212                           	
  1213  0555                     l6421:	
  1214  0555  1085               	bcf	(41/8),(41)&7
  1215                           	line	108
  1216                           ;lcd.c: 108: _delay((unsigned long)((5)*(4000000/4000.0)));
  1217                           	opt asmopt_off
  1218  0556  3007               movlw	7
  1219  0557  00F5               movwf	((??_lcd_init+0)+0+1),f
  1220  0558  307D               	movlw	125
  1221  0559  00F4               movwf	((??_lcd_init+0)+0),f
  1222  055A                     u3287:
  1223  055A  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1224  055B  2D5A               	goto	u3287
  1225  055C  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1226  055D  2D5A               	goto	u3287
  1227                           opt asmopt_on
  1228                           
  1229                           	line	109
  1230                           	
  1231  055E                     l6423:	
  1232                           ;lcd.c: 109: ((RA1 = 1),(RA1=0));
  1233  055E  1283               	bcf	status, 5	;RP0=0, select bank0
  1234  055F  1303               	bcf	status, 6	;RP1=0, select bank0
  1235  0560  1485               	bsf	(41/8),(41)&7
  1236                           	
  1237  0561                     l6425:	
  1238  0561  1085               	bcf	(41/8),(41)&7
  1239                           	line	110
  1240                           ;lcd.c: 110: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1241                           	opt asmopt_off
  1242  0562  3042               movlw	66
  1243  0563  00F4               movwf	(??_lcd_init+0)+0,f
  1244  0564                     u3297:
  1245  0564  0BF4               decfsz	(??_lcd_init+0)+0,f
  1246  0565  2D64               	goto	u3297
  1247  0566  0064               	clrwdt
  1248                           opt asmopt_on
  1249                           
  1250                           	line	111
  1251                           	
  1252  0567                     l6427:	
  1253                           ;lcd.c: 111: ((RA1 = 1),(RA1=0));
  1254  0567  1283               	bcf	status, 5	;RP0=0, select bank0
  1255  0568  1303               	bcf	status, 6	;RP1=0, select bank0
  1256  0569  1485               	bsf	(41/8),(41)&7
  1257                           	
  1258  056A                     l6429:	
  1259  056A  1085               	bcf	(41/8),(41)&7
  1260                           	line	112
  1261                           ;lcd.c: 112: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1262                           	opt asmopt_off
  1263  056B  3042               movlw	66
  1264  056C  00F4               movwf	(??_lcd_init+0)+0,f
  1265  056D                     u3307:
  1266  056D  0BF4               decfsz	(??_lcd_init+0)+0,f
  1267  056E  2D6D               	goto	u3307
  1268  056F  0064               	clrwdt
  1269                           opt asmopt_on
  1270                           
  1271                           	line	113
  1272                           ;lcd.c: 113: PORTD = 2;
  1273  0570  3002               	movlw	(02h)
  1274  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  1275  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  1276  0573  0088               	movwf	(8)	;volatile
  1277                           	line	114
  1278                           	
  1279  0574                     l6431:	
  1280                           ;lcd.c: 114: ((RA1 = 1),(RA1=0));
  1281  0574  1485               	bsf	(41/8),(41)&7
  1282                           	
  1283  0575                     l6433:	
  1284  0575  1085               	bcf	(41/8),(41)&7
  1285                           	line	116
  1286                           	
  1287  0576                     l6435:	
  1288                           ;lcd.c: 116: lcd_write(0x28);
  1289  0576  3028               	movlw	(028h)
  1290  0577  120A  118A  23F6   	fcall	_lcd_write
              120A  118A         
  1291                           	line	117
  1292                           	
  1293  057C                     l6437:	
  1294                           ;lcd.c: 117: lcd_write(0xF);
  1295  057C  300F               	movlw	(0Fh)
  1296  057D  120A  118A  23F6   	fcall	_lcd_write
              120A  118A         
  1297                           	line	118
  1298                           	
  1299  0582                     l6439:	
  1300                           ;lcd.c: 118: lcd_clear();
  1301  0582  120A  118A  23E3   	fcall	_lcd_clear
              120A  118A         
  1302                           	line	119
  1303                           	
  1304  0587                     l6441:	
  1305                           ;lcd.c: 119: lcd_write(0x6);
  1306  0587  3006               	movlw	(06h)
  1307  0588  120A  118A  23F6   	fcall	_lcd_write
              120A  118A         
  1308                           	line	120
  1309                           	
  1310  058D                     l3080:	
  1311  058D  0008               	return
  1312                           	opt stack 0
  1313                           GLOBAL	__end_of_lcd_init
  1314  058E                     	__end_of_lcd_init:
  1315 ;; =============== function _lcd_init ends ============
  1316                           
  1317                           	signat	_lcd_init,88
  1318                           	global	_lcdCountdown
  1319                           psect	text416,local,class=CODE,delta=2
  1320                           global __ptext416
  1321  03D5                     __ptext416:
  1322                           
  1323 ;; *************** function _lcdCountdown *****************
  1324 ;; Defined at:
  1325 ;;		line 215 in file "newmain.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  t               1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  t               1    3[COMMON] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;		None               void
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         1       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         1       0       0       0       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    2
  1346 ;; This function calls:
  1347 ;;		_lcd_goto
  1348 ;;		_lcd_putch
  1349 ;; This function is called by:
  1350 ;;		_doDelay
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           psect	text416
  1354                           	file	"newmain.c"
  1355                           	line	215
  1356                           	global	__size_of_lcdCountdown
  1357  000E                     	__size_of_lcdCountdown	equ	__end_of_lcdCountdown-_lcdCountdown
  1358                           	
  1359  03D5                     _lcdCountdown:	
  1360                           	opt	stack 4
  1361                           ; Regs used in _lcdCountdown: [wreg+status,2+status,0+pclath+cstack]
  1362                           ;lcdCountdown@t stored from wreg
  1363  03D5  00F3               	movwf	(lcdCountdown@t)
  1364                           	line	216
  1365                           	
  1366  03D6                     l6405:	
  1367                           ;newmain.c: 216: lcd_goto(0);
  1368  03D6  3000               	movlw	(0)
  1369  03D7  120A  118A  23BC   	fcall	_lcd_goto
              120A  118A         
  1370                           	line	217
  1371                           ;newmain.c: 217: lcd_putch(t);
  1372  03DC  0873               	movf	(lcdCountdown@t),w
  1373  03DD  120A  118A  23B1   	fcall	_lcd_putch
              120A  118A         
  1374                           	line	218
  1375                           	
  1376  03E2                     l1545:	
  1377  03E2  0008               	return
  1378                           	opt stack 0
  1379                           GLOBAL	__end_of_lcdCountdown
  1380  03E3                     	__end_of_lcdCountdown:
  1381 ;; =============== function _lcdCountdown ends ============
  1382                           
  1383                           	signat	_lcdCountdown,4216
  1384                           	global	_lcd_clear
  1385                           psect	text417,local,class=CODE,delta=2
  1386                           global __ptext417
  1387  03E3                     __ptext417:
  1388                           
  1389 ;; *************** function _lcd_clear *****************
  1390 ;; Defined at:
  1391 ;;		line 53 in file "lcd.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;		None
  1394 ;; Auto vars:     Size  Location     Type
  1395 ;;		None
  1396 ;; Return value:  Size  Location     Type
  1397 ;;		None               void
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, pclath, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1405 ;;      Params:         0       0       0       0       0
  1406 ;;      Locals:         0       0       0       0       0
  1407 ;;      Temps:          2       0       0       0       0
  1408 ;;      Totals:         2       0       0       0       0
  1409 ;;Total ram usage:        2 bytes
  1410 ;; Hardware stack levels used:    1
  1411 ;; Hardware stack levels required when called:    1
  1412 ;; This function calls:
  1413 ;;		_lcd_write
  1414 ;; This function is called by:
  1415 ;;		_lcd_init
  1416 ;; This function uses a non-reentrant model
  1417 ;;
  1418                           psect	text417
  1419                           	file	"lcd.c"
  1420                           	line	53
  1421                           	global	__size_of_lcd_clear
  1422  0013                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1423                           	
  1424  03E3                     _lcd_clear:	
  1425                           	opt	stack 5
  1426                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1427                           	line	54
  1428                           	
  1429  03E3                     l6399:	
  1430                           ;lcd.c: 54: RA3 = 0;
  1431  03E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1432  03E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1433  03E5  1185               	bcf	(43/8),(43)&7
  1434                           	line	55
  1435                           	
  1436  03E6                     l6401:	
  1437                           ;lcd.c: 55: lcd_write(0x1);
  1438  03E6  3001               	movlw	(01h)
  1439  03E7  120A  118A  23F6   	fcall	_lcd_write
              120A  118A         
  1440                           	line	56
  1441                           	
  1442  03EC                     l6403:	
  1443                           ;lcd.c: 56: _delay((unsigned long)((2)*(4000000/4000.0)));
  1444                           	opt asmopt_off
  1445  03EC  3003               movlw	3
  1446  03ED  00F3               movwf	((??_lcd_clear+0)+0+1),f
  1447  03EE  3097               	movlw	151
  1448  03EF  00F2               movwf	((??_lcd_clear+0)+0),f
  1449  03F0                     u3317:
  1450  03F0  0BF2               	decfsz	((??_lcd_clear+0)+0),f
  1451  03F1  2BF0               	goto	u3317
  1452  03F2  0BF3               	decfsz	((??_lcd_clear+0)+0+1),f
  1453  03F3  2BF0               	goto	u3317
  1454  03F4  2BF5               	nop2
  1455                           opt asmopt_on
  1456                           
  1457                           	line	57
  1458                           	
  1459  03F5                     l3065:	
  1460  03F5  0008               	return
  1461                           	opt stack 0
  1462                           GLOBAL	__end_of_lcd_clear
  1463  03F6                     	__end_of_lcd_clear:
  1464 ;; =============== function _lcd_clear ends ============
  1465                           
  1466                           	signat	_lcd_clear,88
  1467                           	global	_lcd_putch
  1468                           psect	text418,local,class=CODE,delta=2
  1469                           global __ptext418
  1470  03B1                     __ptext418:
  1471                           
  1472 ;; *************** function _lcd_putch *****************
  1473 ;; Defined at:
  1474 ;;		line 73 in file "lcd.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  c               1    wreg     unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  c               1    2[COMMON] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;		None               void
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, pclath, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1488 ;;      Params:         0       0       0       0       0
  1489 ;;      Locals:         1       0       0       0       0
  1490 ;;      Temps:          0       0       0       0       0
  1491 ;;      Totals:         1       0       0       0       0
  1492 ;;Total ram usage:        1 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    1
  1495 ;; This function calls:
  1496 ;;		_lcd_write
  1497 ;; This function is called by:
  1498 ;;		_lcdCountdown
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           psect	text418
  1502                           	file	"lcd.c"
  1503                           	line	73
  1504                           	global	__size_of_lcd_putch
  1505  000B                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  1506                           	
  1507  03B1                     _lcd_putch:	
  1508                           	opt	stack 4
  1509                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1510                           ;lcd_putch@c stored from wreg
  1511  03B1  00F2               	movwf	(lcd_putch@c)
  1512                           	line	74
  1513                           	
  1514  03B2                     l6395:	
  1515                           ;lcd.c: 74: RA3 = 1;
  1516  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1517  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1518  03B4  1585               	bsf	(43/8),(43)&7
  1519                           	line	75
  1520                           	
  1521  03B5                     l6397:	
  1522                           ;lcd.c: 75: lcd_write( c );
  1523  03B5  0872               	movf	(lcd_putch@c),w
  1524  03B6  120A  118A  23F6   	fcall	_lcd_write
              120A  118A         
  1525                           	line	76
  1526                           	
  1527  03BB                     l3074:	
  1528  03BB  0008               	return
  1529                           	opt stack 0
  1530                           GLOBAL	__end_of_lcd_putch
  1531  03BC                     	__end_of_lcd_putch:
  1532 ;; =============== function _lcd_putch ends ============
  1533                           
  1534                           	signat	_lcd_putch,4216
  1535                           	global	_lcd_puts
  1536                           psect	text419,local,class=CODE,delta=2
  1537                           global __ptext419
  1538  0432                     __ptext419:
  1539                           
  1540 ;; *************** function _lcd_puts *****************
  1541 ;; Defined at:
  1542 ;;		line 63 in file "lcd.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  s               1    wreg     PTR const unsigned char 
  1545 ;;		 -> STR_1(7), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  s               1    3[COMMON] PTR const unsigned char 
  1548 ;;		 -> STR_1(7), 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;		None               void
  1551 ;; Registers used:
  1552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         0       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0
  1560 ;;      Temps:          1       0       0       0       0
  1561 ;;      Totals:         2       0       0       0       0
  1562 ;;Total ram usage:        2 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    1
  1565 ;; This function calls:
  1566 ;;		_lcd_write
  1567 ;; This function is called by:
  1568 ;;		_doDelay
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           psect	text419
  1572                           	file	"lcd.c"
  1573                           	line	63
  1574                           	global	__size_of_lcd_puts
  1575  0024                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1576                           	
  1577  0432                     _lcd_puts:	
  1578                           	opt	stack 5
  1579                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1580                           ;lcd_puts@s stored from wreg
  1581  0432  00F3               	movwf	(lcd_puts@s)
  1582                           	line	64
  1583                           	
  1584  0433                     l6387:	
  1585                           ;lcd.c: 64: RA3 = 1;
  1586  0433  1283               	bcf	status, 5	;RP0=0, select bank0
  1587  0434  1303               	bcf	status, 6	;RP1=0, select bank0
  1588  0435  1585               	bsf	(43/8),(43)&7
  1589                           	line	65
  1590                           ;lcd.c: 65: while(*s)
  1591  0436  2C48               	goto	l6393
  1592                           	
  1593  0437                     l3069:	
  1594                           	line	66
  1595                           	
  1596  0437                     l6389:	
  1597                           ;lcd.c: 66: lcd_write(*s++);
  1598  0437  0873               	movf	(lcd_puts@s),w
  1599  0438  0084               	movwf	fsr0
  1600  0439  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1601  043E  120A  118A  23F6   	fcall	_lcd_write
              120A  118A         
  1602                           	
  1603  0443                     l6391:	
  1604  0443  3001               	movlw	(01h)
  1605  0444  00F2               	movwf	(??_lcd_puts+0)+0
  1606  0445  0872               	movf	(??_lcd_puts+0)+0,w
  1607  0446  07F3               	addwf	(lcd_puts@s),f
  1608  0447  2C48               	goto	l6393
  1609                           	
  1610  0448                     l3068:	
  1611                           	line	65
  1612                           	
  1613  0448                     l6393:	
  1614  0448  0873               	movf	(lcd_puts@s),w
  1615  0449  0084               	movwf	fsr0
  1616  044A  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1617  044F  3800               	iorlw	0
  1618  0450  1D03               	skipz
  1619  0451  2C53               	goto	u3241
  1620  0452  2C54               	goto	u3240
  1621  0453                     u3241:
  1622  0453  2C37               	goto	l6389
  1623  0454                     u3240:
  1624  0454  2C55               	goto	l3071
  1625                           	
  1626  0455                     l3070:	
  1627                           	line	67
  1628                           	
  1629  0455                     l3071:	
  1630  0455  0008               	return
  1631                           	opt stack 0
  1632                           GLOBAL	__end_of_lcd_puts
  1633  0456                     	__end_of_lcd_puts:
  1634 ;; =============== function _lcd_puts ends ============
  1635                           
  1636                           	signat	_lcd_puts,4216
  1637                           	global	_lcd_goto
  1638                           psect	text420,local,class=CODE,delta=2
  1639                           global __ptext420
  1640  03BC                     __ptext420:
  1641                           
  1642 ;; *************** function _lcd_goto *****************
  1643 ;; Defined at:
  1644 ;;		line 85 in file "lcd.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  pos             1    wreg     unsigned char 
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;  pos             1    2[COMMON] unsigned char 
  1649 ;; Return value:  Size  Location     Type
  1650 ;;		None               void
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0, pclath, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1658 ;;      Params:         0       0       0       0       0
  1659 ;;      Locals:         1       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0
  1661 ;;      Totals:         1       0       0       0       0
  1662 ;;Total ram usage:        1 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    1
  1665 ;; This function calls:
  1666 ;;		_lcd_write
  1667 ;; This function is called by:
  1668 ;;		_doDelay
  1669 ;;		_lcdCountdown
  1670 ;; This function uses a non-reentrant model
  1671 ;;
  1672                           psect	text420
  1673                           	file	"lcd.c"
  1674                           	line	85
  1675                           	global	__size_of_lcd_goto
  1676  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1677                           	
  1678  03BC                     _lcd_goto:	
  1679                           	opt	stack 5
  1680                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1681                           ;lcd_goto@pos stored from wreg
  1682  03BC  00F2               	movwf	(lcd_goto@pos)
  1683                           	line	86
  1684                           	
  1685  03BD                     l6383:	
  1686                           ;lcd.c: 86: RA3 = 0;
  1687  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1688  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1689  03BF  1185               	bcf	(43/8),(43)&7
  1690                           	line	87
  1691                           	
  1692  03C0                     l6385:	
  1693                           ;lcd.c: 87: lcd_write(0x80+pos);
  1694  03C0  0872               	movf	(lcd_goto@pos),w
  1695  03C1  3E80               	addlw	080h
  1696  03C2  120A  118A  23F6   	fcall	_lcd_write
              120A  118A         
  1697                           	line	88
  1698                           	
  1699  03C7                     l3077:	
  1700  03C7  0008               	return
  1701                           	opt stack 0
  1702                           GLOBAL	__end_of_lcd_goto
  1703  03C8                     	__end_of_lcd_goto:
  1704 ;; =============== function _lcd_goto ends ============
  1705                           
  1706                           	signat	_lcd_goto,4216
  1707                           	global	___awtoft
  1708                           psect	text421,local,class=CODE,delta=2
  1709                           global __ptext421
  1710  047C                     __ptext421:
  1711                           
  1712 ;; *************** function ___awtoft *****************
  1713 ;; Defined at:
  1714 ;;		line 33 in file "/usr/hitech/picc/9.82/sources/awtoft.c"
  1715 ;; Parameters:    Size  Location     Type
  1716 ;;  c               2    6[BANK0 ] int 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  sign            1   11[BANK0 ] unsigned char 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  3    6[BANK0 ] float 
  1721 ;; Registers used:
  1722 ;;		wreg, status,2, status,0, pclath, cstack
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       3       0       0       0
  1729 ;;      Locals:         0       1       0       0       0
  1730 ;;      Temps:          0       2       0       0       0
  1731 ;;      Totals:         0       6       0       0       0
  1732 ;;Total ram usage:        6 bytes
  1733 ;; Hardware stack levels used:    1
  1734 ;; Hardware stack levels required when called:    1
  1735 ;; This function calls:
  1736 ;;		___ftpack
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           psect	text421
  1742                           	file	"/usr/hitech/picc/9.82/sources/awtoft.c"
  1743                           	line	33
  1744                           	global	__size_of___awtoft
  1745  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  1746                           	
  1747  047C                     ___awtoft:	
  1748                           	opt	stack 6
  1749                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1750                           	line	36
  1751                           	
  1752  047C                     l6375:	
  1753  047C  1283               	bcf	status, 5	;RP0=0, select bank0
  1754  047D  1303               	bcf	status, 6	;RP1=0, select bank0
  1755  047E  01AB               	clrf	(___awtoft@sign)
  1756                           	line	37
  1757  047F  1FA7               	btfss	(___awtoft@c+1),7
  1758  0480  2C82               	goto	u3231
  1759  0481  2C83               	goto	u3230
  1760  0482                     u3231:
  1761  0482  2C8C               	goto	l6379
  1762  0483                     u3230:
  1763                           	line	38
  1764                           	
  1765  0483                     l6377:	
  1766  0483  09A6               	comf	(___awtoft@c),f
  1767  0484  09A7               	comf	(___awtoft@c+1),f
  1768  0485  0AA6               	incf	(___awtoft@c),f
  1769  0486  1903               	skipnz
  1770  0487  0AA7               	incf	(___awtoft@c+1),f
  1771                           	line	39
  1772  0488  01AB               	clrf	(___awtoft@sign)
  1773  0489  1403               	bsf	status,0
  1774  048A  0DAB               	rlf	(___awtoft@sign),f
  1775  048B  2C8C               	goto	l6379
  1776                           	line	40
  1777                           	
  1778  048C                     l4653:	
  1779                           	line	41
  1780                           	
  1781  048C                     l6379:	
  1782  048C  0826               	movf	(___awtoft@c),w
  1783  048D  00F0               	movwf	(?___ftpack)
  1784  048E  0827               	movf	(___awtoft@c+1),w
  1785  048F  00F1               	movwf	(?___ftpack+1)
  1786  0490  01F2               	clrf	(?___ftpack+2)
  1787  0491  308E               	movlw	(08Eh)
  1788  0492  00A9               	movwf	(??___awtoft+0)+0
  1789  0493  0829               	movf	(??___awtoft+0)+0,w
  1790  0494  00F3               	movwf	0+(?___ftpack)+03h
  1791  0495  082B               	movf	(___awtoft@sign),w
  1792  0496  00AA               	movwf	(??___awtoft+1)+0
  1793  0497  082A               	movf	(??___awtoft+1)+0,w
  1794  0498  00F4               	movwf	0+(?___ftpack)+04h
  1795  0499  120A  118A  25FE   	fcall	___ftpack
              120A  118A         
  1796  049E  0870               	movf	(0+(?___ftpack)),w
  1797  049F  1283               	bcf	status, 5	;RP0=0, select bank0
  1798  04A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1799  04A1  00A6               	movwf	(?___awtoft)
  1800  04A2  0871               	movf	(1+(?___ftpack)),w
  1801  04A3  00A7               	movwf	(?___awtoft+1)
  1802  04A4  0872               	movf	(2+(?___ftpack)),w
  1803  04A5  00A8               	movwf	(?___awtoft+2)
  1804  04A6  2CA7               	goto	l4654
  1805                           	
  1806  04A7                     l6381:	
  1807                           	line	42
  1808                           	
  1809  04A7                     l4654:	
  1810  04A7  0008               	return
  1811                           	opt stack 0
  1812                           GLOBAL	__end_of___awtoft
  1813  04A8                     	__end_of___awtoft:
  1814 ;; =============== function ___awtoft ends ============
  1815                           
  1816                           	signat	___awtoft,4219
  1817                           	global	_lcd_write
  1818                           psect	text422,local,class=CODE,delta=2
  1819                           global __ptext422
  1820  03F6                     __ptext422:
  1821                           
  1822 ;; *************** function _lcd_write *****************
  1823 ;; Defined at:
  1824 ;;		line 39 in file "lcd.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  c               1    wreg     unsigned char 
  1827 ;; Auto vars:     Size  Location     Type
  1828 ;;  c               1    1[COMMON] unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;		None               void
  1831 ;; Registers used:
  1832 ;;		wreg, status,2, status,0
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       0       0       0       0
  1839 ;;      Locals:         1       0       0       0       0
  1840 ;;      Temps:          1       0       0       0       0
  1841 ;;      Totals:         2       0       0       0       0
  1842 ;;Total ram usage:        2 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_lcd_clear
  1848 ;;		_lcd_puts
  1849 ;;		_lcd_putch
  1850 ;;		_lcd_goto
  1851 ;;		_lcd_init
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           psect	text422
  1855                           	file	"lcd.c"
  1856                           	line	39
  1857                           	global	__size_of_lcd_write
  1858  001A                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  1859                           	
  1860  03F6                     _lcd_write:	
  1861                           	opt	stack 5
  1862                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  1863                           ;lcd_write@c stored from wreg
  1864  03F6  00F1               	movwf	(lcd_write@c)
  1865                           	line	40
  1866                           	
  1867  03F7                     l6361:	
  1868                           ;lcd.c: 40: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1869                           	opt asmopt_off
  1870  03F7  300D               movlw	13
  1871  03F8  00F0               movwf	(??_lcd_write+0)+0,f
  1872  03F9                     u3327:
  1873  03F9  0BF0               decfsz	(??_lcd_write+0)+0,f
  1874  03FA  2BF9               	goto	u3327
  1875                           opt asmopt_on
  1876                           
  1877                           	line	41
  1878                           	
  1879  03FB                     l6363:	
  1880                           ;lcd.c: 41: PORTD = ( ( c >> 4 ) & 0x0F );
  1881  03FB  0871               	movf	(lcd_write@c),w
  1882  03FC  00F0               	movwf	(??_lcd_write+0)+0
  1883  03FD  3004               	movlw	04h
  1884  03FE                     u3225:
  1885  03FE  1003               	clrc
  1886  03FF  0CF0               	rrf	(??_lcd_write+0)+0,f
  1887  0400  3EFF               	addlw	-1
  1888  0401  1D03               	skipz
  1889  0402  2BFE               	goto	u3225
  1890  0403  0870               	movf	0+(??_lcd_write+0)+0,w
  1891  0404  390F               	andlw	0Fh
  1892  0405  1283               	bcf	status, 5	;RP0=0, select bank0
  1893  0406  1303               	bcf	status, 6	;RP1=0, select bank0
  1894  0407  0088               	movwf	(8)	;volatile
  1895                           	line	42
  1896                           	
  1897  0408                     l6365:	
  1898                           ;lcd.c: 42: ((RA1 = 1),(RA1=0));
  1899  0408  1485               	bsf	(41/8),(41)&7
  1900                           	
  1901  0409                     l6367:	
  1902  0409  1085               	bcf	(41/8),(41)&7
  1903                           	line	43
  1904                           	
  1905  040A                     l6369:	
  1906                           ;lcd.c: 43: PORTD = ( c & 0x0F );
  1907  040A  0871               	movf	(lcd_write@c),w
  1908  040B  390F               	andlw	0Fh
  1909  040C  0088               	movwf	(8)	;volatile
  1910                           	line	44
  1911                           	
  1912  040D                     l6371:	
  1913                           ;lcd.c: 44: ((RA1 = 1),(RA1=0));
  1914  040D  1485               	bsf	(41/8),(41)&7
  1915                           	
  1916  040E                     l6373:	
  1917  040E  1085               	bcf	(41/8),(41)&7
  1918                           	line	45
  1919                           	
  1920  040F                     l3062:	
  1921  040F  0008               	return
  1922                           	opt stack 0
  1923                           GLOBAL	__end_of_lcd_write
  1924  0410                     	__end_of_lcd_write:
  1925 ;; =============== function _lcd_write ends ============
  1926                           
  1927                           	signat	_lcd_write,4216
  1928                           	global	_searchTrack
  1929                           psect	text423,local,class=CODE,delta=2
  1930                           global __ptext423
  1931  04D5                     __ptext423:
  1932                           
  1933 ;; *************** function _searchTrack *****************
  1934 ;; Defined at:
  1935 ;;		line 109 in file "newmain.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;		None
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;		None
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  2  1529[COMMON] int 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, pclath, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         0       0       0       0       0
  1950 ;;      Locals:         0       0       0       0       0
  1951 ;;      Temps:          0       0       0       0       0
  1952 ;;      Totals:         0       0       0       0       0
  1953 ;;Total ram usage:        0 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    1
  1956 ;; This function calls:
  1957 ;;		_controlMotor
  1958 ;; This function is called by:
  1959 ;;		_main
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           psect	text423
  1963                           	file	"newmain.c"
  1964                           	line	109
  1965                           	global	__size_of_searchTrack
  1966  0030                     	__size_of_searchTrack	equ	__end_of_searchTrack-_searchTrack
  1967                           	
  1968  04D5                     _searchTrack:	
  1969                           	opt	stack 6
  1970                           ; Regs used in _searchTrack: [wreg+status,2+status,0+pclath+cstack]
  1971                           	line	110
  1972                           	
  1973  04D5                     l6353:	
  1974                           ;newmain.c: 110: if (lastMotor == 1)
  1975  04D5  3001               	movlw	01h
  1976  04D6  1283               	bcf	status, 5	;RP0=0, select bank0
  1977  04D7  1303               	bcf	status, 6	;RP1=0, select bank0
  1978  04D8  0642               	xorwf	(_lastMotor),w
  1979  04D9  0443               	iorwf	(_lastMotor+1),w
  1980  04DA  1D03               	skipz
  1981  04DB  2CDD               	goto	u3201
  1982  04DC  2CDE               	goto	u3200
  1983  04DD                     u3201:
  1984  04DD  2CEC               	goto	l6357
  1985  04DE                     u3200:
  1986                           	line	112
  1987                           	
  1988  04DE                     l6355:	
  1989                           ;newmain.c: 111: {
  1990                           ;newmain.c: 112: controlMotor(1, 0);
  1991  04DE  3001               	movlw	low(01h)
  1992  04DF  00F0               	movwf	(?_controlMotor)
  1993  04E0  3000               	movlw	high(01h)
  1994  04E1  00F1               	movwf	((?_controlMotor))+1
  1995  04E2  3000               	movlw	low(0)
  1996  04E3  00F2               	movwf	0+(?_controlMotor)+02h
  1997  04E4  3000               	movlw	high(0)
  1998  04E5  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  1999  04E6  120A  118A  2410   	fcall	_controlMotor
              120A  118A         
  2000                           	line	113
  2001                           ;newmain.c: 113: }
  2002  04EB  2D04               	goto	l1533
  2003                           	line	114
  2004                           	
  2005  04EC                     l1530:	
  2006                           	
  2007  04EC                     l6357:	
  2008                           ;newmain.c: 114: else if (lastMotor == 2)
  2009  04EC  3002               	movlw	02h
  2010  04ED  1283               	bcf	status, 5	;RP0=0, select bank0
  2011  04EE  1303               	bcf	status, 6	;RP1=0, select bank0
  2012  04EF  0642               	xorwf	(_lastMotor),w
  2013  04F0  0443               	iorwf	(_lastMotor+1),w
  2014  04F1  1D03               	skipz
  2015  04F2  2CF4               	goto	u3211
  2016  04F3  2CF5               	goto	u3210
  2017  04F4                     u3211:
  2018  04F4  2D04               	goto	l1533
  2019  04F5                     u3210:
  2020                           	line	116
  2021                           	
  2022  04F5                     l6359:	
  2023                           ;newmain.c: 115: {
  2024                           ;newmain.c: 116: controlMotor(0, 1);
  2025  04F5  3000               	movlw	low(0)
  2026  04F6  00F0               	movwf	(?_controlMotor)
  2027  04F7  3000               	movlw	high(0)
  2028  04F8  00F1               	movwf	((?_controlMotor))+1
  2029  04F9  3001               	movlw	low(01h)
  2030  04FA  00F2               	movwf	0+(?_controlMotor)+02h
  2031  04FB  3000               	movlw	high(01h)
  2032  04FC  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  2033  04FD  120A  118A  2410   	fcall	_controlMotor
              120A  118A         
  2034  0502  2D04               	goto	l1533
  2035                           	line	117
  2036                           	
  2037  0503                     l1532:	
  2038  0503  2D04               	goto	l1533
  2039                           	line	118
  2040                           	
  2041  0504                     l1531:	
  2042                           	
  2043  0504                     l1533:	
  2044  0504  0008               	return
  2045                           	opt stack 0
  2046                           GLOBAL	__end_of_searchTrack
  2047  0505                     	__end_of_searchTrack:
  2048 ;; =============== function _searchTrack ends ============
  2049                           
  2050                           	signat	_searchTrack,90
  2051                           	global	___ftge
  2052                           psect	text424,local,class=CODE,delta=2
  2053                           global __ptext424
  2054  058E                     __ptext424:
  2055                           
  2056 ;; *************** function ___ftge *****************
  2057 ;; Defined at:
  2058 ;;		line 5 in file "/usr/hitech/picc/9.82/sources/ftge.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  ff1             3    8[COMMON] float 
  2061 ;;  ff2             3   11[COMMON] float 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;		None               void
  2066 ;; Registers used:
  2067 ;;		wreg, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         6       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0
  2075 ;;      Temps:          0       6       0       0       0
  2076 ;;      Totals:         6       6       0       0       0
  2077 ;;Total ram usage:       12 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           psect	text424
  2086                           	file	"/usr/hitech/picc/9.82/sources/ftge.c"
  2087                           	line	5
  2088                           	global	__size_of___ftge
  2089  0070                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  2090                           	
  2091  058E                     ___ftge:	
  2092                           	opt	stack 7
  2093                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2094                           	line	6
  2095                           	
  2096  058E                     l6287:	
  2097  058E  1FFA               	btfss	(___ftge@ff1+2),(23)&7
  2098  058F  2D91               	goto	u3091
  2099  0590  2D92               	goto	u3090
  2100  0591                     u3091:
  2101  0591  2DBA               	goto	l6291
  2102  0592                     u3090:
  2103                           	line	7
  2104                           	
  2105  0592                     l6289:	
  2106  0592  3000               	movlw	0
  2107  0593  1283               	bcf	status, 5	;RP0=0, select bank0
  2108  0594  1303               	bcf	status, 6	;RP1=0, select bank0
  2109  0595  00A0               	movwf	((??___ftge+0)+0)
  2110  0596  3000               	movlw	0
  2111  0597  00A1               	movwf	((??___ftge+0)+0+1)
  2112  0598  3080               	movlw	080h
  2113  0599  00A2               	movwf	((??___ftge+0)+0+2)
  2114  059A  0978               	comf	(___ftge@ff1),w
  2115  059B  00A3               	movwf	(??___ftge+3)+0
  2116  059C  0979               	comf	(___ftge@ff1+1),w
  2117  059D  00A4               	movwf	((??___ftge+3)+0+1)
  2118  059E  097A               	comf	(___ftge@ff1+2),w
  2119  059F  00A5               	movwf	((??___ftge+3)+0+2)
  2120  05A0  0AA3               	incf	(??___ftge+3)+0,f
  2121  05A1  1903               	skipnz
  2122  05A2  0AA4               	incf	((??___ftge+3)+0+1),f
  2123  05A3  1903               	skipnz
  2124  05A4  0AA5               	incf	((??___ftge+3)+0+2),f
  2125  05A5  0823               	movf	0+(??___ftge+3)+0,w
  2126  05A6  07A0               	addwf	(??___ftge+0)+0,f
  2127  05A7  0824               	movf	1+(??___ftge+3)+0,w
  2128  05A8  1803               	skipnc
  2129  05A9  0F24               	incfsz	1+(??___ftge+3)+0,w
  2130  05AA  2DAC               	goto	u3101
  2131  05AB  2DAD               	goto	u3102
  2132  05AC                     u3101:
  2133  05AC  07A1               	addwf	(??___ftge+0)+1,f
  2134                           	
  2135  05AD                     u3102:
  2136  05AD  0825               	movf	2+(??___ftge+3)+0,w
  2137  05AE  1803               	skipnc
  2138  05AF  0F25               	incfsz	2+(??___ftge+3)+0,w
  2139  05B0  2DB2               	goto	u3103
  2140  05B1  2DB3               	goto	u3104
  2141  05B2                     u3103:
  2142  05B2  07A2               	addwf	(??___ftge+0)+2,f
  2143                           	
  2144  05B3                     u3104:
  2145  05B3  0820               	movf	0+(??___ftge+0)+0,w
  2146  05B4  00F8               	movwf	(___ftge@ff1)
  2147  05B5  0821               	movf	1+(??___ftge+0)+0,w
  2148  05B6  00F9               	movwf	(___ftge@ff1+1)
  2149  05B7  0822               	movf	2+(??___ftge+0)+0,w
  2150  05B8  00FA               	movwf	(___ftge@ff1+2)
  2151  05B9  2DBA               	goto	l6291
  2152                           	
  2153  05BA                     l4684:	
  2154                           	line	8
  2155                           	
  2156  05BA                     l6291:	
  2157  05BA  1FFD               	btfss	(___ftge@ff2+2),(23)&7
  2158  05BB  2DBD               	goto	u3111
  2159  05BC  2DBE               	goto	u3110
  2160  05BD                     u3111:
  2161  05BD  2DE6               	goto	l6295
  2162  05BE                     u3110:
  2163                           	line	9
  2164                           	
  2165  05BE                     l6293:	
  2166  05BE  3000               	movlw	0
  2167  05BF  1283               	bcf	status, 5	;RP0=0, select bank0
  2168  05C0  1303               	bcf	status, 6	;RP1=0, select bank0
  2169  05C1  00A0               	movwf	((??___ftge+0)+0)
  2170  05C2  3000               	movlw	0
  2171  05C3  00A1               	movwf	((??___ftge+0)+0+1)
  2172  05C4  3080               	movlw	080h
  2173  05C5  00A2               	movwf	((??___ftge+0)+0+2)
  2174  05C6  097B               	comf	(___ftge@ff2),w
  2175  05C7  00A3               	movwf	(??___ftge+3)+0
  2176  05C8  097C               	comf	(___ftge@ff2+1),w
  2177  05C9  00A4               	movwf	((??___ftge+3)+0+1)
  2178  05CA  097D               	comf	(___ftge@ff2+2),w
  2179  05CB  00A5               	movwf	((??___ftge+3)+0+2)
  2180  05CC  0AA3               	incf	(??___ftge+3)+0,f
  2181  05CD  1903               	skipnz
  2182  05CE  0AA4               	incf	((??___ftge+3)+0+1),f
  2183  05CF  1903               	skipnz
  2184  05D0  0AA5               	incf	((??___ftge+3)+0+2),f
  2185  05D1  0823               	movf	0+(??___ftge+3)+0,w
  2186  05D2  07A0               	addwf	(??___ftge+0)+0,f
  2187  05D3  0824               	movf	1+(??___ftge+3)+0,w
  2188  05D4  1803               	skipnc
  2189  05D5  0F24               	incfsz	1+(??___ftge+3)+0,w
  2190  05D6  2DD8               	goto	u3121
  2191  05D7  2DD9               	goto	u3122
  2192  05D8                     u3121:
  2193  05D8  07A1               	addwf	(??___ftge+0)+1,f
  2194                           	
  2195  05D9                     u3122:
  2196  05D9  0825               	movf	2+(??___ftge+3)+0,w
  2197  05DA  1803               	skipnc
  2198  05DB  0F25               	incfsz	2+(??___ftge+3)+0,w
  2199  05DC  2DDE               	goto	u3123
  2200  05DD  2DDF               	goto	u3124
  2201  05DE                     u3123:
  2202  05DE  07A2               	addwf	(??___ftge+0)+2,f
  2203                           	
  2204  05DF                     u3124:
  2205  05DF  0820               	movf	0+(??___ftge+0)+0,w
  2206  05E0  00FB               	movwf	(___ftge@ff2)
  2207  05E1  0821               	movf	1+(??___ftge+0)+0,w
  2208  05E2  00FC               	movwf	(___ftge@ff2+1)
  2209  05E3  0822               	movf	2+(??___ftge+0)+0,w
  2210  05E4  00FD               	movwf	(___ftge@ff2+2)
  2211  05E5  2DE6               	goto	l6295
  2212                           	
  2213  05E6                     l4685:	
  2214                           	line	10
  2215                           	
  2216  05E6                     l6295:	
  2217  05E6  3080               	movlw	080h
  2218  05E7  06FA               	xorwf	(___ftge@ff1+2),f
  2219                           	line	11
  2220                           	
  2221  05E8                     l6297:	
  2222  05E8  3080               	movlw	080h
  2223  05E9  06FD               	xorwf	(___ftge@ff2+2),f
  2224                           	line	12
  2225                           	
  2226  05EA                     l6299:	
  2227  05EA  087D               	movf	(___ftge@ff2+2),w
  2228  05EB  027A               	subwf	(___ftge@ff1+2),w
  2229  05EC  1D03               	skipz
  2230  05ED  2DF4               	goto	u3135
  2231  05EE  087C               	movf	(___ftge@ff2+1),w
  2232  05EF  0279               	subwf	(___ftge@ff1+1),w
  2233  05F0  1D03               	skipz
  2234  05F1  2DF4               	goto	u3135
  2235  05F2  087B               	movf	(___ftge@ff2),w
  2236  05F3  0278               	subwf	(___ftge@ff1),w
  2237  05F4                     u3135:
  2238  05F4  1803               	skipnc
  2239  05F5  2DF7               	goto	u3131
  2240  05F6  2DF8               	goto	u3130
  2241  05F7                     u3131:
  2242  05F7  2DFA               	goto	l6303
  2243  05F8                     u3130:
  2244                           	
  2245  05F8                     l6301:	
  2246  05F8  1003               	clrc
  2247                           	
  2248  05F9  2DFD               	goto	l4686
  2249                           	
  2250  05FA                     l6015:	
  2251                           	
  2252  05FA                     l6303:	
  2253  05FA  1403               	setc
  2254                           	
  2255  05FB  2DFD               	goto	l4686
  2256                           	
  2257  05FC                     l6017:	
  2258  05FC  2DFD               	goto	l4686
  2259                           	
  2260  05FD                     l6305:	
  2261                           	line	13
  2262                           	
  2263  05FD                     l4686:	
  2264  05FD  0008               	return
  2265                           	opt stack 0
  2266                           GLOBAL	__end_of___ftge
  2267  05FE                     	__end_of___ftge:
  2268 ;; =============== function ___ftge ends ============
  2269                           
  2270                           	signat	___ftge,8312
  2271                           	global	___ftpack
  2272                           psect	text425,local,class=CODE,delta=2
  2273                           global __ptext425
  2274  05FE                     __ptext425:
  2275                           
  2276 ;; *************** function ___ftpack *****************
  2277 ;; Defined at:
  2278 ;;		line 63 in file "/usr/hitech/picc/9.82/sources/float.c"
  2279 ;; Parameters:    Size  Location     Type
  2280 ;;  arg             3    0[COMMON] unsigned um
  2281 ;;  exp             1    3[COMMON] unsigned char 
  2282 ;;  sign            1    4[COMMON] unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  3    0[COMMON] float 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         5       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0
  2296 ;;      Temps:          3       0       0       0       0
  2297 ;;      Totals:         8       0       0       0       0
  2298 ;;Total ram usage:        8 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; This function calls:
  2301 ;;		Nothing
  2302 ;; This function is called by:
  2303 ;;		___awtoft
  2304 ;;		___ftadd
  2305 ;;		___ftdiv
  2306 ;;		___ftmul
  2307 ;;		___lbtoft
  2308 ;;		___abtoft
  2309 ;;		___lwtoft
  2310 ;;		___altoft
  2311 ;;		___lltoft
  2312 ;;		___attoft
  2313 ;;		___lttoft
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           psect	text425
  2317                           	file	"/usr/hitech/picc/9.82/sources/float.c"
  2318                           	line	63
  2319                           	global	__size_of___ftpack
  2320  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  2321                           	
  2322  05FE                     ___ftpack:	
  2323                           	opt	stack 6
  2324                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2325                           	line	64
  2326                           	
  2327  05FE                     l6155:	
  2328  05FE  0873               	movf	(___ftpack@exp),w
  2329  05FF  1D03               	skipz
  2330  0600  2E02               	goto	u2750
  2331  0601  2E0A               	goto	l6159
  2332  0602                     u2750:
  2333                           	
  2334  0602                     l6157:	
  2335  0602  0872               	movf	(___ftpack@arg+2),w
  2336  0603  0471               	iorwf	(___ftpack@arg+1),w
  2337  0604  0470               	iorwf	(___ftpack@arg),w
  2338  0605  1D03               	skipz
  2339  0606  2E08               	goto	u2761
  2340  0607  2E09               	goto	u2760
  2341  0608                     u2761:
  2342  0608  2E20               	goto	l6165
  2343  0609                     u2760:
  2344  0609  2E0A               	goto	l6159
  2345                           	
  2346  060A                     l4851:	
  2347                           	line	65
  2348                           	
  2349  060A                     l6159:	
  2350  060A  3000               	movlw	0x0
  2351  060B  00F0               	movwf	(?___ftpack)
  2352  060C  3000               	movlw	0x0
  2353  060D  00F1               	movwf	(?___ftpack+1)
  2354  060E  3000               	movlw	0x0
  2355  060F  00F2               	movwf	(?___ftpack+2)
  2356  0610  2E78               	goto	l4852
  2357                           	
  2358  0611                     l6161:	
  2359  0611  2E78               	goto	l4852
  2360                           	
  2361  0612                     l4849:	
  2362                           	line	66
  2363  0612  2E20               	goto	l6165
  2364                           	
  2365  0613                     l4854:	
  2366                           	line	67
  2367                           	
  2368  0613                     l6163:	
  2369  0613  3001               	movlw	(01h)
  2370  0614  00F5               	movwf	(??___ftpack+0)+0
  2371  0615  0875               	movf	(??___ftpack+0)+0,w
  2372  0616  07F3               	addwf	(___ftpack@exp),f
  2373                           	line	68
  2374  0617  3001               	movlw	01h
  2375  0618                     u2775:
  2376  0618  1003               	clrc
  2377  0619  0CF2               	rrf	(___ftpack@arg+2),f
  2378  061A  0CF1               	rrf	(___ftpack@arg+1),f
  2379  061B  0CF0               	rrf	(___ftpack@arg),f
  2380  061C  3EFF               	addlw	-1
  2381  061D  1D03               	skipz
  2382  061E  2E18               	goto	u2775
  2383                           
  2384  061F  2E20               	goto	l6165
  2385                           	line	69
  2386                           	
  2387  0620                     l4853:	
  2388                           	line	66
  2389                           	
  2390  0620                     l6165:	
  2391  0620  30FE               	movlw	low highword(0FE0000h)
  2392  0621  0572               	andwf	(___ftpack@arg+2),w
  2393  0622  1D03               	btfss	status,2
  2394  0623  2E25               	goto	u2781
  2395  0624  2E26               	goto	u2780
  2396  0625                     u2781:
  2397  0625  2E13               	goto	l6163
  2398  0626                     u2780:
  2399  0626  2E3E               	goto	l4856
  2400                           	
  2401  0627                     l4855:	
  2402                           	line	70
  2403  0627  2E3E               	goto	l4856
  2404                           	
  2405  0628                     l4857:	
  2406                           	line	71
  2407                           	
  2408  0628                     l6167:	
  2409  0628  3001               	movlw	(01h)
  2410  0629  00F5               	movwf	(??___ftpack+0)+0
  2411  062A  0875               	movf	(??___ftpack+0)+0,w
  2412  062B  07F3               	addwf	(___ftpack@exp),f
  2413                           	line	72
  2414                           	
  2415  062C                     l6169:	
  2416  062C  3001               	movlw	01h
  2417  062D  07F0               	addwf	(___ftpack@arg),f
  2418  062E  3000               	movlw	0
  2419  062F  1803               	skipnc
  2420  0630  3001               movlw 1
  2421  0631  07F1               	addwf	(___ftpack@arg+1),f
  2422  0632  3000               	movlw	0
  2423  0633  1803               	skipnc
  2424  0634  3001               movlw 1
  2425  0635  07F2               	addwf	(___ftpack@arg+2),f
  2426                           	line	73
  2427                           	
  2428  0636                     l6171:	
  2429  0636  3001               	movlw	01h
  2430  0637                     u2795:
  2431  0637  1003               	clrc
  2432  0638  0CF2               	rrf	(___ftpack@arg+2),f
  2433  0639  0CF1               	rrf	(___ftpack@arg+1),f
  2434  063A  0CF0               	rrf	(___ftpack@arg),f
  2435  063B  3EFF               	addlw	-1
  2436  063C  1D03               	skipz
  2437  063D  2E37               	goto	u2795
  2438                           
  2439                           	line	74
  2440                           	
  2441  063E                     l4856:	
  2442                           	line	70
  2443  063E  30FF               	movlw	low highword(0FF0000h)
  2444  063F  0572               	andwf	(___ftpack@arg+2),w
  2445  0640  1D03               	btfss	status,2
  2446  0641  2E43               	goto	u2801
  2447  0642  2E44               	goto	u2800
  2448  0643                     u2801:
  2449  0643  2E28               	goto	l6167
  2450  0644                     u2800:
  2451  0644  2E51               	goto	l6175
  2452                           	
  2453  0645                     l4858:	
  2454                           	line	75
  2455  0645  2E51               	goto	l6175
  2456                           	
  2457  0646                     l4860:	
  2458                           	line	76
  2459                           	
  2460  0646                     l6173:	
  2461  0646  3001               	movlw	low(01h)
  2462  0647  02F3               	subwf	(___ftpack@exp),f
  2463                           	line	77
  2464  0648  3001               	movlw	01h
  2465  0649                     u2815:
  2466  0649  1003               	clrc
  2467  064A  0DF0               	rlf	(___ftpack@arg),f
  2468  064B  0DF1               	rlf	(___ftpack@arg+1),f
  2469  064C  0DF2               	rlf	(___ftpack@arg+2),f
  2470  064D  3EFF               	addlw	-1
  2471  064E  1D03               	skipz
  2472  064F  2E49               	goto	u2815
  2473  0650  2E51               	goto	l6175
  2474                           	line	78
  2475                           	
  2476  0651                     l4859:	
  2477                           	line	75
  2478                           	
  2479  0651                     l6175:	
  2480  0651  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  2481  0652  2E54               	goto	u2821
  2482  0653  2E55               	goto	u2820
  2483  0654                     u2821:
  2484  0654  2E46               	goto	l6173
  2485  0655                     u2820:
  2486                           	
  2487  0655                     l4861:	
  2488                           	line	79
  2489  0655  1873               	btfsc	(___ftpack@exp),(0)&7
  2490  0656  2E58               	goto	u2831
  2491  0657  2E59               	goto	u2830
  2492  0658                     u2831:
  2493  0658  2E5F               	goto	l4862
  2494  0659                     u2830:
  2495                           	line	80
  2496                           	
  2497  0659                     l6177:	
  2498  0659  30FF               	movlw	0FFh
  2499  065A  05F0               	andwf	(___ftpack@arg),f
  2500  065B  307F               	movlw	07Fh
  2501  065C  05F1               	andwf	(___ftpack@arg+1),f
  2502  065D  30FF               	movlw	0FFh
  2503  065E  05F2               	andwf	(___ftpack@arg+2),f
  2504                           	
  2505  065F                     l4862:	
  2506                           	line	81
  2507  065F  1003               	clrc
  2508  0660  0CF3               	rrf	(___ftpack@exp),f
  2509                           
  2510                           	line	82
  2511                           	
  2512  0661                     l6179:	
  2513  0661  0873               	movf	(___ftpack@exp),w
  2514  0662  00F5               	movwf	((??___ftpack+0)+0)
  2515  0663  01F6               	clrf	((??___ftpack+0)+0+1)
  2516  0664  01F7               	clrf	((??___ftpack+0)+0+2)
  2517  0665  3010               	movlw	010h
  2518  0666                     u2845:
  2519  0666  1003               	clrc
  2520  0667  0DF5               	rlf	(??___ftpack+0)+0,f
  2521  0668  0DF6               	rlf	(??___ftpack+0)+1,f
  2522  0669  0DF7               	rlf	(??___ftpack+0)+2,f
  2523  066A                     u2840:
  2524  066A  3EFF               	addlw	-1
  2525  066B  1D03               	skipz
  2526  066C  2E66               	goto	u2845
  2527  066D  0875               	movf	0+(??___ftpack+0)+0,w
  2528  066E  04F0               	iorwf	(___ftpack@arg),f
  2529  066F  0876               	movf	1+(??___ftpack+0)+0,w
  2530  0670  04F1               	iorwf	(___ftpack@arg+1),f
  2531  0671  0877               	movf	2+(??___ftpack+0)+0,w
  2532  0672  04F2               	iorwf	(___ftpack@arg+2),f
  2533                           	line	83
  2534                           	
  2535  0673                     l6181:	
  2536  0673  0874               	movf	(___ftpack@sign),w
  2537  0674  1D03               	skipz
  2538  0675  2E77               	goto	u2850
  2539  0676  2E78               	goto	l4863
  2540  0677                     u2850:
  2541                           	line	84
  2542                           	
  2543  0677                     l6183:	
  2544  0677  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  2545                           	
  2546  0678                     l4863:	
  2547                           	line	85
  2548                           	line	86
  2549                           	
  2550  0678                     l4852:	
  2551  0678  0008               	return
  2552                           	opt stack 0
  2553                           GLOBAL	__end_of___ftpack
  2554  0679                     	__end_of___ftpack:
  2555 ;; =============== function ___ftpack ends ============
  2556                           
  2557                           	signat	___ftpack,12411
  2558                           	global	_ADCRead
  2559                           psect	text426,local,class=CODE,delta=2
  2560                           global __ptext426
  2561  04A8                     __ptext426:
  2562                           
  2563 ;; *************** function _ADCRead *****************
  2564 ;; Defined at:
  2565 ;;		line 234 in file "newmain.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  ch              1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  ch              1    6[COMMON] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  2    0[COMMON] unsigned int 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         2       0       0       0       0
  2580 ;;      Locals:         1       0       0       0       0
  2581 ;;      Temps:          4       0       0       0       0
  2582 ;;      Totals:         7       0       0       0       0
  2583 ;;Total ram usage:        7 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_main
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           psect	text426
  2592                           	file	"newmain.c"
  2593                           	line	234
  2594                           	global	__size_of_ADCRead
  2595  002D                     	__size_of_ADCRead	equ	__end_of_ADCRead-_ADCRead
  2596                           	
  2597  04A8                     _ADCRead:	
  2598                           	opt	stack 7
  2599                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  2600                           ;ADCRead@ch stored from wreg
  2601  04A8  00F6               	movwf	(ADCRead@ch)
  2602                           	line	235
  2603                           	
  2604  04A9                     l6073:	
  2605                           ;newmain.c: 235: ADCON0 = 0x00;
  2606  04A9  1283               	bcf	status, 5	;RP0=0, select bank0
  2607  04AA  1303               	bcf	status, 6	;RP1=0, select bank0
  2608  04AB  019F               	clrf	(31)	;volatile
  2609                           	line	236
  2610                           	
  2611  04AC                     l6075:	
  2612                           ;newmain.c: 236: ADCON0 = (ch<<2);
  2613  04AC  0876               	movf	(ADCRead@ch),w
  2614  04AD  00F2               	movwf	(??_ADCRead+0)+0
  2615  04AE  3001               	movlw	(02h)-1
  2616  04AF                     u2495:
  2617  04AF  1003               	clrc
  2618  04B0  0DF2               	rlf	(??_ADCRead+0)+0,f
  2619  04B1  3EFF               	addlw	-1
  2620  04B2  1D03               	skipz
  2621  04B3  2CAF               	goto	u2495
  2622  04B4  1003               	clrc
  2623  04B5  0D72               	rlf	(??_ADCRead+0)+0,w
  2624  04B6  009F               	movwf	(31)	;volatile
  2625                           	line	238
  2626                           	
  2627  04B7                     l6077:	
  2628                           ;newmain.c: 238: ADON=1;
  2629  04B7  141F               	bsf	(248/8),(248)&7
  2630                           	line	240
  2631                           	
  2632  04B8                     l6079:	
  2633                           ;newmain.c: 240: GO_DONE=1;
  2634  04B8  149F               	bsf	(249/8),(249)&7
  2635                           	line	241
  2636                           ;newmain.c: 241: while(GO_DONE);
  2637  04B9  2CBA               	goto	l1558
  2638                           	
  2639  04BA                     l1559:	
  2640                           	
  2641  04BA                     l1558:	
  2642  04BA  189F               	btfsc	(249/8),(249)&7
  2643  04BB  2CBD               	goto	u2501
  2644  04BC  2CBE               	goto	u2500
  2645  04BD                     u2501:
  2646  04BD  2CBA               	goto	l1558
  2647  04BE                     u2500:
  2648                           	
  2649  04BE                     l1560:	
  2650                           	line	243
  2651                           ;newmain.c: 243: ADON=0;
  2652  04BE  101F               	bcf	(248/8),(248)&7
  2653                           	line	245
  2654                           	
  2655  04BF                     l6081:	
  2656                           ;newmain.c: 245: return (ADRESH<8)|ADRESL;
  2657  04BF  1683               	bsf	status, 5	;RP0=1, select bank1
  2658  04C0  1303               	bcf	status, 6	;RP1=0, select bank1
  2659  04C1  081E               	movf	(158)^080h,w	;volatile
  2660  04C2  00F2               	movwf	(??_ADCRead+0)+0
  2661  04C3  01F3               	clrf	(??_ADCRead+0)+0+1
  2662  04C4  3008               	movlw	(08h)
  2663  04C5  1283               	bcf	status, 5	;RP0=0, select bank0
  2664  04C6  1303               	bcf	status, 6	;RP1=0, select bank0
  2665  04C7  021E               	subwf	(30),w	;volatile
  2666  04C8  3000               	movlw	0
  2667  04C9  1C03               	skipc
  2668  04CA  3001               	movlw	1
  2669  04CB  00F4               	movwf	(??_ADCRead+2)+0
  2670  04CC  01F5               	clrf	(??_ADCRead+2)+0+1
  2671  04CD  0872               	movf	0+(??_ADCRead+0)+0,w
  2672  04CE  0474               	iorwf	0+(??_ADCRead+2)+0,w
  2673  04CF  00F0               	movwf	(?_ADCRead)
  2674  04D0  0873               	movf	1+(??_ADCRead+0)+0,w
  2675  04D1  0475               	iorwf	1+(??_ADCRead+2)+0,w
  2676  04D2  00F1               	movwf	1+(?_ADCRead)
  2677  04D3  2CD4               	goto	l1561
  2678                           	
  2679  04D4                     l6083:	
  2680                           	line	247
  2681                           	
  2682  04D4                     l1561:	
  2683  04D4  0008               	return
  2684                           	opt stack 0
  2685                           GLOBAL	__end_of_ADCRead
  2686  04D5                     	__end_of_ADCRead:
  2687 ;; =============== function _ADCRead ends ============
  2688                           
  2689                           	signat	_ADCRead,4218
  2690                           	global	_ADCInit
  2691                           psect	text427,local,class=CODE,delta=2
  2692                           global __ptext427
  2693  0505                     __ptext427:
  2694                           
  2695 ;; *************** function _ADCInit *****************
  2696 ;; Defined at:
  2697 ;;		line 223 in file "newmain.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  ADC_Channel     2    0[COMMON] int 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;		None               void
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         2       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0
  2714 ;;      Totals:         2       0       0       0       0
  2715 ;;Total ram usage:        2 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           psect	text427
  2724                           	file	"newmain.c"
  2725                           	line	223
  2726                           	global	__size_of_ADCInit
  2727  0033                     	__size_of_ADCInit	equ	__end_of_ADCInit-_ADCInit
  2728                           	
  2729  0505                     _ADCInit:	
  2730                           	opt	stack 7
  2731                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  2732                           	line	224
  2733                           	
  2734  0505                     l6055:	
  2735                           ;newmain.c: 224: if (ADC_Channel == 0) TRISD0 = 1;
  2736  0505  0871               	movf	((ADCInit@ADC_Channel+1)),w
  2737  0506  0470               	iorwf	((ADCInit@ADC_Channel)),w
  2738  0507  1D03               	skipz
  2739  0508  2D0A               	goto	u2451
  2740  0509  2D0B               	goto	u2450
  2741  050A                     u2451:
  2742  050A  2D0F               	goto	l6059
  2743  050B                     u2450:
  2744                           	
  2745  050B                     l6057:	
  2746  050B  1683               	bsf	status, 5	;RP0=1, select bank1
  2747  050C  1303               	bcf	status, 6	;RP1=0, select bank1
  2748  050D  1408               	bsf	(1088/8)^080h,(1088)&7
  2749  050E  2D33               	goto	l6071
  2750                           	line	225
  2751                           	
  2752  050F                     l1548:	
  2753                           	
  2754  050F                     l6059:	
  2755                           ;newmain.c: 225: else if (ADC_Channel == 1) TRISD1 = 1;
  2756  050F  3001               	movlw	01h
  2757  0510  0670               	xorwf	(ADCInit@ADC_Channel),w
  2758  0511  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2759  0512  1D03               	skipz
  2760  0513  2D15               	goto	u2461
  2761  0514  2D16               	goto	u2460
  2762  0515                     u2461:
  2763  0515  2D1A               	goto	l6063
  2764  0516                     u2460:
  2765                           	
  2766  0516                     l6061:	
  2767  0516  1683               	bsf	status, 5	;RP0=1, select bank1
  2768  0517  1303               	bcf	status, 6	;RP1=0, select bank1
  2769  0518  1488               	bsf	(1089/8)^080h,(1089)&7
  2770  0519  2D33               	goto	l6071
  2771                           	line	226
  2772                           	
  2773  051A                     l1550:	
  2774                           	
  2775  051A                     l6063:	
  2776                           ;newmain.c: 226: else if (ADC_Channel == 2) TRISD2 = 1;
  2777  051A  3002               	movlw	02h
  2778  051B  0670               	xorwf	(ADCInit@ADC_Channel),w
  2779  051C  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2780  051D  1D03               	skipz
  2781  051E  2D20               	goto	u2471
  2782  051F  2D21               	goto	u2470
  2783  0520                     u2471:
  2784  0520  2D25               	goto	l6067
  2785  0521                     u2470:
  2786                           	
  2787  0521                     l6065:	
  2788  0521  1683               	bsf	status, 5	;RP0=1, select bank1
  2789  0522  1303               	bcf	status, 6	;RP1=0, select bank1
  2790  0523  1508               	bsf	(1090/8)^080h,(1090)&7
  2791  0524  2D33               	goto	l6071
  2792                           	line	227
  2793                           	
  2794  0525                     l1552:	
  2795                           	
  2796  0525                     l6067:	
  2797                           ;newmain.c: 227: else if (ADC_Channel == 3) TRISD3 = 1;
  2798  0525  3003               	movlw	03h
  2799  0526  0670               	xorwf	(ADCInit@ADC_Channel),w
  2800  0527  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2801  0528  1D03               	skipz
  2802  0529  2D2B               	goto	u2481
  2803  052A  2D2C               	goto	u2480
  2804  052B                     u2481:
  2805  052B  2D33               	goto	l6071
  2806  052C                     u2480:
  2807                           	
  2808  052C                     l6069:	
  2809  052C  1683               	bsf	status, 5	;RP0=1, select bank1
  2810  052D  1303               	bcf	status, 6	;RP1=0, select bank1
  2811  052E  1588               	bsf	(1091/8)^080h,(1091)&7
  2812  052F  2D33               	goto	l6071
  2813                           	
  2814  0530                     l1554:	
  2815  0530  2D33               	goto	l6071
  2816                           	line	229
  2817                           	
  2818  0531                     l1553:	
  2819  0531  2D33               	goto	l6071
  2820                           	
  2821  0532                     l1551:	
  2822  0532  2D33               	goto	l6071
  2823                           	
  2824  0533                     l1549:	
  2825                           	
  2826  0533                     l6071:	
  2827                           ;newmain.c: 229: ADCON1 = 0b10000100;
  2828  0533  3084               	movlw	(084h)
  2829  0534  1683               	bsf	status, 5	;RP0=1, select bank1
  2830  0535  1303               	bcf	status, 6	;RP1=0, select bank1
  2831  0536  009F               	movwf	(159)^080h	;volatile
  2832                           	line	230
  2833                           	
  2834  0537                     l1555:	
  2835  0537  0008               	return
  2836                           	opt stack 0
  2837                           GLOBAL	__end_of_ADCInit
  2838  0538                     	__end_of_ADCInit:
  2839 ;; =============== function _ADCInit ends ============
  2840                           
  2841                           	signat	_ADCInit,4216
  2842                           	global	_controlMotor
  2843                           psect	text428,local,class=CODE,delta=2
  2844                           global __ptext428
  2845  0410                     __ptext428:
  2846                           
  2847 ;; *************** function _controlMotor *****************
  2848 ;; Defined at:
  2849 ;;		line 73 in file "newmain.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;  Leftpt          2    0[COMMON] int 
  2852 ;;  Rightpt         2    2[COMMON] int 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;		None
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2864 ;;      Params:         4       0       0       0       0
  2865 ;;      Locals:         0       0       0       0       0
  2866 ;;      Temps:          0       0       0       0       0
  2867 ;;      Totals:         4       0       0       0       0
  2868 ;;Total ram usage:        4 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_searchTrack
  2874 ;;		_main
  2875 ;; This function uses a non-reentrant model
  2876 ;;
  2877                           psect	text428
  2878                           	file	"newmain.c"
  2879                           	line	73
  2880                           	global	__size_of_controlMotor
  2881  0022                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
  2882                           	
  2883  0410                     _controlMotor:	
  2884                           	opt	stack 7
  2885                           ; Regs used in _controlMotor: [wreg]
  2886                           	line	74
  2887                           	
  2888  0410                     l6027:	
  2889                           ;newmain.c: 74: if (Leftpt == 1)
  2890  0410  3001               	movlw	01h
  2891  0411  0670               	xorwf	(controlMotor@Leftpt),w
  2892  0412  0471               	iorwf	(controlMotor@Leftpt+1),w
  2893  0413  1D03               	skipz
  2894  0414  2C16               	goto	u2431
  2895  0415  2C17               	goto	u2430
  2896  0416                     u2431:
  2897  0416  2C1B               	goto	l1523
  2898  0417                     u2430:
  2899                           	line	78
  2900                           	
  2901  0417                     l6029:	
  2902                           ;newmain.c: 75: {
  2903                           ;newmain.c: 78: RC0 = 1;
  2904  0417  1283               	bcf	status, 5	;RP0=0, select bank0
  2905  0418  1303               	bcf	status, 6	;RP1=0, select bank0
  2906  0419  1407               	bsf	(56/8),(56)&7
  2907                           	line	79
  2908                           ;newmain.c: 79: }
  2909  041A  2C22               	goto	l1524
  2910                           	line	80
  2911                           	
  2912  041B                     l1523:	
  2913                           	line	84
  2914                           ;newmain.c: 80: else
  2915                           ;newmain.c: 81: {
  2916                           ;newmain.c: 84: RC0 = 0;
  2917  041B  1283               	bcf	status, 5	;RP0=0, select bank0
  2918  041C  1303               	bcf	status, 6	;RP1=0, select bank0
  2919  041D  1007               	bcf	(56/8),(56)&7
  2920                           	line	85
  2921                           	
  2922  041E                     l6031:	
  2923                           ;newmain.c: 85: lastMotor = 1;
  2924  041E  3001               	movlw	low(01h)
  2925  041F  00C2               	movwf	(_lastMotor)
  2926  0420  3000               	movlw	high(01h)
  2927  0421  00C3               	movwf	((_lastMotor))+1
  2928                           	line	86
  2929                           	
  2930  0422                     l1524:	
  2931                           	line	89
  2932                           ;newmain.c: 86: }
  2933                           ;newmain.c: 89: if (Rightpt == 1)
  2934  0422  3001               	movlw	01h
  2935  0423  0672               	xorwf	(controlMotor@Rightpt),w
  2936  0424  0473               	iorwf	(controlMotor@Rightpt+1),w
  2937  0425  1D03               	skipz
  2938  0426  2C28               	goto	u2441
  2939  0427  2C29               	goto	u2440
  2940  0428                     u2441:
  2941  0428  2C2B               	goto	l1525
  2942  0429                     u2440:
  2943                           	line	93
  2944                           	
  2945  0429                     l6033:	
  2946                           ;newmain.c: 90: {
  2947                           ;newmain.c: 93: RC1 = 1;
  2948  0429  1487               	bsf	(57/8),(57)&7
  2949                           	line	94
  2950                           ;newmain.c: 94: }
  2951  042A  2C31               	goto	l1527
  2952                           	line	95
  2953                           	
  2954  042B                     l1525:	
  2955                           	line	98
  2956                           ;newmain.c: 95: else
  2957                           ;newmain.c: 96: {
  2958                           ;newmain.c: 98: RC1 = 0;
  2959  042B  1087               	bcf	(57/8),(57)&7
  2960                           	line	99
  2961                           	
  2962  042C                     l6035:	
  2963                           ;newmain.c: 99: lastMotor = 2;
  2964  042C  3002               	movlw	low(02h)
  2965  042D  00C2               	movwf	(_lastMotor)
  2966  042E  3000               	movlw	high(02h)
  2967  042F  00C3               	movwf	((_lastMotor))+1
  2968  0430  2C31               	goto	l1527
  2969                           	line	100
  2970                           	
  2971  0431                     l1526:	
  2972                           	line	101
  2973                           	
  2974  0431                     l1527:	
  2975  0431  0008               	return
  2976                           	opt stack 0
  2977                           GLOBAL	__end_of_controlMotor
  2978  0432                     	__end_of_controlMotor:
  2979 ;; =============== function _controlMotor ends ============
  2980                           
  2981                           	signat	_controlMotor,8312
  2982                           	global	__delay_ms
  2983                           psect	text429,local,class=CODE,delta=2
  2984                           global __ptext429
  2985  0456                     __ptext429:
  2986                           
  2987 ;; *************** function __delay_ms *****************
  2988 ;; Defined at:
  2989 ;;		line 45 in file "newmain.c"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;  ms              2    0[COMMON] unsigned int 
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  us              1    4[COMMON] unsigned char 
  2994 ;;  i               1    3[COMMON] unsigned char 
  2995 ;; Return value:  Size  Location     Type
  2996 ;;		None               void
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3004 ;;      Params:         2       0       0       0       0
  3005 ;;      Locals:         2       0       0       0       0
  3006 ;;      Temps:          1       0       0       0       0
  3007 ;;      Totals:         5       0       0       0       0
  3008 ;;Total ram usage:        5 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		_doDelay
  3014 ;;		_controlBuzzer
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           psect	text429
  3018                           	file	"newmain.c"
  3019                           	line	45
  3020                           	global	__size_of__delay_ms
  3021  0026                     	__size_of__delay_ms	equ	__end_of__delay_ms-__delay_ms
  3022                           	
  3023  0456                     __delay_ms:	
  3024                           	opt	stack 6
  3025                           ; Regs used in __delay_ms: [wreg+status,2+status,0]
  3026                           	line	47
  3027                           ;newmain.c: 46: unsigned char i;
  3028                           ;newmain.c: 47: do
  3029                           	
  3030  0456                     l1513:	
  3031                           	line	49
  3032                           	
  3033  0456                     l6019:	
  3034                           ;newmain.c: 48: {
  3035                           ;newmain.c: 49: i = 4;
  3036  0456  3004               	movlw	(04h)
  3037  0457  00F2               	movwf	(??__delay_ms+0)+0
  3038  0458  0872               	movf	(??__delay_ms+0)+0,w
  3039  0459  00F3               	movwf	(__delay_ms@i)
  3040                           	line	50
  3041                           ;newmain.c: 50: do
  3042                           	
  3043  045A                     l1514:	
  3044                           	line	52
  3045                           ;newmain.c: 51: {
  3046                           ;newmain.c: 52: { unsigned char us; us = (250)/(12000000/8000000L)|1; while(--us != 0) c
                                 ontinue; };
  3047  045A  30FB               	movlw	(0FBh)
  3048  045B  00F2               	movwf	(??__delay_ms+0)+0
  3049  045C  0872               	movf	(??__delay_ms+0)+0,w
  3050  045D  00F4               	movwf	(__delay_ms@us)
  3051  045E  2C60               	goto	l6021
  3052                           	
  3053  045F                     l1516:	
  3054  045F  2C60               	goto	l6021
  3055                           	
  3056  0460                     l1515:	
  3057                           	
  3058  0460                     l6021:	
  3059  0460  3001               	movlw	low(01h)
  3060  0461  02F4               	subwf	(__delay_ms@us),f
  3061  0462  1D03               	btfss	status,2
  3062  0463  2C65               	goto	u2401
  3063  0464  2C66               	goto	u2400
  3064  0465                     u2401:
  3065  0465  2C60               	goto	l6021
  3066  0466                     u2400:
  3067  0466  2C67               	goto	l6023
  3068                           	
  3069  0467                     l1517:	
  3070                           	line	53
  3071                           	
  3072  0467                     l6023:	
  3073                           ;newmain.c: 53: } while(--i);
  3074  0467  3001               	movlw	low(01h)
  3075  0468  02F3               	subwf	(__delay_ms@i),f
  3076  0469  1D03               	btfss	status,2
  3077  046A  2C6C               	goto	u2411
  3078  046B  2C6D               	goto	u2410
  3079  046C                     u2411:
  3080  046C  2C5A               	goto	l1514
  3081  046D                     u2410:
  3082  046D  2C6E               	goto	l6025
  3083                           	
  3084  046E                     l1518:	
  3085                           	line	54
  3086                           	
  3087  046E                     l6025:	
  3088                           ;newmain.c: 54: } while(--ms);
  3089  046E  3001               	movlw	low(01h)
  3090  046F  02F0               	subwf	(__delay_ms@ms),f
  3091  0470  3000               	movlw	high(01h)
  3092  0471  1C03               	skipc
  3093  0472  03F1               	decf	(__delay_ms@ms+1),f
  3094  0473  02F1               	subwf	(__delay_ms@ms+1),f
  3095  0474  0871               	movf	(((__delay_ms@ms+1))),w
  3096  0475  0470               	iorwf	(((__delay_ms@ms))),w
  3097  0476  1D03               	skipz
  3098  0477  2C79               	goto	u2421
  3099  0478  2C7A               	goto	u2420
  3100  0479                     u2421:
  3101  0479  2C56               	goto	l1513
  3102  047A                     u2420:
  3103  047A  2C7B               	goto	l1520
  3104                           	
  3105  047B                     l1519:	
  3106                           	line	55
  3107                           	
  3108  047B                     l1520:	
  3109  047B  0008               	return
  3110                           	opt stack 0
  3111                           GLOBAL	__end_of__delay_ms
  3112  047C                     	__end_of__delay_ms:
  3113 ;; =============== function __delay_ms ends ============
  3114                           
  3115                           	signat	__delay_ms,4216
  3116                           psect	text430,local,class=CODE,delta=2
  3117                           global __ptext430
  3118  0000                     __ptext430:
  3119                           	global	btemp
  3120  007E                     	btemp set 07Eh
  3121                           
  3122                           	DABS	1,126,2	;btemp
  3123                           	global	wtemp0
  3124  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sun Mar  4 12:18:13 2012

                    pc 0002                     _RD 0C60                     _WR 0C61                     fsr 0004  
                  _GIE 005F                    _RA1 0029                    _RA2 002A                    _RA3 002B  
                  _RC0 0038                    _RC1 0039                    _RC3 003B                    _RC4 003C  
                  fsr0 0004        __end_of_ADCInit 0538        __end_of_ADCRead 04D5                    indf 0000  
          lcd_goto@pos 0072                   l1520 047B                   l1513 0456                   l1514 045A  
                 l1530 04EC                   l1515 0460                   l1523 041B                   l1531 0504  
                 l1516 045F                   l1524 0422                   l1532 0503                   l1517 0467  
                 l1525 042B                   l1533 0504                   l1518 046E                   l1526 0431  
                 l1550 051A                   l3062 040F                   l3070 0455                   l1542 07FF  
                 l1519 047B                   l1527 0431                   l1551 0532                   l3071 0455  
                 l1552 0525                   l1560 04BE                   l3080 058D                   l1553 0531  
                 l1561 04D4                   l3065 03F5                   l1545 03E2                   l1554 0530  
                 l3074 03BB                   l1555 0537                   l1548 050F                   l3068 0448  
                 l1564 069D                   l1549 0533                   l3077 03C7                   l3069 0437  
                 l1565 071D                   l1558 04BA                   l1566 0731                   l1559 04BA  
                 l1567 0732                   l1568 0733                   l1569 0733                   l6021 0460  
                 l6023 0467                   l6031 041E                   l6015 05FA                   l6025 046E  
                 l6033 0429                   l6017 05FC                   l6019 0456                   l6035 042C  
                 l6027 0410                   l6029 0417                   l6061 0516                   l6301 05F8  
                 l6063 051A                   l6071 0533                   l6055 0505                   l6303 05FA  
                 l6065 0521                   l6057 050B                   l6081 04BF                   l6073 04A9  
                 l6161 0611                   l6305 05FD                   l6401 03E6                   l6067 0525  
                 l6059 050F                   l6083 04D4                   l6075 04AC                   l6171 0636  
                 l6163 0613                   l6155 05FE                   l6403 03EC                   l6411 0541  
                 l6069 052C                   l6077 04B7                   l6181 0673                   l6173 0646  
                 l6165 0620                   l6157 0602                   l4653 048C                   l6405 03D6  
                 l6421 0555                   l6413 0542                   l4654 04A7                   l6079 04B8  
                 l6183 0677                   l6175 0651                   l6167 0628                   l6159 060A  
                 l6431 0574                   l6423 055E                   l6415 0545                   l6407 0538  
                 l6177 0659                   l6169 062C                   l6353 04D5                   l6361 03F7  
                 l6441 0587                   l6433 0575                   l6425 0561                   l6417 0546  
                 l6409 0540                   l6179 0661                   l4851 060A                   l6291 05BA  
                 l6355 04DE                   l6371 040D                   l6363 03FB                   l6435 0576  
                 l6427 0567                   l6419 0554                   l6451 07BA                   l6443 0736  
                 l4860 0646                   l4852 0678                   l4684 05BA                   l4861 0655  
                 l4853 0620                   l4685 05E6                   l6293 05BE                   l6357 04EC  
                 l6373 040E                   l6365 0408                   l6381 04A7                   l6437 057C  
                 l6429 056A                   l6461 07F9                   l6453 07C6                   l6445 0787  
                 l4862 065F                   l4854 0613                   l4686 05FD                   l4863 0678  
                 l4855 0627                   l6295 05E6                   l6287 058E                   l6359 04F5  
                 l6367 0409                   l6375 047C                   l6383 03BD                   l6391 0443  
                 l6439 0582                   l6455 07D8                   l6447 0793                   l6471 0693  
                 l6463 0679                   l4856 063E                   l4857 0628                   l4849 0612  
                 l6297 05E8                   l6289 0592                   l6369 040A                   l6377 0483  
                 l6385 03C0                   l6393 0448                   l6457 07E4                   l6449 079F  
                 l6481 070B                   l6473 069D                   l6465 0680                   l4858 0645  
                 l4859 0651                   l6299 05EA                   l6379 048C                   l6387 0433  
                 l6395 03B2                   l6459 07F0                   l6483 0711                   l6475 06AB  
                 l6467 0685                   l6389 0437                   l6397 03B5                   l6485 0717  
                 l6477 06D4                   l6469 068A                   l6399 03E3                   l6487 071D  
                 l6479 06E2                   _ADON 00F8                   STR_1 0009                   u3101 05AC  
                 u3110 05BE                   u3102 05AD                   u3111 05BD                   u3103 05B2  
                 u2400 0466                   u3104 05B3                   u3200 04DE                   u2401 0465  
                 u3121 05D8                   u3201 04DD                   u2410 046D                   u3130 05F8  
                 u3122 05D9                   u3210 04F5                   u2411 046C                   u3131 05F7  
                 u3123 05DE                   u3211 04F4                   u2420 047A                   u2500 04BE  
                 u3124 05DF                   u2421 0479                   u2501 04BD                   u2430 0417  
                 u3230 0483                   u2431 0416                   u3135 05F4                   u3231 0482  
                 u2440 0429                   u3240 0454                   u2441 0428                   u3225 03FE  
                 u3241 0453                   u2450 050B                   u3090 0592                   u3250 0711  
                 u2451 050A                   u3091 0591                   u3307 056D                   u3251 0710  
                 u2460 0516                   u3260 0717                   u2461 0515                   u3317 03F0  
                 u3261 0716                   u2470 0521                   u2471 0520                   u3327 03F9  
                 u2480 052C                   u2800 0644                   u2481 052B                   u2801 0643  
                 u2820 0655                   u2821 0654                   u3277 054B                   u2830 0659  
                 u2750 0602                   u2495 04AF                   u2831 0658                   u2815 0649  
                 u3287 055A                   u2840 066A                   u2760 0609                   u2761 0608  
                 u3297 0564                   u2850 0677                   u2780 0626                   u2845 0666  
                 u2781 0625                   u2775 0618                   u2795 0637                   _WREN 0C62  
                 _main 0679           ___ftpack@arg 0070            main@rightpt 0030           ___ftpack@exp 0073  
                 btemp 007E                   _stop 003C                   start 0000          ?_controlMotor 0070  
                ?_main 0070     controlMotor@Leftpt 0070                  _EEADR 010D                  _CARRY 0018  
      __end_of_doDelay 0800           __delay_ms@ms 0070           __delay_ms@us 0074                  _PORTD 0008  
                _TRISA 0085                  _TRISB 0086                  _TRISC 0087                  _TRISD 0088  
                _TRISE 0089          ___awtoft@sign 002B                  _count 0034                  _ticks 0044  
        ___ftpack@sign 0074                  _start 0038                  pclath 000A                  status 0003  
                wtemp0 007E   __end_of_lcdCountdown 03E3           __end_of_main 0736         ??_controlMotor 0074  
         ?_searchTrack 0070              ??_ADCInit 0072              ??_ADCRead 0072                 ??_main 002C  
            ADCRead@ch 0076                 _ADCON0 001F                 _ADCON1 009F                 _ADRESH 001E  
               _ADRESL 009E                 _EEDATA 010C                 _EECON1 018C                 _EECON2 018D  
     __end_of___awtoft 04A8       __end_of___ftpack 0679    controlMotor@Rightpt 0072                 _TRISD0 0440  
               _TRISD1 0441                 _TRISD2 0442                 _TRISD3 0443       __end_of_lcd_init 058E  
     __end_of_lcd_goto 03C8       __end_of_lcd_puts 0456                 ___ftge 058E              ??_doDelay 0075  
               clrloop 03AA             ___ftge@ff1 0078             ___ftge@ff2 007B     __size_of__delay_ms 0026  
           ___awtoft@c 0026         __pcstackCOMMON 0070     __size_of_lcd_clear 0013     __size_of_lcd_putch 000B  
   __size_of_lcd_write 001A             __pbssBANK0 0034   __end_of_controlMotor 0432  __size_of_lcdCountdown 000E  
           __pmaintext 0679                ?___ftge 0078                _ADCInit 0505                _ADCRead 04A8  
            ?___awtoft 0026              ?___ftpack 0070   __size_of_searchTrack 0030      __end_of__delay_ms 047C  
              _GO_DONE 00F9           _lcdCountdown 03D5              ?_lcd_init 0070              ?_lcd_goto 0070  
            ?_lcd_puts 0070      __end_of_lcd_clear 03F6        __size_of___ftge 0070      __end_of_lcd_putch 03BC  
    __end_of_lcd_write 0410                _doDelay 0736             ??___awtoft 0029             ??___ftpack 0075  
              _clock_t 0040             ??_lcd_init 0074             ??_lcd_goto 0072             ??_lcd_puts 0072  
 end_of_initialization 03D1  __size_of_controlMotor 0022     ADCInit@ADC_Channel 0070             main@leftpt 002E  
           lcd_putch@c 0072             lcd_write@c 0071         __end_of___ftge 05FE            __delay_ms@i 0073  
         _controlMotor 0410    start_initialization 03C8     lcd_init@init_value 0076               ??___ftge 0020  
             ?_ADCInit 0070               ?_ADCRead 0070      __size_of___awtoft 002C      __size_of___ftpack 007B  
        __pcstackBANK0 0020              __delay_ms 0456      __size_of_lcd_init 0056      __size_of_lcd_goto 000C  
    __size_of_lcd_puts 0024              __ptext420 03BC              __ptext421 047C              __ptext413 0000  
            __ptext430 0000              __ptext422 03F6              __ptext414 0736              __ptext423 04D5  
            __ptext415 0538              __ptext424 058E              __ptext416 03D5              __ptext425 05FE  
            __ptext417 03E3              __ptext426 04A8              __ptext418 03B1              __ptext427 0505  
            __ptext419 0432              __ptext428 0410              __ptext429 0456          ??_searchTrack 0074  
             ?_doDelay 0070              _lcd_clear 03E3              __pstrings 0003              _lcd_putch 03B1  
            _lcd_write 03F6              _lastMotor 0042             ?__delay_ms 0070             ?_lcd_clear 0070  
        lcdCountdown@t 0073       __size_of_ADCInit 0033       __size_of_ADCRead 002D             ?_lcd_putch 0070  
          __stringbase 0008             ?_lcd_write 0070    __end_of_searchTrack 0505              lcd_puts@s 0073  
     __size_of_doDelay 00CA               ___awtoft 047C               ___ftpack 05FE            ??__delay_ms 0072  
             _lcd_init 0538               _lcd_goto 03BC               _lcd_puts 0432          __size_of_main 00BD  
             clear_ram 03A9            _searchTrack 04D5            ??_lcd_clear 0072               main@read 0032  
          ??_lcd_putch 0072            ??_lcd_write 0070          ?_lcdCountdown 0070              stringcode 0003  
       ??_lcdCountdown 0073               stringdir 0003               stringtab 0003  
