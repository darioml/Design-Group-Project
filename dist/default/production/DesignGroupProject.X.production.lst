

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Fri May 11 11:54:11 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 11 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 11 "newmain.c"
    45  2007  FFF5               	dw 0xFFFD & 0xFFF7 ;#
    46                           	FNCALL	_main,_ADCInit
    47                           	FNCALL	_main,_readchannel
    48                           	FNCALL	_main,_searchTrack
    49                           	FNCALL	_main,_controlMotor
    50                           	FNCALL	_searchTrack,_controlMotor
    51                           	FNROOT	_main
    52                           	global	_count
    53                           	global	_start
    54                           	global	_stop
    55                           	global	_clock_t
    56                           	global	_ignore
    57                           	global	_ticks
    58                           	global	_lastMotor
    59                           	global	_ADCON0
    60                           psect	text193,local,class=CODE,delta=2
    61                           global __ptext193
    62  0000                     __ptext193:
    63  001F                     _ADCON0	set	31
    64                           	global	_ADRESH
    65  001E                     _ADRESH	set	30
    66                           	global	_PORTA
    67  0005                     _PORTA	set	5
    68                           	global	_PORTB
    69  0006                     _PORTB	set	6
    70                           	global	_PORTC
    71  0007                     _PORTC	set	7
    72                           	global	_ADON
    73  00F8                     _ADON	set	248
    74                           	global	_CARRY
    75  0018                     _CARRY	set	24
    76                           	global	_GIE
    77  005F                     _GIE	set	95
    78                           	global	_GO_DONE
    79  00F9                     _GO_DONE	set	249
    80                           	global	_RB4
    81  0034                     _RB4	set	52
    82                           	global	_RB5
    83  0035                     _RB5	set	53
    84                           	global	_RB6
    85  0036                     _RB6	set	54
    86                           	global	_RC3
    87  003B                     _RC3	set	59
    88                           	global	_RC4
    89  003C                     _RC4	set	60
    90                           	global	_RC6
    91  003E                     _RC6	set	62
    92                           	global	_RC7
    93  003F                     _RC7	set	63
    94                           	global	_ANSEL
    95  0091                     _ANSEL	set	145
    96                           	global	_TRISA
    97  0085                     _TRISA	set	133
    98                           	global	_TRISB
    99  0086                     _TRISB	set	134
   100                           	global	_TRISC
   101  0087                     _TRISC	set	135
   102                           	global	_TRISE
   103  0089                     _TRISE	set	137
   104                           	global	_EEADR
   105  010D                     _EEADR	set	269
   106                           	global	_EEDATA
   107  010C                     _EEDATA	set	268
   108                           	global	_EECON1
   109  018C                     _EECON1	set	396
   110                           	global	_EECON2
   111  018D                     _EECON2	set	397
   112                           	global	_RD
   113  0C60                     _RD	set	3168
   114                           	global	_WR
   115  0C61                     _WR	set	3169
   116                           	global	_WREN
   117  0C62                     _WREN	set	3170
   118                           	file	"/tmp/cgtxE0WkU"
   119                           	line	#
   120                           psect cinit,class=CODE,delta=2
   121                           global start_initialization
   122  06C3                     start_initialization:
   123                           
   124                           psect	bssCOMMON,class=COMMON,space=1
   125                           global __pbssCOMMON
   126  007C                     __pbssCOMMON:
   127  007C                     _lastMotor:
   128  007C                            ds      2
   129                           
   130                           psect	bssBANK0,class=BANK0,space=1
   131                           global __pbssBANK0
   132  0020                     __pbssBANK0:
   133  0020                     _count:
   134  0020                            ds      4
   135                           
   136  0024                     _start:
   137  0024                            ds      4
   138                           
   139  0028                     _stop:
   140  0028                            ds      4
   141                           
   142  002C                     _clock_t:
   143  002C                            ds      2
   144                           
   145  002E                     _ignore:
   146  002E                            ds      2
   147                           
   148  0030                     _ticks:
   149  0030                            ds      2
   150                           
   151                           psect clrtext,class=CODE,delta=2
   152                           global clear_ram
   153                           ;	Called with FSR containing the base address, and
   154                           ;	W with the last address+1
   155  06BB                     clear_ram:
   156  06BB  0064               	clrwdt			;clear the watchdog before getting into this loop
   157  06BC                     clrloop:
   158  06BC  0180               	clrf	indf		;clear RAM location pointed to by FSR
   159  06BD  0A84               	incf	fsr,f		;increment pointer
   160  06BE  0604               	xorwf	fsr,w		;XOR with final address
   161  06BF  1903               	btfsc	status,2	;have we reached the end yet?
   162  06C0  3400               	retlw	0		;all done for this memory range, return
   163  06C1  0604               	xorwf	fsr,w		;XOR again to restore value
   164  06C2  2EBC               	goto	clrloop		;do the next byte
   165                           
   166                           ; Clear objects allocated to COMMON
   167                           psect cinit,class=CODE,delta=2
   168  06C3  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   169  06C4  01FD               	clrf	((__pbssCOMMON)+1)&07Fh
   170                           ; Clear objects allocated to BANK0
   171                           psect cinit,class=CODE,delta=2
   172  06C5  1383               	bcf	status, 7	;select IRP bank0
   173  06C6  3020               	movlw	low(__pbssBANK0)
   174  06C7  0084               	movwf	fsr
   175  06C8  3032               	movlw	low((__pbssBANK0)+012h)
   176  06C9  120A  118A  26BB   	fcall	clear_ram
              120A  118A         
   177                           psect cinit,class=CODE,delta=2
   178                           global end_of_initialization
   179                           
   180                           ;End of C runtime variable initialization code
   181                           
   182  06CE                     end_of_initialization:
   183  06CE  0183               clrf status
   184  06CF  120A  118A  2F81   ljmp _main	;jump to C main() function
   185                           psect	cstackCOMMON,class=COMMON,space=1
   186                           global __pcstackCOMMON
   187  0070                     __pcstackCOMMON:
   188                           	global	?_controlMotor
   189  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   190                           	global	?_ADCInit
   191  0070                     ?_ADCInit:	; 0 bytes @ 0x0
   192                           	global	??_ADCInit
   193  0070                     ??_ADCInit:	; 0 bytes @ 0x0
   194                           	global	?_searchTrack
   195  0070                     ?_searchTrack:	; 2 bytes @ 0x0
   196                           	global	?_readchannel
   197  0070                     ?_readchannel:	; 2 bytes @ 0x0
   198                           	global	?_main
   199  0070                     ?_main:	; 2 bytes @ 0x0
   200                           	global	controlMotor@Leftpt
   201  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   202                           	global	readchannel@chan
   203  0070                     readchannel@chan:	; 2 bytes @ 0x0
   204  0070                     	ds	2
   205                           	global	??_readchannel
   206  0072                     ??_readchannel:	; 0 bytes @ 0x2
   207                           	global	controlMotor@Rightpt
   208  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   209  0072                     	ds	2
   210                           	global	??_controlMotor
   211  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   212                           	global	??_searchTrack
   213  0074                     ??_searchTrack:	; 0 bytes @ 0x4
   214                           	global	??_main
   215  0074                     ??_main:	; 0 bytes @ 0x4
   216  0074                     	ds	2
   217                           	global	main@leftpt
   218  0076                     main@leftpt:	; 2 bytes @ 0x6
   219  0076                     	ds	2
   220                           	global	main@rightpt
   221  0078                     main@rightpt:	; 2 bytes @ 0x8
   222  0078                     	ds	2
   223                           	global	main@read
   224  007A                     main@read:	; 2 bytes @ 0xA
   225  007A                     	ds	2
   226 ;;Data sizes: Strings 0, constant 0, data 0, bss 20, persistent 0 stack 0
   227 ;;Auto spaces:   Size  Autos    Used
   228 ;; COMMON          14     12      14
   229 ;; BANK0           80      0      18
   230 ;; BANK1           80      0       0
   231 ;; BANK3           96      0       0
   232 ;; BANK2           80      0       0
   233                           
   234 ;;
   235 ;; Pointer list with targets:
   236                           
   237 ;; ?_readchannel	int  size(1) Largest target is 0
   238 ;;
   239                           
   240                           
   241 ;;
   242 ;; Critical Paths under _main in COMMON
   243 ;;
   244 ;;   _main->_readchannel
   245 ;;   _main->_controlMotor
   246 ;;   _searchTrack->_controlMotor
   247 ;;
   248 ;; Critical Paths under _main in BANK0
   249 ;;
   250 ;;   None.
   251 ;;
   252 ;; Critical Paths under _main in BANK1
   253 ;;
   254 ;;   None.
   255 ;;
   256 ;; Critical Paths under _main in BANK3
   257 ;;
   258 ;;   None.
   259 ;;
   260 ;; Critical Paths under _main in BANK2
   261 ;;
   262 ;;   None.
   263                           
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   266 ;;
   267                           
   268 ;;
   269 ;;Call Graph Tables:
   270 ;;
   271 ;; ---------------------------------------------------------------------------------
   272 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   273 ;; ---------------------------------------------------------------------------------
   274 ;; (0) _main                                                 8     8      0     268
   275 ;;                                              4 COMMON     8     8      0
   276 ;;                            _ADCInit
   277 ;;                        _readchannel
   278 ;;                        _searchTrack
   279 ;;                       _controlMotor
   280 ;; ---------------------------------------------------------------------------------
   281 ;; (1) _searchTrack                                          0     0      0      44
   282 ;;                       _controlMotor
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (1) _readchannel                                          4     2      2      44
   285 ;;                                              0 COMMON     4     2      2
   286 ;; ---------------------------------------------------------------------------------
   287 ;; (1) _ADCInit                                              0     0      0       0
   288 ;; ---------------------------------------------------------------------------------
   289 ;; (1) _controlMotor                                         4     0      4      44
   290 ;;                                              0 COMMON     4     0      4
   291 ;; ---------------------------------------------------------------------------------
   292 ;; Estimated maximum stack depth 1
   293 ;; ---------------------------------------------------------------------------------
   294                           
   295 ;; Call Graph Graphs:
   296                           
   297 ;; _main (ROOT)
   298 ;;   _ADCInit
   299 ;;   _readchannel
   300 ;;   _searchTrack
   301 ;;     _controlMotor
   302 ;;   _controlMotor
   303 ;;
   304                           
   305 ;; Address spaces:
   306                           
   307 ;;Name               Size   Autos  Total    Cost      Usage
   308 ;;BITCOMMON            E      0       0       0        0.0%
   309 ;;EEDATA             100      0       0       0        0.0%
   310 ;;NULL                 0      0       0       0        0.0%
   311 ;;CODE                 0      0       0       0        0.0%
   312 ;;COMMON               E      C       E       1      100.0%
   313 ;;BITSFR0              0      0       0       1        0.0%
   314 ;;SFR0                 0      0       0       1        0.0%
   315 ;;BITSFR1              0      0       0       2        0.0%
   316 ;;SFR1                 0      0       0       2        0.0%
   317 ;;STACK                0      0       2       2        0.0%
   318 ;;BITBANK0            50      0       0       3        0.0%
   319 ;;BANK0               50      0      12       4       22.5%
   320 ;;BITSFR3              0      0       0       4        0.0%
   321 ;;SFR3                 0      0       0       4        0.0%
   322 ;;BITBANK1            50      0       0       5        0.0%
   323 ;;BITSFR2              0      0       0       5        0.0%
   324 ;;SFR2                 0      0       0       5        0.0%
   325 ;;BANK1               50      0       0       6        0.0%
   326 ;;BITBANK3            60      0       0       7        0.0%
   327 ;;BANK3               60      0       0       8        0.0%
   328 ;;BANK2               50      0       0       9        0.0%
   329 ;;ABS                  0      0      20      10        0.0%
   330 ;;BITBANK2            50      0       0      11        0.0%
   331 ;;DATA                 0      0      22      12        0.0%
   332                           
   333                           	global	_main
   334                           psect	maintext,global,class=CODE,delta=2
   335                           global __pmaintext
   336  0781                     __pmaintext:
   337                           
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 353 in file "newmain.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  read            2   10[COMMON] int 
   345 ;;  rightpt         2    8[COMMON] int 
   346 ;;  leftpt          2    6[COMMON] int 
   347 ;; Return value:  Size  Location     Type
   348 ;;                  2  1566[COMMON] int 
   349 ;; Registers used:
   350 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   351 ;; Tracked objects:
   352 ;;		On entry : 17F/0
   353 ;;		On exit  : 0/0
   354 ;;		Unchanged: 0/0
   355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   356 ;;      Params:         0       0       0       0       0
   357 ;;      Locals:         6       0       0       0       0
   358 ;;      Temps:          2       0       0       0       0
   359 ;;      Totals:         8       0       0       0       0
   360 ;;Total ram usage:        8 bytes
   361 ;; Hardware stack levels required when called:    2
   362 ;; This function calls:
   363 ;;		_ADCInit
   364 ;;		_readchannel
   365 ;;		_searchTrack
   366 ;;		_controlMotor
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           psect	maintext
   372                           	file	"newmain.c"
   373                           	line	353
   374                           	global	__size_of_main
   375  007F                     	__size_of_main	equ	__end_of_main-_main
   376                           	
   377  0781                     _main:	
   378                           	opt	stack 6
   379                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   380                           	line	355
   381                           	
   382  0781                     l6146:	
   383                           ;newmain.c: 355: TRISA = 0x00;
   384  0781  1683               	bsf	status, 5	;RP0=1, select bank1
   385  0782  1303               	bcf	status, 6	;RP1=0, select bank1
   386  0783  0185               	clrf	(133)^080h	;volatile
   387                           	line	356
   388                           ;newmain.c: 356: TRISB = 0x00;
   389  0784  0186               	clrf	(134)^080h	;volatile
   390                           	line	357
   391                           ;newmain.c: 357: TRISC = 0x00;
   392  0785  0187               	clrf	(135)^080h	;volatile
   393                           	line	359
   394                           ;newmain.c: 359: PORTA = 0x00;
   395  0786  1283               	bcf	status, 5	;RP0=0, select bank0
   396  0787  1303               	bcf	status, 6	;RP1=0, select bank0
   397  0788  0185               	clrf	(5)	;volatile
   398                           	line	360
   399                           ;newmain.c: 360: PORTB = 0x00;
   400  0789  0186               	clrf	(6)	;volatile
   401                           	line	361
   402                           ;newmain.c: 361: PORTC = 0x00;
   403  078A  0187               	clrf	(7)	;volatile
   404                           	line	368
   405                           	
   406  078B                     l6148:	
   407                           ;newmain.c: 368: ADCInit ();
   408  078B  120A  118A  26B4   	fcall	_ADCInit
              120A  118A         
   409  0790  2F91               	goto	l6150
   410                           	line	371
   411                           ;newmain.c: 370: int leftpt, rightpt, read;
   412                           ;newmain.c: 371: while (1)
   413                           	
   414  0791                     l1567:	
   415                           	line	375
   416                           	
   417  0791                     l6150:	
   418                           ;newmain.c: 372: {
   419                           ;newmain.c: 375: read = readchannel(1);
   420  0791  3001               	movlw	low(01h)
   421  0792  00F0               	movwf	(?_readchannel)
   422  0793  3000               	movlw	high(01h)
   423  0794  00F1               	movwf	((?_readchannel))+1
   424  0795  120A  118A  2702   	fcall	_readchannel
              120A  118A         
   425  079A  0871               	movf	(1+(?_readchannel)),w
   426  079B  01FB               	clrf	(main@read+1)
   427  079C  07FB               	addwf	(main@read+1)
   428  079D  0870               	movf	(0+(?_readchannel)),w
   429  079E  01FA               	clrf	(main@read)
   430  079F  07FA               	addwf	(main@read)
   431                           
   432                           	line	376
   433                           	
   434  07A0                     l6152:	
   435                           ;newmain.c: 376: leftpt = (read > 105) ? 1 : 0;
   436  07A0  087B               	movf	(main@read+1),w
   437  07A1  3A80               	xorlw	80h
   438  07A2  00FF               	movwf	btemp+1
   439  07A3  3080               	movlw	(high(06Ah))^80h
   440  07A4  027F               	subwf	btemp+1,w
   441  07A5  1D03               	skipz
   442  07A6  2FA9               	goto	u2755
   443  07A7  306A               	movlw	low(06Ah)
   444  07A8  027A               	subwf	(main@read),w
   445  07A9                     u2755:
   446                           
   447  07A9  3000               	movlw	0
   448  07AA  1803               	skipnc
   449  07AB  3001               	movlw	1
   450  07AC  00F4               	movwf	(??_main+0)+0
   451  07AD  01F5               	clrf	(??_main+0)+0+1
   452  07AE  0874               	movf	0+(??_main+0)+0,w
   453  07AF  00F6               	movwf	(main@leftpt)
   454  07B0  0875               	movf	1+(??_main+0)+0,w
   455  07B1  00F7               	movwf	(main@leftpt+1)
   456                           	line	380
   457                           	
   458  07B2                     l6154:	
   459                           ;newmain.c: 380: read = readchannel(0);
   460  07B2  3000               	movlw	low(0)
   461  07B3  00F0               	movwf	(?_readchannel)
   462  07B4  3000               	movlw	high(0)
   463  07B5  00F1               	movwf	((?_readchannel))+1
   464  07B6  120A  118A  2702   	fcall	_readchannel
              120A  118A         
   465  07BB  0871               	movf	(1+(?_readchannel)),w
   466  07BC  01FB               	clrf	(main@read+1)
   467  07BD  07FB               	addwf	(main@read+1)
   468  07BE  0870               	movf	(0+(?_readchannel)),w
   469  07BF  01FA               	clrf	(main@read)
   470  07C0  07FA               	addwf	(main@read)
   471                           
   472                           	line	381
   473                           	
   474  07C1                     l6156:	
   475                           ;newmain.c: 381: rightpt = (read > 105) ? 1 : 0;
   476  07C1  087B               	movf	(main@read+1),w
   477  07C2  3A80               	xorlw	80h
   478  07C3  00FF               	movwf	btemp+1
   479  07C4  3080               	movlw	(high(06Ah))^80h
   480  07C5  027F               	subwf	btemp+1,w
   481  07C6  1D03               	skipz
   482  07C7  2FCA               	goto	u2765
   483  07C8  306A               	movlw	low(06Ah)
   484  07C9  027A               	subwf	(main@read),w
   485  07CA                     u2765:
   486                           
   487  07CA  3000               	movlw	0
   488  07CB  1803               	skipnc
   489  07CC  3001               	movlw	1
   490  07CD  00F4               	movwf	(??_main+0)+0
   491  07CE  01F5               	clrf	(??_main+0)+0+1
   492  07CF  0874               	movf	0+(??_main+0)+0,w
   493  07D0  00F8               	movwf	(main@rightpt)
   494  07D1  0875               	movf	1+(??_main+0)+0,w
   495  07D2  00F9               	movwf	(main@rightpt+1)
   496                           	line	386
   497                           	
   498  07D3                     l6158:	
   499                           ;newmain.c: 386: if((leftpt==0) && (rightpt==0))
   500  07D3  0877               	movf	((main@leftpt+1)),w
   501  07D4  0476               	iorwf	((main@leftpt)),w
   502  07D5  1D03               	skipz
   503  07D6  2FD8               	goto	u2771
   504  07D7  2FD9               	goto	u2770
   505  07D8                     u2771:
   506  07D8  2FE5               	goto	l6164
   507  07D9                     u2770:
   508                           	
   509  07D9                     l6160:	
   510  07D9  0879               	movf	((main@rightpt+1)),w
   511  07DA  0478               	iorwf	((main@rightpt)),w
   512  07DB  1D03               	skipz
   513  07DC  2FDE               	goto	u2781
   514  07DD  2FDF               	goto	u2780
   515  07DE                     u2781:
   516  07DE  2FE5               	goto	l6164
   517  07DF                     u2780:
   518                           	line	388
   519                           	
   520  07DF                     l6162:	
   521                           ;newmain.c: 387: {
   522                           ;newmain.c: 388: searchTrack();
   523  07DF  120A  118A  273A   	fcall	_searchTrack
              120A  118A         
   524                           	line	389
   525                           ;newmain.c: 389: }
   526  07E4  2F91               	goto	l6150
   527                           	line	390
   528                           	
   529  07E5                     l1568:	
   530                           	line	392
   531                           	
   532  07E5                     l6164:	
   533                           ;newmain.c: 390: else
   534                           ;newmain.c: 391: {
   535                           ;newmain.c: 392: ignore = 0;
   536  07E5  1283               	bcf	status, 5	;RP0=0, select bank0
   537  07E6  1303               	bcf	status, 6	;RP1=0, select bank0
   538  07E7  01AE               	clrf	(_ignore)
   539  07E8  01AF               	clrf	(_ignore+1)
   540                           	line	393
   541                           	
   542  07E9                     l6166:	
   543                           ;newmain.c: 393: controlMotor(leftpt, rightpt);
   544  07E9  0877               	movf	(main@leftpt+1),w
   545  07EA  01F1               	clrf	(?_controlMotor+1)
   546  07EB  07F1               	addwf	(?_controlMotor+1)
   547  07EC  0876               	movf	(main@leftpt),w
   548  07ED  01F0               	clrf	(?_controlMotor)
   549  07EE  07F0               	addwf	(?_controlMotor)
   550                           
   551  07EF  0879               	movf	(main@rightpt+1),w
   552  07F0  01F3               	clrf	1+(?_controlMotor)+02h
   553  07F1  07F3               	addwf	1+(?_controlMotor)+02h
   554  07F2  0878               	movf	(main@rightpt),w
   555  07F3  01F2               	clrf	0+(?_controlMotor)+02h
   556  07F4  07F2               	addwf	0+(?_controlMotor)+02h
   557                           
   558  07F5  120A  118A  26D2   	fcall	_controlMotor
              120A  118A         
   559  07FA  2F91               	goto	l6150
   560                           	line	394
   561                           	
   562  07FB                     l1569:	
   563  07FB  2F91               	goto	l6150
   564                           	line	395
   565                           	
   566  07FC                     l1570:	
   567                           	line	371
   568  07FC  2F91               	goto	l6150
   569                           	
   570  07FD                     l1571:	
   571                           	line	397
   572                           	
   573  07FD                     l1572:	
   574                           	global	start
   575  07FD  120A  118A  2800   	ljmp	start
   576                           	opt stack 0
   577                           GLOBAL	__end_of_main
   578  0800                     	__end_of_main:
   579 ;; =============== function _main ends ============
   580                           
   581                           	signat	_main,90
   582                           	global	_searchTrack
   583                           psect	text194,local,class=CODE,delta=2
   584                           global __ptext194
   585  073A                     __ptext194:
   586                           
   587 ;; *************** function _searchTrack *****************
   588 ;; Defined at:
   589 ;;		line 118 in file "newmain.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  2  1525[COMMON] int 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, pclath, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   603 ;;      Params:         0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used:    1
   609 ;; Hardware stack levels required when called:    1
   610 ;; This function calls:
   611 ;;		_controlMotor
   612 ;; This function is called by:
   613 ;;		_main
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           psect	text194
   617                           	file	"newmain.c"
   618                           	line	118
   619                           	global	__size_of_searchTrack
   620  0047                     	__size_of_searchTrack	equ	__end_of_searchTrack-_searchTrack
   621                           	
   622  073A                     _searchTrack:	
   623                           	opt	stack 6
   624                           ; Regs used in _searchTrack: [wreg+status,2+status,0+pclath+cstack]
   625                           	line	119
   626                           	
   627  073A                     l6134:	
   628                           ;newmain.c: 119: ignore = 1;
   629  073A  3001               	movlw	low(01h)
   630  073B  1283               	bcf	status, 5	;RP0=0, select bank0
   631  073C  1303               	bcf	status, 6	;RP1=0, select bank0
   632  073D  00AE               	movwf	(_ignore)
   633  073E  3000               	movlw	high(01h)
   634  073F  00AF               	movwf	((_ignore))+1
   635                           	line	120
   636                           ;newmain.c: 120: if (lastMotor == 2)
   637  0740  3002               	movlw	02h
   638  0741  067C               	xorwf	(_lastMotor),w
   639  0742  047D               	iorwf	(_lastMotor+1),w
   640  0743  1D03               	skipz
   641  0744  2F46               	goto	u2721
   642  0745  2F47               	goto	u2720
   643  0746                     u2721:
   644  0746  2F55               	goto	l6138
   645  0747                     u2720:
   646                           	line	122
   647                           	
   648  0747                     l6136:	
   649                           ;newmain.c: 121: {
   650                           ;newmain.c: 122: controlMotor(1, 0);
   651  0747  3001               	movlw	low(01h)
   652  0748  00F0               	movwf	(?_controlMotor)
   653  0749  3000               	movlw	high(01h)
   654  074A  00F1               	movwf	((?_controlMotor))+1
   655  074B  3000               	movlw	low(0)
   656  074C  00F2               	movwf	0+(?_controlMotor)+02h
   657  074D  3000               	movlw	high(0)
   658  074E  00F3               	movwf	(0+(?_controlMotor)+02h)+1
   659  074F  120A  118A  26D2   	fcall	_controlMotor
              120A  118A         
   660                           	line	123
   661                           ;newmain.c: 123: }
   662  0754  2F80               	goto	l1531
   663                           	line	124
   664                           	
   665  0755                     l1526:	
   666                           	
   667  0755                     l6138:	
   668                           ;newmain.c: 124: else if (lastMotor == 1)
   669  0755  3001               	movlw	01h
   670  0756  067C               	xorwf	(_lastMotor),w
   671  0757  047D               	iorwf	(_lastMotor+1),w
   672  0758  1D03               	skipz
   673  0759  2F5B               	goto	u2731
   674  075A  2F5C               	goto	u2730
   675  075B                     u2731:
   676  075B  2F6A               	goto	l6142
   677  075C                     u2730:
   678                           	line	126
   679                           	
   680  075C                     l6140:	
   681                           ;newmain.c: 125: {
   682                           ;newmain.c: 126: controlMotor(0, 1);
   683  075C  3000               	movlw	low(0)
   684  075D  00F0               	movwf	(?_controlMotor)
   685  075E  3000               	movlw	high(0)
   686  075F  00F1               	movwf	((?_controlMotor))+1
   687  0760  3001               	movlw	low(01h)
   688  0761  00F2               	movwf	0+(?_controlMotor)+02h
   689  0762  3000               	movlw	high(01h)
   690  0763  00F3               	movwf	(0+(?_controlMotor)+02h)+1
   691  0764  120A  118A  26D2   	fcall	_controlMotor
              120A  118A         
   692                           	line	127
   693                           ;newmain.c: 127: }
   694  0769  2F80               	goto	l1531
   695                           	line	128
   696                           	
   697  076A                     l1528:	
   698                           	
   699  076A                     l6142:	
   700                           ;newmain.c: 128: else if (lastMotor == 0)
   701  076A  087D               	movf	((_lastMotor+1)),w
   702  076B  047C               	iorwf	((_lastMotor)),w
   703  076C  1D03               	skipz
   704  076D  2F6F               	goto	u2741
   705  076E  2F70               	goto	u2740
   706  076F                     u2741:
   707  076F  2F80               	goto	l1531
   708  0770                     u2740:
   709                           	line	130
   710                           	
   711  0770                     l6144:	
   712                           ;newmain.c: 129: {
   713                           ;newmain.c: 130: controlMotor(1,1);
   714  0770  3001               	movlw	low(01h)
   715  0771  00F0               	movwf	(?_controlMotor)
   716  0772  3000               	movlw	high(01h)
   717  0773  00F1               	movwf	((?_controlMotor))+1
   718  0774  3001               	movlw	low(01h)
   719  0775  00F2               	movwf	0+(?_controlMotor)+02h
   720  0776  3000               	movlw	high(01h)
   721  0777  00F3               	movwf	(0+(?_controlMotor)+02h)+1
   722  0778  120A  118A  26D2   	fcall	_controlMotor
              120A  118A         
   723  077D  2F80               	goto	l1531
   724                           	line	131
   725                           	
   726  077E                     l1530:	
   727  077E  2F80               	goto	l1531
   728                           	line	132
   729                           	
   730  077F                     l1529:	
   731  077F  2F80               	goto	l1531
   732                           	
   733  0780                     l1527:	
   734                           	
   735  0780                     l1531:	
   736  0780  0008               	return
   737                           	opt stack 0
   738                           GLOBAL	__end_of_searchTrack
   739  0781                     	__end_of_searchTrack:
   740 ;; =============== function _searchTrack ends ============
   741                           
   742                           	signat	_searchTrack,90
   743                           	global	_readchannel
   744                           psect	text195,local,class=CODE,delta=2
   745                           global __ptext195
   746  0702                     __ptext195:
   747                           
   748 ;; *************** function _readchannel *****************
   749 ;; Defined at:
   750 ;;		line 327 in file "newmain.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;  chan            2    0[COMMON] int 
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  2    0[COMMON] int 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   764 ;;      Params:         2       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0
   766 ;;      Temps:          2       0       0       0       0
   767 ;;      Totals:         4       0       0       0       0
   768 ;;Total ram usage:        4 bytes
   769 ;; Hardware stack levels used:    1
   770 ;; This function calls:
   771 ;;		Nothing
   772 ;; This function is called by:
   773 ;;		_main
   774 ;; This function uses a non-reentrant model
   775 ;;
   776                           psect	text195
   777                           	file	"newmain.c"
   778                           	line	327
   779                           	global	__size_of_readchannel
   780  0038                     	__size_of_readchannel	equ	__end_of_readchannel-_readchannel
   781                           	
   782  0702                     _readchannel:	
   783                           	opt	stack 7
   784                           ; Regs used in _readchannel: [wreg+status,2+status,0]
   785                           	line	328
   786                           	
   787  0702                     l6112:	
   788                           ;newmain.c: 328: if (chan == 0)
   789  0702  0871               	movf	((readchannel@chan+1)),w
   790  0703  0470               	iorwf	((readchannel@chan)),w
   791  0704  1D03               	skipz
   792  0705  2F07               	goto	u2681
   793  0706  2F08               	goto	u2680
   794  0707                     u2681:
   795  0707  2F1D               	goto	l6124
   796  0708                     u2680:
   797                           	line	330
   798                           	
   799  0708                     l6114:	
   800                           ;newmain.c: 329: {
   801                           ;newmain.c: 330: ADCON0 = 0b00010101;
   802  0708  3015               	movlw	(015h)
   803  0709  1283               	bcf	status, 5	;RP0=0, select bank0
   804  070A  1303               	bcf	status, 6	;RP1=0, select bank0
   805  070B  009F               	movwf	(31)	;volatile
   806                           	line	332
   807                           	
   808  070C                     l6116:	
   809                           ;newmain.c: 332: GO_DONE=1;
   810  070C  149F               	bsf	(249/8),(249)&7
   811                           	line	333
   812                           ;newmain.c: 333: while(GO_DONE);
   813  070D  2F0E               	goto	l1556
   814                           	
   815  070E                     l1557:	
   816                           	
   817  070E                     l1556:	
   818  070E  189F               	btfsc	(249/8),(249)&7
   819  070F  2F11               	goto	u2691
   820  0710  2F12               	goto	u2690
   821  0711                     u2691:
   822  0711  2F0E               	goto	l1556
   823  0712                     u2690:
   824                           	
   825  0712                     l1558:	
   826                           	line	335
   827                           ;newmain.c: 335: ADON=0;
   828  0712  101F               	bcf	(248/8),(248)&7
   829                           	line	337
   830                           	
   831  0713                     l6118:	
   832                           ;newmain.c: 337: return ADRESH;
   833  0713  081E               	movf	(30),w	;volatile
   834  0714  00F2               	movwf	(??_readchannel+0)+0
   835  0715  01F3               	clrf	(??_readchannel+0)+0+1
   836  0716  0872               	movf	0+(??_readchannel+0)+0,w
   837  0717  00F0               	movwf	(?_readchannel)
   838  0718  0873               	movf	1+(??_readchannel+0)+0,w
   839  0719  00F1               	movwf	(?_readchannel+1)
   840  071A  2F39               	goto	l1559
   841                           	
   842  071B                     l6120:	
   843  071B  2F39               	goto	l1559
   844                           	line	338
   845                           	
   846  071C                     l6122:	
   847                           ;newmain.c: 338: }
   848  071C  2F39               	goto	l1559
   849                           	line	339
   850                           	
   851  071D                     l1555:	
   852                           	
   853  071D                     l6124:	
   854                           ;newmain.c: 339: else if (chan == 1)
   855  071D  3001               	movlw	01h
   856  071E  0670               	xorwf	(readchannel@chan),w
   857  071F  0471               	iorwf	(readchannel@chan+1),w
   858  0720  1D03               	skipz
   859  0721  2F23               	goto	u2701
   860  0722  2F24               	goto	u2700
   861  0723                     u2701:
   862  0723  2F39               	goto	l1559
   863  0724                     u2700:
   864                           	line	341
   865                           	
   866  0724                     l6126:	
   867                           ;newmain.c: 340: {
   868                           ;newmain.c: 341: ADCON0 = 0b00011001;
   869  0724  3019               	movlw	(019h)
   870  0725  1283               	bcf	status, 5	;RP0=0, select bank0
   871  0726  1303               	bcf	status, 6	;RP1=0, select bank0
   872  0727  009F               	movwf	(31)	;volatile
   873                           	line	343
   874                           	
   875  0728                     l6128:	
   876                           ;newmain.c: 343: GO_DONE=1;
   877  0728  149F               	bsf	(249/8),(249)&7
   878                           	line	344
   879                           ;newmain.c: 344: while(GO_DONE);
   880  0729  2F2A               	goto	l1562
   881                           	
   882  072A                     l1563:	
   883                           	
   884  072A                     l1562:	
   885  072A  189F               	btfsc	(249/8),(249)&7
   886  072B  2F2D               	goto	u2711
   887  072C  2F2E               	goto	u2710
   888  072D                     u2711:
   889  072D  2F2A               	goto	l1562
   890  072E                     u2710:
   891                           	
   892  072E                     l1564:	
   893                           	line	346
   894                           ;newmain.c: 346: ADON=0;
   895  072E  101F               	bcf	(248/8),(248)&7
   896                           	line	348
   897                           	
   898  072F                     l6130:	
   899                           ;newmain.c: 348: return ADRESH;
   900  072F  081E               	movf	(30),w	;volatile
   901  0730  00F2               	movwf	(??_readchannel+0)+0
   902  0731  01F3               	clrf	(??_readchannel+0)+0+1
   903  0732  0872               	movf	0+(??_readchannel+0)+0,w
   904  0733  00F0               	movwf	(?_readchannel)
   905  0734  0873               	movf	1+(??_readchannel+0)+0,w
   906  0735  00F1               	movwf	(?_readchannel+1)
   907  0736  2F39               	goto	l1559
   908                           	
   909  0737                     l6132:	
   910  0737  2F39               	goto	l1559
   911                           	line	349
   912                           	
   913  0738                     l1561:	
   914  0738  2F39               	goto	l1559
   915                           	line	350
   916                           	
   917  0739                     l1560:	
   918                           	
   919  0739                     l1559:	
   920  0739  0008               	return
   921                           	opt stack 0
   922                           GLOBAL	__end_of_readchannel
   923  073A                     	__end_of_readchannel:
   924 ;; =============== function _readchannel ends ============
   925                           
   926                           	signat	_readchannel,4218
   927                           	global	_ADCInit
   928                           psect	text196,local,class=CODE,delta=2
   929                           global __ptext196
   930  06B4                     __ptext196:
   931                           
   932 ;; *************** function _ADCInit *****************
   933 ;; Defined at:
   934 ;;		line 239 in file "newmain.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;		None               void
   941 ;; Registers used:
   942 ;;		wreg
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; This function calls:
   955 ;;		Nothing
   956 ;; This function is called by:
   957 ;;		_main
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           psect	text196
   961                           	file	"newmain.c"
   962                           	line	239
   963                           	global	__size_of_ADCInit
   964  0007                     	__size_of_ADCInit	equ	__end_of_ADCInit-_ADCInit
   965                           	
   966  06B4                     _ADCInit:	
   967                           	opt	stack 7
   968                           ; Regs used in _ADCInit: [wreg]
   969                           	line	240
   970                           	
   971  06B4                     l6110:	
   972                           ;newmain.c: 240: TRISE = 0xFF;
   973  06B4  30FF               	movlw	(0FFh)
   974  06B5  1683               	bsf	status, 5	;RP0=1, select bank1
   975  06B6  1303               	bcf	status, 6	;RP1=0, select bank1
   976  06B7  0089               	movwf	(137)^080h	;volatile
   977                           	line	241
   978                           ;newmain.c: 241: ANSEL = 0b11111111;
   979  06B8  30FF               	movlw	(0FFh)
   980  06B9  0091               	movwf	(145)^080h	;volatile
   981                           	line	244
   982                           	
   983  06BA                     l1546:	
   984  06BA  0008               	return
   985                           	opt stack 0
   986                           GLOBAL	__end_of_ADCInit
   987  06BB                     	__end_of_ADCInit:
   988 ;; =============== function _ADCInit ends ============
   989                           
   990                           	signat	_ADCInit,88
   991                           	global	_controlMotor
   992                           psect	text197,local,class=CODE,delta=2
   993                           global __ptext197
   994  06D2                     __ptext197:
   995                           
   996 ;; *************** function _controlMotor *****************
   997 ;; Defined at:
   998 ;;		line 76 in file "newmain.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  Leftpt          2    0[COMMON] int 
  1001 ;;  Rightpt         2    2[COMMON] int 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;		None               void
  1006 ;; Registers used:
  1007 ;;		wreg, status,2, status,0
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         4       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0
  1015 ;;      Temps:          0       0       0       0       0
  1016 ;;      Totals:         4       0       0       0       0
  1017 ;;Total ram usage:        4 bytes
  1018 ;; Hardware stack levels used:    1
  1019 ;; This function calls:
  1020 ;;		Nothing
  1021 ;; This function is called by:
  1022 ;;		_searchTrack
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           psect	text197
  1027                           	file	"newmain.c"
  1028                           	line	76
  1029                           	global	__size_of_controlMotor
  1030  0030                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
  1031                           	
  1032  06D2                     _controlMotor:	
  1033                           	opt	stack 7
  1034                           ; Regs used in _controlMotor: [wreg+status,2+status,0]
  1035                           	line	77
  1036                           	
  1037  06D2                     l6096:	
  1038                           ;newmain.c: 77: if (Leftpt == 1)
  1039  06D2  3001               	movlw	01h
  1040  06D3  0670               	xorwf	(controlMotor@Leftpt),w
  1041  06D4  0471               	iorwf	(controlMotor@Leftpt+1),w
  1042  06D5  1D03               	skipz
  1043  06D6  2ED8               	goto	u2641
  1044  06D7  2ED9               	goto	u2640
  1045  06D8                     u2641:
  1046  06D8  2EDD               	goto	l1517
  1047  06D9                     u2640:
  1048                           	line	81
  1049                           	
  1050  06D9                     l6098:	
  1051                           ;newmain.c: 78: {
  1052                           ;newmain.c: 81: RC6 = 1;
  1053  06D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1054  06DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1055  06DB  1707               	bsf	(62/8),(62)&7
  1056                           	line	82
  1057                           ;newmain.c: 82: }
  1058  06DC  2EEB               	goto	l1518
  1059                           	line	83
  1060                           	
  1061  06DD                     l1517:	
  1062                           	line	87
  1063                           ;newmain.c: 83: else
  1064                           ;newmain.c: 84: {
  1065                           ;newmain.c: 87: RC6 = 0;
  1066  06DD  1283               	bcf	status, 5	;RP0=0, select bank0
  1067  06DE  1303               	bcf	status, 6	;RP1=0, select bank0
  1068  06DF  1307               	bcf	(62/8),(62)&7
  1069                           	line	88
  1070                           	
  1071  06E0                     l6100:	
  1072                           ;newmain.c: 88: if (ignore == 0)
  1073  06E0  082F               	movf	((_ignore+1)),w
  1074  06E1  042E               	iorwf	((_ignore)),w
  1075  06E2  1D03               	skipz
  1076  06E3  2EE5               	goto	u2651
  1077  06E4  2EE6               	goto	u2650
  1078  06E5                     u2651:
  1079  06E5  2EEB               	goto	l1518
  1080  06E6                     u2650:
  1081                           	line	90
  1082                           	
  1083  06E6                     l6102:	
  1084                           ;newmain.c: 89: {
  1085                           ;newmain.c: 90: lastMotor = 1;
  1086  06E6  3001               	movlw	low(01h)
  1087  06E7  00FC               	movwf	(_lastMotor)
  1088  06E8  3000               	movlw	high(01h)
  1089  06E9  00FD               	movwf	((_lastMotor))+1
  1090  06EA  2EEB               	goto	l1518
  1091                           	line	91
  1092                           	
  1093  06EB                     l1519:	
  1094                           	line	92
  1095                           	
  1096  06EB                     l1518:	
  1097                           	line	95
  1098                           ;newmain.c: 91: }
  1099                           ;newmain.c: 92: }
  1100                           ;newmain.c: 95: if (Rightpt == 1)
  1101  06EB  3001               	movlw	01h
  1102  06EC  0672               	xorwf	(controlMotor@Rightpt),w
  1103  06ED  0473               	iorwf	(controlMotor@Rightpt+1),w
  1104  06EE  1D03               	skipz
  1105  06EF  2EF1               	goto	u2661
  1106  06F0  2EF2               	goto	u2660
  1107  06F1                     u2661:
  1108  06F1  2EF4               	goto	l1520
  1109  06F2                     u2660:
  1110                           	line	99
  1111                           	
  1112  06F2                     l6104:	
  1113                           ;newmain.c: 96: {
  1114                           ;newmain.c: 99: RC7 = 1;
  1115  06F2  1787               	bsf	(63/8),(63)&7
  1116                           	line	100
  1117                           ;newmain.c: 100: }
  1118  06F3  2F01               	goto	l1523
  1119                           	line	101
  1120                           	
  1121  06F4                     l1520:	
  1122                           	line	104
  1123                           ;newmain.c: 101: else
  1124                           ;newmain.c: 102: {
  1125                           ;newmain.c: 104: RC7 = 0;
  1126  06F4  1387               	bcf	(63/8),(63)&7
  1127                           	line	105
  1128                           	
  1129  06F5                     l6106:	
  1130                           ;newmain.c: 105: if (ignore == 0)
  1131  06F5  082F               	movf	((_ignore+1)),w
  1132  06F6  042E               	iorwf	((_ignore)),w
  1133  06F7  1D03               	skipz
  1134  06F8  2EFA               	goto	u2671
  1135  06F9  2EFB               	goto	u2670
  1136  06FA                     u2671:
  1137  06FA  2F01               	goto	l1523
  1138  06FB                     u2670:
  1139                           	line	107
  1140                           	
  1141  06FB                     l6108:	
  1142                           ;newmain.c: 106: {
  1143                           ;newmain.c: 107: lastMotor = 2;
  1144  06FB  3002               	movlw	low(02h)
  1145  06FC  00FC               	movwf	(_lastMotor)
  1146  06FD  3000               	movlw	high(02h)
  1147  06FE  00FD               	movwf	((_lastMotor))+1
  1148  06FF  2F01               	goto	l1523
  1149                           	line	108
  1150                           	
  1151  0700                     l1522:	
  1152  0700  2F01               	goto	l1523
  1153                           	line	109
  1154                           	
  1155  0701                     l1521:	
  1156                           	line	110
  1157                           	
  1158  0701                     l1523:	
  1159  0701  0008               	return
  1160                           	opt stack 0
  1161                           GLOBAL	__end_of_controlMotor
  1162  0702                     	__end_of_controlMotor:
  1163 ;; =============== function _controlMotor ends ============
  1164                           
  1165                           	signat	_controlMotor,8312
  1166                           psect	text198,local,class=CODE,delta=2
  1167                           global __ptext198
  1168  0000                     __ptext198:
  1169                           	global	btemp
  1170  007E                     	btemp set 07Eh
  1171                           
  1172                           	DABS	1,126,2	;btemp
  1173                           	global	wtemp0
  1174  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Fri May 11 11:54:11 2012

                   _RD 0C60                     _WR 0C61                     fsr 0004                    _GIE 005F  
                  _RB4 0034                    _RC3 003B                    _RB5 0035                    _RC4 003C  
                  _RB6 0036                    _RC6 003E                    _RC7 003F        __end_of_ADCInit 06BB  
                  indf 0000                   l1520 06F4                   l1521 0701                   l1522 0700  
                 l1530 077E                   l1523 0701                   l1531 0780                   l1517 06DD  
                 l1518 06EB                   l1526 0755                   l1519 06EB                   l1527 0780  
                 l1560 0739                   l1528 076A                   l1561 0738                   l1529 077F  
                 l1546 06BA                   l1562 072A                   l1570 07FC                   l1563 072A  
                 l1555 071D                   l1571 07FD                   l1564 072E                   l1556 070E  
                 l1572 07FD                   l1557 070E                   l1558 0712                   l1559 0739  
                 l1567 0791                   l1568 07E5                   l1569 07FB                   l6100 06E0  
                 l6102 06E6                   l6110 06B4                   l6104 06F2                   l6120 071B  
                 l6112 0702                   l6106 06F5                   l6130 072F                   l6122 071C  
                 l6114 0708                   l6108 06FB                   l6132 0737                   l6116 070C  
                 l6124 071D                   l6140 075C                   l6126 0724                   l6118 0713  
                 l6142 076A                   l6134 073A                   l6150 0791                   l6128 0728  
                 l6144 0770                   l6136 0747                   l6160 07D9                   l6152 07A0  
                 l6138 0755                   l6162 07DF                   l6154 07B2                   l6146 0781  
                 l6164 07E5                   l6156 07C1                   l6148 078B                   l6166 07E9  
                 l6158 07D3                   l6096 06D2                   l6098 06D9                   _ADON 00F8  
                 u2700 0724                   u2701 0723                   u2710 072E                   u2711 072D  
                 u2640 06D9                   u2720 0747                   u2641 06D8                   u2721 0746  
                 u2650 06E6                   u2730 075C                   u2651 06E5                   u2731 075B  
                 u2660 06F2                   u2740 0770                   u2661 06F1                   u2741 076F  
                 u2670 06FB                   u2671 06FA                   u2680 0708                   u2681 0707  
                 u2690 0712                   u2770 07D9                   u2691 0711                   u2771 07D8  
                 u2755 07A9                   u2780 07DF                   u2781 07DE                   u2765 07CA  
                 _WREN 0C62                   _main 0781            main@rightpt 0078                   btemp 007E  
                 _stop 0028                   start 0000          ?_controlMotor 0070                  ?_main 0070  
   controlMotor@Leftpt 0070                  _EEADR 010D                  _CARRY 0018                  _ANSEL 0091  
                _PORTA 0005                  _PORTB 0006                  _PORTC 0007                  _TRISA 0085  
                _TRISB 0086                  _TRISC 0087                  _TRISE 0089           ?_readchannel 0070  
                _count 0020                  _ticks 0030                  _start 0024                  status 0003  
                wtemp0 007E           __end_of_main 0800         ??_controlMotor 0074           ?_searchTrack 0070  
            ??_ADCInit 0070                 ??_main 0074                 _ADCON0 001F                 _ADRESH 001E  
               _EEDATA 010C                 _EECON1 018C                 _EECON2 018D    controlMotor@Rightpt 0072  
               _ignore 002E                 clrloop 06BC         __pcstackCOMMON 0070             __pbssBANK0 0020  
 __size_of_readchannel 0038   __end_of_controlMotor 0702             __pmaintext 0781                _ADCInit 06B4  
 __size_of_searchTrack 0047                _GO_DONE 00F9                _clock_t 002C   end_of_initialization 06CE  
__size_of_controlMotor 0030             main@leftpt 0076           _controlMotor 06D2    start_initialization 06C3  
             ?_ADCInit 0070            __pbssCOMMON 007C          ??_readchannel 0072              __ptext193 0000  
            __ptext194 073A              __ptext195 0702              __ptext196 06B4              __ptext197 06D2  
            __ptext198 0000          ??_searchTrack 0074              _lastMotor 007C    __end_of_readchannel 073A  
     __size_of_ADCInit 0007    __end_of_searchTrack 0781            _readchannel 0702        readchannel@chan 0070  
        __size_of_main 007F               clear_ram 06BB            _searchTrack 073A               main@read 007A  
