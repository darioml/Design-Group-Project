

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Thu Mar  8 17:09:01 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 10 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 10 "newmain.c"
    45  2007  FFF5               	dw 0xFFFD & 0xFFF7 ;#
    46                           	FNCALL	_main,__delay_ms
    47                           	FNCALL	_main,_lcd_init
    48                           	FNCALL	_main,_lcd_puts
    49                           	FNCALL	_main,_doDelay
    50                           	FNCALL	_main,_ADCInit
    51                           	FNCALL	_main,_ADCRead
    52                           	FNCALL	_main,___awtoft
    53                           	FNCALL	_main,___ftge
    54                           	FNCALL	_main,_searchTrack
    55                           	FNCALL	_main,_controlMotor
    56                           	FNCALL	_doDelay,_lcdCountdown
    57                           	FNCALL	_doDelay,__delay_ms
    58                           	FNCALL	_doDelay,_lcd_goto
    59                           	FNCALL	_doDelay,_lcd_puts
    60                           	FNCALL	_lcd_init,_lcd_write
    61                           	FNCALL	_lcd_init,_lcd_clear
    62                           	FNCALL	_lcdCountdown,_lcd_goto
    63                           	FNCALL	_lcdCountdown,_lcd_putch
    64                           	FNCALL	_lcd_clear,_lcd_write
    65                           	FNCALL	_lcd_putch,_lcd_write
    66                           	FNCALL	_lcd_puts,_lcd_write
    67                           	FNCALL	_lcd_goto,_lcd_write
    68                           	FNCALL	___awtoft,___ftpack
    69                           	FNCALL	_searchTrack,_controlMotor
    70                           	FNROOT	_main
    71                           	global	_count
    72                           	global	_start
    73                           	global	_stop
    74                           	global	_clock_t
    75                           	global	_lastMotor
    76                           	global	_ticks
    77                           	global	_ADCON0
    78                           psect	text425,local,class=CODE,delta=2
    79                           global __ptext425
    80  0000                     __ptext425:
    81  001F                     _ADCON0	set	31
    82                           	global	_ADRESH
    83  001E                     _ADRESH	set	30
    84                           	global	_PORTD
    85  0008                     _PORTD	set	8
    86                           	global	_ADON
    87  00F8                     _ADON	set	248
    88                           	global	_CARRY
    89  0018                     _CARRY	set	24
    90                           	global	_GIE
    91  005F                     _GIE	set	95
    92                           	global	_GO_DONE
    93  00F9                     _GO_DONE	set	249
    94                           	global	_RA1
    95  0029                     _RA1	set	41
    96                           	global	_RA2
    97  002A                     _RA2	set	42
    98                           	global	_RA3
    99  002B                     _RA3	set	43
   100                           	global	_RC3
   101  003B                     _RC3	set	59
   102                           	global	_RC4
   103  003C                     _RC4	set	60
   104                           	global	_RC6
   105  003E                     _RC6	set	62
   106                           	global	_RC7
   107  003F                     _RC7	set	63
   108                           	global	_ADCON1
   109  009F                     _ADCON1	set	159
   110                           	global	_ADRESL
   111  009E                     _ADRESL	set	158
   112                           	global	_TRISA
   113  0085                     _TRISA	set	133
   114                           	global	_TRISB
   115  0086                     _TRISB	set	134
   116                           	global	_TRISC
   117  0087                     _TRISC	set	135
   118                           	global	_TRISD
   119  0088                     _TRISD	set	136
   120                           	global	_TRISE
   121  0089                     _TRISE	set	137
   122                           	global	_TRISE0
   123  0448                     _TRISE0	set	1096
   124                           	global	_TRISE1
   125  0449                     _TRISE1	set	1097
   126                           	global	_TRISE2
   127  044A                     _TRISE2	set	1098
   128                           	global	_TRISE3
   129  044B                     _TRISE3	set	1099
   130                           	global	_EEADR
   131  010D                     _EEADR	set	269
   132                           	global	_EEDATA
   133  010C                     _EEDATA	set	268
   134                           	global	_EECON1
   135  018C                     _EECON1	set	396
   136                           	global	_EECON2
   137  018D                     _EECON2	set	397
   138                           	global	_RD
   139  0C60                     _RD	set	3168
   140                           	global	_WR
   141  0C61                     _WR	set	3169
   142                           	global	_WREN
   143  0C62                     _WREN	set	3170
   144                           psect	strings,class=STRING,delta=2
   145                           global __pstrings
   146  0003                     __pstrings:
   147                           ;	global	stringdir,stringtab,__stringbase
   148  0003                     stringtab:
   149                           ;	String table - string pointers are 1 byte each
   150  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   151  0003  3000               movlw high(stringdir)
   152  0004  008A               movwf pclath
   153  0005  0804               movf fsr,w
   154  0006  0A84               incf fsr
   155  0007  0782               	addwf pc
   156  0008                     __stringbase:
   157  0008  3400               	retlw	0
   158                           psect	strings
   159                           	
   160  0009                     STR_1:	
   161  0009  3453               	retlw	83	;'S'
   162  000A  3474               	retlw	116	;'t'
   163  000B  3461               	retlw	97	;'a'
   164  000C  3472               	retlw	114	;'r'
   165  000D  3474               	retlw	116	;'t'
   166  000E  3421               	retlw	33	;'!'
   167  000F  3400               	retlw	0
   168                           psect	strings
   169                           	
   170  0010                     STR_2:	
   171  0010  3474               	retlw	116	;'t'
   172  0011  3465               	retlw	101	;'e'
   173  0012  3473               	retlw	115	;'s'
   174  0013  3474               	retlw	116	;'t'
   175  0014  3400               	retlw	0
   176                           psect	strings
   177                           	file	"/tmp/cgt8JFUji"
   178                           	line	#
   179                           psect cinit,class=CODE,delta=2
   180                           global start_initialization
   181  0380                     start_initialization:
   182                           
   183                           psect	bssBANK0,class=BANK0,space=1
   184                           global __pbssBANK0
   185  0034                     __pbssBANK0:
   186  0034                     _count:
   187  0034                            ds      4
   188                           
   189  0038                     _start:
   190  0038                            ds      4
   191                           
   192  003C                     _stop:
   193  003C                            ds      4
   194                           
   195  0040                     _clock_t:
   196  0040                            ds      2
   197                           
   198  0042                     _lastMotor:
   199  0042                            ds      2
   200                           
   201  0044                     _ticks:
   202  0044                            ds      2
   203                           
   204                           psect clrtext,class=CODE,delta=2
   205                           global clear_ram
   206                           ;	Called with FSR containing the base address, and
   207                           ;	W with the last address+1
   208  0361                     clear_ram:
   209  0361  0064               	clrwdt			;clear the watchdog before getting into this loop
   210  0362                     clrloop:
   211  0362  0180               	clrf	indf		;clear RAM location pointed to by FSR
   212  0363  0A84               	incf	fsr,f		;increment pointer
   213  0364  0604               	xorwf	fsr,w		;XOR with final address
   214  0365  1903               	btfsc	status,2	;have we reached the end yet?
   215  0366  3400               	retlw	0		;all done for this memory range, return
   216  0367  0604               	xorwf	fsr,w		;XOR again to restore value
   217  0368  2B62               	goto	clrloop		;do the next byte
   218                           
   219                           ; Clear objects allocated to BANK0
   220                           psect cinit,class=CODE,delta=2
   221  0380  1383               	bcf	status, 7	;select IRP bank0
   222  0381  3034               	movlw	low(__pbssBANK0)
   223  0382  0084               	movwf	fsr
   224  0383  3046               	movlw	low((__pbssBANK0)+012h)
   225  0384  120A  118A  2361   	fcall	clear_ram
              120A  118A         
   226                           psect cinit,class=CODE,delta=2
   227                           global end_of_initialization
   228                           
   229                           ;End of C runtime variable initialization code
   230                           
   231  0389                     end_of_initialization:
   232  0389  0183               clrf status
   233  038A  120A  118A  2EFF   ljmp _main	;jump to C main() function
   234                           psect	cstackCOMMON,class=COMMON,space=1
   235                           global __pcstackCOMMON
   236  0070                     __pcstackCOMMON:
   237                           	global	?_lcdCountdown
   238  0070                     ?_lcdCountdown:	; 0 bytes @ 0x0
   239                           	global	?_lcd_goto
   240  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   241                           	global	?_lcd_puts
   242  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   243                           	global	?_lcd_putch
   244  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   245                           	global	?_lcd_init
   246  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   247                           	global	?__delay_ms
   248  0070                     ?__delay_ms:	; 0 bytes @ 0x0
   249                           	global	?_controlMotor
   250  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   251                           	global	?_doDelay
   252  0070                     ?_doDelay:	; 0 bytes @ 0x0
   253                           	global	?_ADCInit
   254  0070                     ?_ADCInit:	; 0 bytes @ 0x0
   255                           	global	?_lcd_write
   256  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   257                           	global	??_lcd_write
   258  0070                     ??_lcd_write:	; 0 bytes @ 0x0
   259                           	global	?_lcd_clear
   260  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   261                           	global	?_searchTrack
   262  0070                     ?_searchTrack:	; 2 bytes @ 0x0
   263                           	global	?_ADCRead
   264  0070                     ?_ADCRead:	; 2 bytes @ 0x0
   265                           	global	?_main
   266  0070                     ?_main:	; 2 bytes @ 0x0
   267                           	global	?___ftpack
   268  0070                     ?___ftpack:	; 3 bytes @ 0x0
   269                           	global	__delay_ms@ms
   270  0070                     __delay_ms@ms:	; 2 bytes @ 0x0
   271                           	global	controlMotor@Leftpt
   272  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   273                           	global	ADCInit@ADC_Channel
   274  0070                     ADCInit@ADC_Channel:	; 2 bytes @ 0x0
   275                           	global	___ftpack@arg
   276  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   277  0070                     	ds	1
   278                           	global	lcd_write@c
   279  0071                     lcd_write@c:	; 1 bytes @ 0x1
   280  0071                     	ds	1
   281                           	global	??_lcd_goto
   282  0072                     ??_lcd_goto:	; 0 bytes @ 0x2
   283                           	global	??_lcd_puts
   284  0072                     ??_lcd_puts:	; 0 bytes @ 0x2
   285                           	global	??_lcd_putch
   286  0072                     ??_lcd_putch:	; 0 bytes @ 0x2
   287                           	global	??__delay_ms
   288  0072                     ??__delay_ms:	; 0 bytes @ 0x2
   289                           	global	??_ADCInit
   290  0072                     ??_ADCInit:	; 0 bytes @ 0x2
   291                           	global	??_ADCRead
   292  0072                     ??_ADCRead:	; 0 bytes @ 0x2
   293                           	global	??_lcd_clear
   294  0072                     ??_lcd_clear:	; 0 bytes @ 0x2
   295                           	global	lcd_putch@c
   296  0072                     lcd_putch@c:	; 1 bytes @ 0x2
   297                           	global	lcd_goto@pos
   298  0072                     lcd_goto@pos:	; 1 bytes @ 0x2
   299                           	global	controlMotor@Rightpt
   300  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   301  0072                     	ds	1
   302                           	global	??_lcdCountdown
   303  0073                     ??_lcdCountdown:	; 0 bytes @ 0x3
   304                           	global	__delay_ms@i
   305  0073                     __delay_ms@i:	; 1 bytes @ 0x3
   306                           	global	lcdCountdown@t
   307  0073                     lcdCountdown@t:	; 1 bytes @ 0x3
   308                           	global	lcd_puts@s
   309  0073                     lcd_puts@s:	; 1 bytes @ 0x3
   310                           	global	___ftpack@exp
   311  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   312  0073                     	ds	1
   313                           	global	??_lcd_init
   314  0074                     ??_lcd_init:	; 0 bytes @ 0x4
   315                           	global	??_controlMotor
   316  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   317                           	global	??_searchTrack
   318  0074                     ??_searchTrack:	; 0 bytes @ 0x4
   319                           	global	__delay_ms@us
   320  0074                     __delay_ms@us:	; 1 bytes @ 0x4
   321                           	global	___ftpack@sign
   322  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   323  0074                     	ds	1
   324                           	global	??___ftpack
   325  0075                     ??___ftpack:	; 0 bytes @ 0x5
   326                           	global	??_doDelay
   327  0075                     ??_doDelay:	; 0 bytes @ 0x5
   328  0075                     	ds	1
   329                           	global	ADCRead@ch
   330  0076                     ADCRead@ch:	; 1 bytes @ 0x6
   331                           	global	lcd_init@init_value
   332  0076                     lcd_init@init_value:	; 1 bytes @ 0x6
   333  0076                     	ds	2
   334                           	global	?___ftge
   335  0078                     ?___ftge:	; 1 bit 
   336                           	global	___ftge@ff1
   337  0078                     ___ftge@ff1:	; 3 bytes @ 0x8
   338  0078                     	ds	3
   339                           	global	___ftge@ff2
   340  007B                     ___ftge@ff2:	; 3 bytes @ 0xB
   341  007B                     	ds	3
   342                           psect	cstackBANK0,class=BANK0,space=1
   343                           global __pcstackBANK0
   344  0020                     __pcstackBANK0:
   345                           	global	??___ftge
   346  0020                     ??___ftge:	; 0 bytes @ 0x0
   347  0020                     	ds	6
   348                           	global	?___awtoft
   349  0026                     ?___awtoft:	; 3 bytes @ 0x6
   350                           	global	___awtoft@c
   351  0026                     ___awtoft@c:	; 2 bytes @ 0x6
   352  0026                     	ds	3
   353                           	global	??___awtoft
   354  0029                     ??___awtoft:	; 0 bytes @ 0x9
   355  0029                     	ds	2
   356                           	global	___awtoft@sign
   357  002B                     ___awtoft@sign:	; 1 bytes @ 0xB
   358  002B                     	ds	1
   359                           	global	??_main
   360  002C                     ??_main:	; 0 bytes @ 0xC
   361  002C                     	ds	2
   362                           	global	main@leftpt
   363  002E                     main@leftpt:	; 2 bytes @ 0xE
   364  002E                     	ds	2
   365                           	global	main@rightpt
   366  0030                     main@rightpt:	; 2 bytes @ 0x10
   367  0030                     	ds	2
   368                           	global	main@read
   369  0032                     main@read:	; 2 bytes @ 0x12
   370  0032                     	ds	2
   371 ;;Data sizes: Strings 12, constant 0, data 0, bss 18, persistent 0 stack 0
   372 ;;Auto spaces:   Size  Autos    Used
   373 ;; COMMON          14     14      14
   374 ;; BANK0           80     20      38
   375 ;; BANK1           80      0       0
   376 ;; BANK3           96      0       0
   377 ;; BANK2           80      0       0
   378                           
   379 ;;
   380 ;; Pointer list with targets:
   381                           
   382 ;; ?___ftpack	float  size(1) Largest target is 0
   383 ;;
   384 ;; ?___awtoft	float  size(1) Largest target is 0
   385 ;;
   386 ;; ?_ADCRead	unsigned int  size(1) Largest target is 0
   387 ;;
   388 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 7
   389 ;;		 -> STR_2(CODE[5]), STR_1(CODE[7]), 
   390 ;;
   391                           
   392                           
   393 ;;
   394 ;; Critical Paths under _main in COMMON
   395 ;;
   396 ;;   _main->___ftge
   397 ;;   _doDelay->__delay_ms
   398 ;;   _lcd_init->_lcd_clear
   399 ;;   _lcdCountdown->_lcd_goto
   400 ;;   _lcdCountdown->_lcd_putch
   401 ;;   _lcd_clear->_lcd_write
   402 ;;   _lcd_putch->_lcd_write
   403 ;;   _lcd_puts->_lcd_write
   404 ;;   _lcd_goto->_lcd_write
   405 ;;   ___awtoft->___ftge
   406 ;;   _searchTrack->_controlMotor
   407 ;;   ___ftge->___ftpack
   408 ;;
   409 ;; Critical Paths under _main in BANK0
   410 ;;
   411 ;;   _main->___awtoft
   412 ;;   ___awtoft->___ftge
   413 ;;
   414 ;; Critical Paths under _main in BANK1
   415 ;;
   416 ;;   None.
   417 ;;
   418 ;; Critical Paths under _main in BANK3
   419 ;;
   420 ;;   None.
   421 ;;
   422 ;; Critical Paths under _main in BANK2
   423 ;;
   424 ;;   None.
   425                           
   426 ;;
   427 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   428 ;;
   429                           
   430 ;;
   431 ;;Call Graph Tables:
   432 ;;
   433 ;; ---------------------------------------------------------------------------------
   434 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   435 ;; ---------------------------------------------------------------------------------
   436 ;; (0) _main                                                 8     8      0    1415
   437 ;;                                             12 BANK0      8     8      0
   438 ;;                          __delay_ms
   439 ;;                           _lcd_init
   440 ;;                           _lcd_puts
   441 ;;                            _doDelay
   442 ;;                            _ADCInit
   443 ;;                            _ADCRead
   444 ;;                           ___awtoft
   445 ;;                             ___ftge
   446 ;;                        _searchTrack
   447 ;;                       _controlMotor
   448 ;; ---------------------------------------------------------------------------------
   449 ;; (1) _doDelay                                              0     0      0     377
   450 ;;                       _lcdCountdown
   451 ;;                          __delay_ms
   452 ;;                           _lcd_goto
   453 ;;                           _lcd_puts
   454 ;; ---------------------------------------------------------------------------------
   455 ;; (1) _lcd_init                                             3     3      0     111
   456 ;;                                              4 COMMON     3     3      0
   457 ;;                          _lcd_write
   458 ;;                          _lcd_clear
   459 ;; ---------------------------------------------------------------------------------
   460 ;; (2) _lcdCountdown                                         1     1      0     154
   461 ;;                                              3 COMMON     1     1      0
   462 ;;                           _lcd_goto
   463 ;;                          _lcd_putch
   464 ;; ---------------------------------------------------------------------------------
   465 ;; (2) _lcd_clear                                            2     2      0      44
   466 ;;                                              2 COMMON     2     2      0
   467 ;;                          _lcd_write
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (3) _lcd_putch                                            1     1      0      66
   470 ;;                                              2 COMMON     1     1      0
   471 ;;                          _lcd_write
   472 ;; ---------------------------------------------------------------------------------
   473 ;; (2) _lcd_puts                                             2     2      0      89
   474 ;;                                              2 COMMON     2     2      0
   475 ;;                          _lcd_write
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (2) _lcd_goto                                             1     1      0      66
   478 ;;                                              2 COMMON     1     1      0
   479 ;;                          _lcd_write
   480 ;; ---------------------------------------------------------------------------------
   481 ;; (1) ___awtoft                                             6     3      3     300
   482 ;;                                              6 BANK0      6     3      3
   483 ;;                           ___ftpack
   484 ;;                             ___ftge (ARG)
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (3) _lcd_write                                            2     2      0      44
   487 ;;                                              0 COMMON     2     2      0
   488 ;; ---------------------------------------------------------------------------------
   489 ;; (1) _searchTrack                                          0     0      0      44
   490 ;;                       _controlMotor
   491 ;; ---------------------------------------------------------------------------------
   492 ;; (1) ___ftge                                              12     6      6     136
   493 ;;                                              8 COMMON     6     0      6
   494 ;;                                              0 BANK0      6     6      0
   495 ;;                           ___ftpack (ARG)
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (2) ___ftpack                                             8     3      5     209
   498 ;;                                              0 COMMON     8     3      5
   499 ;; ---------------------------------------------------------------------------------
   500 ;; (1) _ADCRead                                              7     5      2      22
   501 ;;                                              0 COMMON     7     5      2
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (1) _ADCInit                                              2     0      2      88
   504 ;;                                              0 COMMON     2     0      2
   505 ;; ---------------------------------------------------------------------------------
   506 ;; (1) _controlMotor                                         4     0      4      44
   507 ;;                                              0 COMMON     4     0      4
   508 ;; ---------------------------------------------------------------------------------
   509 ;; (2) __delay_ms                                            5     3      2      68
   510 ;;                                              0 COMMON     5     3      2
   511 ;; ---------------------------------------------------------------------------------
   512 ;; Estimated maximum stack depth 3
   513 ;; ---------------------------------------------------------------------------------
   514                           
   515 ;; Call Graph Graphs:
   516                           
   517 ;; _main (ROOT)
   518 ;;   __delay_ms
   519 ;;   _lcd_init
   520 ;;     _lcd_write
   521 ;;     _lcd_clear
   522 ;;       _lcd_write
   523 ;;   _lcd_puts
   524 ;;     _lcd_write
   525 ;;   _doDelay
   526 ;;     _lcdCountdown
   527 ;;       _lcd_goto
   528 ;;         _lcd_write
   529 ;;       _lcd_putch
   530 ;;         _lcd_write
   531 ;;     __delay_ms
   532 ;;     _lcd_goto
   533 ;;       _lcd_write
   534 ;;     _lcd_puts
   535 ;;       _lcd_write
   536 ;;   _ADCInit
   537 ;;   _ADCRead
   538 ;;   ___awtoft
   539 ;;     ___ftpack
   540 ;;     ___ftge (ARG)
   541 ;;       ___ftpack (ARG)
   542 ;;   ___ftge
   543 ;;     ___ftpack (ARG)
   544 ;;   _searchTrack
   545 ;;     _controlMotor
   546 ;;   _controlMotor
   547 ;;
   548                           
   549 ;; Address spaces:
   550                           
   551 ;;Name               Size   Autos  Total    Cost      Usage
   552 ;;BITCOMMON            E      0       0       0        0.0%
   553 ;;EEDATA             100      0       0       0        0.0%
   554 ;;NULL                 0      0       0       0        0.0%
   555 ;;CODE                 0      0       0       0        0.0%
   556 ;;COMMON               E      E       E       1      100.0%
   557 ;;BITSFR0              0      0       0       1        0.0%
   558 ;;SFR0                 0      0       0       1        0.0%
   559 ;;BITSFR1              0      0       0       2        0.0%
   560 ;;SFR1                 0      0       0       2        0.0%
   561 ;;STACK                0      0       4       2        0.0%
   562 ;;BITBANK0            50      0       0       3        0.0%
   563 ;;BANK0               50     14      26       4       47.5%
   564 ;;BITSFR3              0      0       0       4        0.0%
   565 ;;SFR3                 0      0       0       4        0.0%
   566 ;;BITBANK1            50      0       0       5        0.0%
   567 ;;BITSFR2              0      0       0       5        0.0%
   568 ;;SFR2                 0      0       0       5        0.0%
   569 ;;BANK1               50      0       0       6        0.0%
   570 ;;BITBANK3            60      0       0       7        0.0%
   571 ;;BANK3               60      0       0       8        0.0%
   572 ;;BANK2               50      0       0       9        0.0%
   573 ;;ABS                  0      0      34      10        0.0%
   574 ;;BITBANK2            50      0       0      11        0.0%
   575 ;;DATA                 0      0      38      12        0.0%
   576                           
   577                           	global	_main
   578                           psect	maintext,global,class=CODE,delta=2
   579                           global __pmaintext
   580  06FF                     __pmaintext:
   581                           
   582 ;; *************** function _main *****************
   583 ;; Defined at:
   584 ;;		line 314 in file "newmain.c"
   585 ;; Parameters:    Size  Location     Type
   586 ;;		None
   587 ;; Auto vars:     Size  Location     Type
   588 ;;  read            2   18[BANK0 ] int 
   589 ;;  rightpt         2   16[BANK0 ] int 
   590 ;;  leftpt          2   14[BANK0 ] int 
   591 ;; Return value:  Size  Location     Type
   592 ;;                  2  1563[COMMON] int 
   593 ;; Registers used:
   594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   595 ;; Tracked objects:
   596 ;;		On entry : 17F/0
   597 ;;		On exit  : 0/0
   598 ;;		Unchanged: 0/0
   599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   600 ;;      Params:         0       0       0       0       0
   601 ;;      Locals:         0       6       0       0       0
   602 ;;      Temps:          0       2       0       0       0
   603 ;;      Totals:         0       8       0       0       0
   604 ;;Total ram usage:        8 bytes
   605 ;; Hardware stack levels required when called:    4
   606 ;; This function calls:
   607 ;;		__delay_ms
   608 ;;		_lcd_init
   609 ;;		_lcd_puts
   610 ;;		_doDelay
   611 ;;		_ADCInit
   612 ;;		_ADCRead
   613 ;;		___awtoft
   614 ;;		___ftge
   615 ;;		_searchTrack
   616 ;;		_controlMotor
   617 ;; This function is called by:
   618 ;;		Startup code after reset
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           psect	maintext
   622                           	file	"newmain.c"
   623                           	line	314
   624                           	global	__size_of_main
   625  0101                     	__size_of_main	equ	__end_of_main-_main
   626                           	
   627  06FF                     _main:	
   628                           	opt	stack 4
   629                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   630                           	line	317
   631                           	
   632  06FF                     l6472:	
   633                           ;newmain.c: 317: TRISB = 0x00;
   634  06FF  1683               	bsf	status, 5	;RP0=1, select bank1
   635  0700  1303               	bcf	status, 6	;RP1=0, select bank1
   636  0701  0186               	clrf	(134)^080h	;volatile
   637                           	line	318
   638                           ;newmain.c: 318: TRISC = 0x00;
   639  0702  0187               	clrf	(135)^080h	;volatile
   640                           	line	320
   641                           ;newmain.c: 320: TRISE = 0X00;
   642  0703  0189               	clrf	(137)^080h	;volatile
   643                           	line	322
   644                           	
   645  0704                     l6474:	
   646                           ;newmain.c: 322: _delay_ms(1000);
   647  0704  30E8               	movlw	low(03E8h)
   648  0705  00F0               	movwf	(?__delay_ms)
   649  0706  3003               	movlw	high(03E8h)
   650  0707  00F1               	movwf	((?__delay_ms))+1
   651  0708  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
   652                           	line	324
   653                           	
   654  070D                     l6476:	
   655                           ;newmain.c: 324: lcd_init();
   656  070D  120A  118A  24F0   	fcall	_lcd_init
              120A  118A         
   657                           	line	328
   658                           	
   659  0712                     l6478:	
   660                           ;newmain.c: 328: lcd_puts("test");
   661  0712  3008               	movlw	((STR_2-__stringbase))&0ffh
   662  0713  120A  118A  23EA   	fcall	_lcd_puts
              120A  118A         
   663                           	line	329
   664                           	
   665  0718                     l6480:	
   666                           ;newmain.c: 329: _delay_ms(5000);
   667  0718  3088               	movlw	low(01388h)
   668  0719  00F0               	movwf	(?__delay_ms)
   669  071A  3013               	movlw	high(01388h)
   670  071B  00F1               	movwf	((?__delay_ms))+1
   671  071C  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
   672  0721  2F22               	goto	l6482
   673                           	line	331
   674                           ;newmain.c: 331: while (1)
   675                           	
   676  0722                     l1564:	
   677                           	line	333
   678                           	
   679  0722                     l6482:	
   680                           ;newmain.c: 332: {
   681                           ;newmain.c: 333: doDelay();
   682  0722  120A  118A  2631   	fcall	_doDelay
              120A  118A         
   683  0727  2F22               	goto	l6482
   684                           	line	334
   685                           	
   686  0728                     l1565:	
   687                           	line	331
   688  0728  2F22               	goto	l6482
   689                           	
   690  0729                     l1566:	
   691                           	line	336
   692                           	
   693  0729                     l6484:	
   694                           ;newmain.c: 334: }
   695                           ;newmain.c: 336: ADCInit (0);
   696  0729  3000               	movlw	low(0)
   697  072A  00F0               	movwf	(?_ADCInit)
   698  072B  3000               	movlw	high(0)
   699  072C  00F1               	movwf	((?_ADCInit))+1
   700  072D  120A  118A  24BD   	fcall	_ADCInit
              120A  118A         
   701                           	line	337
   702                           ;newmain.c: 337: ADCInit (1);
   703  0732  3001               	movlw	low(01h)
   704  0733  00F0               	movwf	(?_ADCInit)
   705  0734  3000               	movlw	high(01h)
   706  0735  00F1               	movwf	((?_ADCInit))+1
   707  0736  120A  118A  24BD   	fcall	_ADCInit
              120A  118A         
   708                           	line	340
   709                           ;newmain.c: 338: int read, leftpt, rightpt;
   710                           ;newmain.c: 340: while (1)
   711                           	
   712  073B                     l1567:	
   713                           	line	344
   714                           ;newmain.c: 341: {
   715                           ;newmain.c: 344: read = ADCRead(0);
   716  073B  3000               	movlw	(0)
   717  073C  120A  118A  2460   	fcall	_ADCRead
              120A  118A         
   718  0741  0871               	movf	(1+(?_ADCRead)),w
   719  0742  1283               	bcf	status, 5	;RP0=0, select bank0
   720  0743  1303               	bcf	status, 6	;RP1=0, select bank0
   721  0744  01B3               	clrf	(main@read+1)
   722  0745  07B3               	addwf	(main@read+1)
   723  0746  0870               	movf	(0+(?_ADCRead)),w
   724  0747  01B2               	clrf	(main@read)
   725  0748  07B2               	addwf	(main@read)
   726                           
   727                           	line	345
   728                           ;newmain.c: 345: leftpt = (read > 0.9) ? 1 : 0;
   729  0749  3066               	movlw	0x66
   730  074A  00F8               	movwf	(?___ftge)
   731  074B  3066               	movlw	0x66
   732  074C  00F9               	movwf	(?___ftge+1)
   733  074D  303F               	movlw	0x3f
   734  074E  00FA               	movwf	(?___ftge+2)
   735  074F  0833               	movf	(main@read+1),w
   736  0750  01A7               	clrf	(?___awtoft+1)
   737  0751  07A7               	addwf	(?___awtoft+1)
   738  0752  0832               	movf	(main@read),w
   739  0753  01A6               	clrf	(?___awtoft)
   740  0754  07A6               	addwf	(?___awtoft)
   741                           
   742  0755  120A  118A  2434   	fcall	___awtoft
              120A  118A         
   743  075A  1283               	bcf	status, 5	;RP0=0, select bank0
   744  075B  1303               	bcf	status, 6	;RP1=0, select bank0
   745  075C  0826               	movf	(0+(?___awtoft)),w
   746  075D  00FB               	movwf	0+(?___ftge)+03h
   747  075E  0827               	movf	(1+(?___awtoft)),w
   748  075F  00FC               	movwf	1+(?___ftge)+03h
   749  0760  0828               	movf	(2+(?___awtoft)),w
   750  0761  00FD               	movwf	2+(?___ftge)+03h
   751  0762  120A  118A  2546   	fcall	___ftge
              120A  118A         
   752  0767  3000               	movlw	0
   753  0768  1C03               	btfss	status,0
   754  0769  3001               	movlw	1
   755  076A  1283               	bcf	status, 5	;RP0=0, select bank0
   756  076B  1303               	bcf	status, 6	;RP1=0, select bank0
   757  076C  00AC               	movwf	(??_main+0)+0
   758  076D  01AD               	clrf	(??_main+0)+0+1
   759  076E  082C               	movf	0+(??_main+0)+0,w
   760  076F  00AE               	movwf	(main@leftpt)
   761  0770  082D               	movf	1+(??_main+0)+0,w
   762  0771  00AF               	movwf	(main@leftpt+1)
   763                           	line	348
   764                           ;newmain.c: 348: read = ADCRead(1);
   765  0772  3001               	movlw	(01h)
   766  0773  120A  118A  2460   	fcall	_ADCRead
              120A  118A         
   767  0778  0871               	movf	(1+(?_ADCRead)),w
   768  0779  1283               	bcf	status, 5	;RP0=0, select bank0
   769  077A  1303               	bcf	status, 6	;RP1=0, select bank0
   770  077B  01B3               	clrf	(main@read+1)
   771  077C  07B3               	addwf	(main@read+1)
   772  077D  0870               	movf	(0+(?_ADCRead)),w
   773  077E  01B2               	clrf	(main@read)
   774  077F  07B2               	addwf	(main@read)
   775                           
   776                           	line	349
   777                           ;newmain.c: 349: rightpt = (read > 0.9) ? 1 : 0;
   778  0780  3066               	movlw	0x66
   779  0781  00F8               	movwf	(?___ftge)
   780  0782  3066               	movlw	0x66
   781  0783  00F9               	movwf	(?___ftge+1)
   782  0784  303F               	movlw	0x3f
   783  0785  00FA               	movwf	(?___ftge+2)
   784  0786  0833               	movf	(main@read+1),w
   785  0787  01A7               	clrf	(?___awtoft+1)
   786  0788  07A7               	addwf	(?___awtoft+1)
   787  0789  0832               	movf	(main@read),w
   788  078A  01A6               	clrf	(?___awtoft)
   789  078B  07A6               	addwf	(?___awtoft)
   790                           
   791  078C  120A  118A  2434   	fcall	___awtoft
              120A  118A         
   792  0791  1283               	bcf	status, 5	;RP0=0, select bank0
   793  0792  1303               	bcf	status, 6	;RP1=0, select bank0
   794  0793  0826               	movf	(0+(?___awtoft)),w
   795  0794  00FB               	movwf	0+(?___ftge)+03h
   796  0795  0827               	movf	(1+(?___awtoft)),w
   797  0796  00FC               	movwf	1+(?___ftge)+03h
   798  0797  0828               	movf	(2+(?___awtoft)),w
   799  0798  00FD               	movwf	2+(?___ftge)+03h
   800  0799  120A  118A  2546   	fcall	___ftge
              120A  118A         
   801  079E  3000               	movlw	0
   802  079F  1C03               	btfss	status,0
   803  07A0  3001               	movlw	1
   804  07A1  1283               	bcf	status, 5	;RP0=0, select bank0
   805  07A2  1303               	bcf	status, 6	;RP1=0, select bank0
   806  07A3  00AC               	movwf	(??_main+0)+0
   807  07A4  01AD               	clrf	(??_main+0)+0+1
   808  07A5  082C               	movf	0+(??_main+0)+0,w
   809  07A6  00B0               	movwf	(main@rightpt)
   810  07A7  082D               	movf	1+(??_main+0)+0,w
   811  07A8  00B1               	movwf	(main@rightpt+1)
   812                           	line	351
   813                           	
   814  07A9                     l6486:	
   815                           ;newmain.c: 351: if((leftpt==0) && (rightpt==0))
   816  07A9  082F               	movf	((main@leftpt+1)),w
   817  07AA  042E               	iorwf	((main@leftpt)),w
   818  07AB  1D03               	skipz
   819  07AC  2FAE               	goto	u3251
   820  07AD  2FAF               	goto	u3250
   821  07AE                     u3251:
   822  07AE  2FD1               	goto	l1568
   823  07AF                     u3250:
   824                           	
   825  07AF                     l6488:	
   826  07AF  0831               	movf	((main@rightpt+1)),w
   827  07B0  0430               	iorwf	((main@rightpt)),w
   828  07B1  1D03               	skipz
   829  07B2  2FB4               	goto	u3261
   830  07B3  2FB5               	goto	u3260
   831  07B4                     u3261:
   832  07B4  2FD1               	goto	l1568
   833  07B5                     u3260:
   834                           	line	353
   835                           	
   836  07B5                     l6490:	
   837                           ;newmain.c: 352: {
   838                           ;newmain.c: 353: RC3 = 1;
   839  07B5  1587               	bsf	(59/8),(59)&7
   840                           	line	354
   841                           	
   842  07B6                     l6492:	
   843                           ;newmain.c: 354: _delay_ms(3000);
   844  07B6  30B8               	movlw	low(0BB8h)
   845  07B7  00F0               	movwf	(?__delay_ms)
   846  07B8  300B               	movlw	high(0BB8h)
   847  07B9  00F1               	movwf	((?__delay_ms))+1
   848  07BA  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
   849                           	line	355
   850                           	
   851  07BF                     l6494:	
   852                           ;newmain.c: 355: RC3 = 0;
   853  07BF  1283               	bcf	status, 5	;RP0=0, select bank0
   854  07C0  1303               	bcf	status, 6	;RP1=0, select bank0
   855  07C1  1187               	bcf	(59/8),(59)&7
   856                           	line	356
   857                           ;newmain.c: 356: _delay_ms(1000);
   858  07C2  30E8               	movlw	low(03E8h)
   859  07C3  00F0               	movwf	(?__delay_ms)
   860  07C4  3003               	movlw	high(03E8h)
   861  07C5  00F1               	movwf	((?__delay_ms))+1
   862  07C6  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
   863                           	line	357
   864                           ;newmain.c: 357: searchTrack();
   865  07CB  120A  118A  248D   	fcall	_searchTrack
              120A  118A         
   866                           	line	358
   867                           ;newmain.c: 358: }
   868  07D0  2F3B               	goto	l1567
   869                           	line	359
   870                           	
   871  07D1                     l1568:	
   872                           	line	361
   873                           ;newmain.c: 359: else
   874                           ;newmain.c: 360: {
   875                           ;newmain.c: 361: RC3 = 1;
   876  07D1  1587               	bsf	(59/8),(59)&7
   877                           	line	362
   878                           	
   879  07D2                     l6496:	
   880                           ;newmain.c: 362: _delay_ms(1000);
   881  07D2  30E8               	movlw	low(03E8h)
   882  07D3  00F0               	movwf	(?__delay_ms)
   883  07D4  3003               	movlw	high(03E8h)
   884  07D5  00F1               	movwf	((?__delay_ms))+1
   885  07D6  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
   886                           	line	363
   887                           	
   888  07DB                     l6498:	
   889                           ;newmain.c: 363: RC3 = 0;
   890  07DB  1283               	bcf	status, 5	;RP0=0, select bank0
   891  07DC  1303               	bcf	status, 6	;RP1=0, select bank0
   892  07DD  1187               	bcf	(59/8),(59)&7
   893                           	line	364
   894                           ;newmain.c: 364: _delay_ms(1000);
   895  07DE  30E8               	movlw	low(03E8h)
   896  07DF  00F0               	movwf	(?__delay_ms)
   897  07E0  3003               	movlw	high(03E8h)
   898  07E1  00F1               	movwf	((?__delay_ms))+1
   899  07E2  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
   900                           	line	365
   901                           ;newmain.c: 365: controlMotor(leftpt, rightpt);
   902  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
   903  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
   904  07E9  082F               	movf	(main@leftpt+1),w
   905  07EA  01F1               	clrf	(?_controlMotor+1)
   906  07EB  07F1               	addwf	(?_controlMotor+1)
   907  07EC  082E               	movf	(main@leftpt),w
   908  07ED  01F0               	clrf	(?_controlMotor)
   909  07EE  07F0               	addwf	(?_controlMotor)
   910                           
   911  07EF  0831               	movf	(main@rightpt+1),w
   912  07F0  01F3               	clrf	1+(?_controlMotor)+02h
   913  07F1  07F3               	addwf	1+(?_controlMotor)+02h
   914  07F2  0830               	movf	(main@rightpt),w
   915  07F3  01F2               	clrf	0+(?_controlMotor)+02h
   916  07F4  07F2               	addwf	0+(?_controlMotor)+02h
   917                           
   918  07F5  120A  118A  23C8   	fcall	_controlMotor
              120A  118A         
   919  07FA  2F3B               	goto	l1567
   920                           	line	366
   921                           	
   922  07FB                     l1569:	
   923  07FB  2F3B               	goto	l1567
   924                           	line	367
   925                           	
   926  07FC                     l1570:	
   927                           	line	340
   928  07FC  2F3B               	goto	l1567
   929                           	
   930  07FD                     l1571:	
   931                           	line	369
   932                           	
   933  07FD                     l1572:	
   934                           	global	start
   935  07FD  120A  118A  2800   	ljmp	start
   936                           	opt stack 0
   937                           GLOBAL	__end_of_main
   938  0800                     	__end_of_main:
   939 ;; =============== function _main ends ============
   940                           
   941                           	signat	_main,90
   942                           	global	_doDelay
   943                           psect	text426,local,class=CODE,delta=2
   944                           global __ptext426
   945  0631                     __ptext426:
   946                           
   947 ;; *************** function _doDelay *****************
   948 ;; Defined at:
   949 ;;		line 167 in file "newmain.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;		None
   954 ;; Return value:  Size  Location     Type
   955 ;;		None               void
   956 ;; Registers used:
   957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   963 ;;      Params:         0       0       0       0       0
   964 ;;      Locals:         0       0       0       0       0
   965 ;;      Temps:          0       0       0       0       0
   966 ;;      Totals:         0       0       0       0       0
   967 ;;Total ram usage:        0 bytes
   968 ;; Hardware stack levels used:    1
   969 ;; Hardware stack levels required when called:    3
   970 ;; This function calls:
   971 ;;		_lcdCountdown
   972 ;;		__delay_ms
   973 ;;		_lcd_goto
   974 ;;		_lcd_puts
   975 ;; This function is called by:
   976 ;;		_main
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           psect	text426
   980                           	file	"newmain.c"
   981                           	line	167
   982                           	global	__size_of_doDelay
   983  00CE                     	__size_of_doDelay	equ	__end_of_doDelay-_doDelay
   984                           	
   985  0631                     _doDelay:	
   986                           	opt	stack 4
   987                           ; Regs used in _doDelay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   988                           	line	168
   989                           	
   990  0631                     l6450:	
   991                           ;newmain.c: 168: RC3 = 0;
   992  0631  1283               	bcf	status, 5	;RP0=0, select bank0
   993  0632  1303               	bcf	status, 6	;RP1=0, select bank0
   994  0633  1187               	bcf	(59/8),(59)&7
   995                           	line	169
   996                           ;newmain.c: 169: RC4 = 0;
   997  0634  1207               	bcf	(60/8),(60)&7
   998                           	line	171
   999                           	
  1000  0635                     l6452:	
  1001                           ;newmain.c: 171: lcdCountdown('8');
  1002  0635  3038               	movlw	(038h)
  1003  0636  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1004                           	line	172
  1005                           ;newmain.c: 172: _delay_ms(1000);
  1006  063B  30E8               	movlw	low(03E8h)
  1007  063C  00F0               	movwf	(?__delay_ms)
  1008  063D  3003               	movlw	high(03E8h)
  1009  063E  00F1               	movwf	((?__delay_ms))+1
  1010  063F  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1011                           	line	174
  1012                           ;newmain.c: 174: lcdCountdown('7');
  1013  0644  3037               	movlw	(037h)
  1014  0645  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1015                           	line	175
  1016                           ;newmain.c: 175: _delay_ms(1000);
  1017  064A  30E8               	movlw	low(03E8h)
  1018  064B  00F0               	movwf	(?__delay_ms)
  1019  064C  3003               	movlw	high(03E8h)
  1020  064D  00F1               	movwf	((?__delay_ms))+1
  1021  064E  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1022                           	line	177
  1023                           ;newmain.c: 177: lcdCountdown('6');
  1024  0653  3036               	movlw	(036h)
  1025  0654  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1026                           	line	178
  1027                           ;newmain.c: 178: _delay_ms(1000);
  1028  0659  30E8               	movlw	low(03E8h)
  1029  065A  00F0               	movwf	(?__delay_ms)
  1030  065B  3003               	movlw	high(03E8h)
  1031  065C  00F1               	movwf	((?__delay_ms))+1
  1032  065D  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1033                           	line	180
  1034                           ;newmain.c: 180: lcdCountdown('5');
  1035  0662  3035               	movlw	(035h)
  1036  0663  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1037                           	line	181
  1038                           ;newmain.c: 181: _delay_ms(1000);
  1039  0668  30E8               	movlw	low(03E8h)
  1040  0669  00F0               	movwf	(?__delay_ms)
  1041  066A  3003               	movlw	high(03E8h)
  1042  066B  00F1               	movwf	((?__delay_ms))+1
  1043  066C  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1044                           	line	183
  1045                           ;newmain.c: 183: lcdCountdown('4');
  1046  0671  3034               	movlw	(034h)
  1047  0672  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1048                           	line	184
  1049                           ;newmain.c: 184: _delay_ms(1000);
  1050  0677  30E8               	movlw	low(03E8h)
  1051  0678  00F0               	movwf	(?__delay_ms)
  1052  0679  3003               	movlw	high(03E8h)
  1053  067A  00F1               	movwf	((?__delay_ms))+1
  1054  067B  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1055                           	line	188
  1056                           ;newmain.c: 188: lcdCountdown('3');
  1057  0680  3033               	movlw	(033h)
  1058  0681  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1059                           	line	189
  1060                           	
  1061  0686                     l6454:	
  1062                           ;newmain.c: 189: RC3 = 1;
  1063  0686  1283               	bcf	status, 5	;RP0=0, select bank0
  1064  0687  1303               	bcf	status, 6	;RP1=0, select bank0
  1065  0688  1587               	bsf	(59/8),(59)&7
  1066                           	line	190
  1067                           ;newmain.c: 190: _delay_ms(200);
  1068  0689  30C8               	movlw	low(0C8h)
  1069  068A  00F0               	movwf	(?__delay_ms)
  1070  068B  3000               	movlw	high(0C8h)
  1071  068C  00F1               	movwf	((?__delay_ms))+1
  1072  068D  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1073                           	line	191
  1074                           	
  1075  0692                     l6456:	
  1076                           ;newmain.c: 191: RC3 = 0;
  1077  0692  1283               	bcf	status, 5	;RP0=0, select bank0
  1078  0693  1303               	bcf	status, 6	;RP1=0, select bank0
  1079  0694  1187               	bcf	(59/8),(59)&7
  1080                           	line	192
  1081                           ;newmain.c: 192: _delay_ms(700);
  1082  0695  30BC               	movlw	low(02BCh)
  1083  0696  00F0               	movwf	(?__delay_ms)
  1084  0697  3002               	movlw	high(02BCh)
  1085  0698  00F1               	movwf	((?__delay_ms))+1
  1086  0699  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1087                           	line	194
  1088                           	
  1089  069E                     l6458:	
  1090                           ;newmain.c: 194: RC3 = 1;
  1091  069E  1283               	bcf	status, 5	;RP0=0, select bank0
  1092  069F  1303               	bcf	status, 6	;RP1=0, select bank0
  1093  06A0  1587               	bsf	(59/8),(59)&7
  1094                           	line	195
  1095                           ;newmain.c: 195: _delay_ms(100);
  1096  06A1  3064               	movlw	low(064h)
  1097  06A2  00F0               	movwf	(?__delay_ms)
  1098  06A3  3000               	movlw	high(064h)
  1099  06A4  00F1               	movwf	((?__delay_ms))+1
  1100  06A5  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1101                           	line	196
  1102                           ;newmain.c: 196: lcdCountdown('2');
  1103  06AA  3032               	movlw	(032h)
  1104  06AB  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1105                           	line	197
  1106                           ;newmain.c: 197: _delay_ms(100);
  1107  06B0  3064               	movlw	low(064h)
  1108  06B1  00F0               	movwf	(?__delay_ms)
  1109  06B2  3000               	movlw	high(064h)
  1110  06B3  00F1               	movwf	((?__delay_ms))+1
  1111  06B4  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1112                           	line	198
  1113                           	
  1114  06B9                     l6460:	
  1115                           ;newmain.c: 198: RC3 = 0;
  1116  06B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1117  06BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1118  06BB  1187               	bcf	(59/8),(59)&7
  1119                           	line	199
  1120                           ;newmain.c: 199: _delay_ms(700);
  1121  06BC  30BC               	movlw	low(02BCh)
  1122  06BD  00F0               	movwf	(?__delay_ms)
  1123  06BE  3002               	movlw	high(02BCh)
  1124  06BF  00F1               	movwf	((?__delay_ms))+1
  1125  06C0  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1126                           	line	201
  1127                           	
  1128  06C5                     l6462:	
  1129                           ;newmain.c: 201: RC3 = 1;
  1130  06C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1131  06C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1132  06C7  1587               	bsf	(59/8),(59)&7
  1133                           	line	202
  1134                           ;newmain.c: 202: _delay_ms(200);
  1135  06C8  30C8               	movlw	low(0C8h)
  1136  06C9  00F0               	movwf	(?__delay_ms)
  1137  06CA  3000               	movlw	high(0C8h)
  1138  06CB  00F1               	movwf	((?__delay_ms))+1
  1139  06CC  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1140                           	line	203
  1141                           ;newmain.c: 203: lcdCountdown('1');
  1142  06D1  3031               	movlw	(031h)
  1143  06D2  120A  118A  238D   	fcall	_lcdCountdown
              120A  118A         
  1144                           	line	204
  1145                           	
  1146  06D7                     l6464:	
  1147                           ;newmain.c: 204: RC3 = 0;
  1148  06D7  1283               	bcf	status, 5	;RP0=0, select bank0
  1149  06D8  1303               	bcf	status, 6	;RP1=0, select bank0
  1150  06D9  1187               	bcf	(59/8),(59)&7
  1151                           	line	205
  1152                           ;newmain.c: 205: _delay_ms(700);
  1153  06DA  30BC               	movlw	low(02BCh)
  1154  06DB  00F0               	movwf	(?__delay_ms)
  1155  06DC  3002               	movlw	high(02BCh)
  1156  06DD  00F1               	movwf	((?__delay_ms))+1
  1157  06DE  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1158                           	line	207
  1159                           	
  1160  06E3                     l6466:	
  1161                           ;newmain.c: 207: RC4 = 1;
  1162  06E3  1283               	bcf	status, 5	;RP0=0, select bank0
  1163  06E4  1303               	bcf	status, 6	;RP1=0, select bank0
  1164  06E5  1607               	bsf	(60/8),(60)&7
  1165                           	line	208
  1166                           ;newmain.c: 208: _delay_ms(300);
  1167  06E6  302C               	movlw	low(012Ch)
  1168  06E7  00F0               	movwf	(?__delay_ms)
  1169  06E8  3001               	movlw	high(012Ch)
  1170  06E9  00F1               	movwf	((?__delay_ms))+1
  1171  06EA  120A  118A  240E   	fcall	__delay_ms
              120A  118A         
  1172                           	line	209
  1173                           	
  1174  06EF                     l6468:	
  1175                           ;newmain.c: 209: RC4 = 0;
  1176  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1177  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1178  06F1  1207               	bcf	(60/8),(60)&7
  1179                           	line	211
  1180                           ;newmain.c: 211: lcd_goto(0);
  1181  06F2  3000               	movlw	(0)
  1182  06F3  120A  118A  2374   	fcall	_lcd_goto
              120A  118A         
  1183                           	line	212
  1184                           	
  1185  06F8                     l6470:	
  1186                           ;newmain.c: 212: lcd_puts("Start!");
  1187  06F8  3001               	movlw	((STR_1-__stringbase))&0ffh
  1188  06F9  120A  118A  23EA   	fcall	_lcd_puts
              120A  118A         
  1189                           	line	214
  1190                           	
  1191  06FE                     l1542:	
  1192  06FE  0008               	return
  1193                           	opt stack 0
  1194                           GLOBAL	__end_of_doDelay
  1195  06FF                     	__end_of_doDelay:
  1196 ;; =============== function _doDelay ends ============
  1197                           
  1198                           	signat	_doDelay,88
  1199                           	global	_lcd_init
  1200                           psect	text427,local,class=CODE,delta=2
  1201                           global __ptext427
  1202  04F0                     __ptext427:
  1203                           
  1204 ;; *************** function _lcd_init *****************
  1205 ;; Defined at:
  1206 ;;		line 93 in file "lcd.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  init_value      1    6[COMMON] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;		None               void
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         0       0       0       0       0
  1221 ;;      Locals:         1       0       0       0       0
  1222 ;;      Temps:          2       0       0       0       0
  1223 ;;      Totals:         3       0       0       0       0
  1224 ;;Total ram usage:        3 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    2
  1227 ;; This function calls:
  1228 ;;		_lcd_write
  1229 ;;		_lcd_clear
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           psect	text427
  1235                           	file	"lcd.c"
  1236                           	line	93
  1237                           	global	__size_of_lcd_init
  1238  0056                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1239                           	
  1240  04F0                     _lcd_init:	
  1241                           	opt	stack 5
  1242                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1243                           	line	96
  1244                           	
  1245  04F0                     l6414:	
  1246                           ;lcd.c: 94: char init_value;
  1247                           ;lcd.c: 96: ADCON1 = 0x06;
  1248  04F0  3006               	movlw	(06h)
  1249  04F1  1683               	bsf	status, 5	;RP0=1, select bank1
  1250  04F2  1303               	bcf	status, 6	;RP1=0, select bank1
  1251  04F3  009F               	movwf	(159)^080h	;volatile
  1252                           	line	98
  1253                           ;lcd.c: 98: init_value = 0x3;
  1254  04F4  3003               	movlw	(03h)
  1255  04F5  00F4               	movwf	(??_lcd_init+0)+0
  1256  04F6  0874               	movf	(??_lcd_init+0)+0,w
  1257  04F7  00F6               	movwf	(lcd_init@init_value)
  1258                           	line	99
  1259                           	
  1260  04F8                     l6416:	
  1261                           ;lcd.c: 99: TRISA=0;
  1262  04F8  0185               	clrf	(133)^080h	;volatile
  1263                           	line	100
  1264                           	
  1265  04F9                     l6418:	
  1266                           ;lcd.c: 100: TRISD=0;
  1267  04F9  0188               	clrf	(136)^080h	;volatile
  1268                           	line	101
  1269                           	
  1270  04FA                     l6420:	
  1271                           ;lcd.c: 101: RA3 = 0;
  1272  04FA  1283               	bcf	status, 5	;RP0=0, select bank0
  1273  04FB  1303               	bcf	status, 6	;RP1=0, select bank0
  1274  04FC  1185               	bcf	(43/8),(43)&7
  1275                           	line	102
  1276                           	
  1277  04FD                     l6422:	
  1278                           ;lcd.c: 102: RA1 = 0;
  1279  04FD  1085               	bcf	(41/8),(41)&7
  1280                           	line	103
  1281                           	
  1282  04FE                     l6424:	
  1283                           ;lcd.c: 103: RA2 = 0;
  1284  04FE  1105               	bcf	(42/8),(42)&7
  1285                           	line	105
  1286                           ;lcd.c: 105: _delay((unsigned long)((15)*(4000000/4000.0)));
  1287                           	opt asmopt_off
  1288  04FF  3014               movlw	20
  1289  0500  00F5               movwf	((??_lcd_init+0)+0+1),f
  1290  0501  3079               	movlw	121
  1291  0502  00F4               movwf	((??_lcd_init+0)+0),f
  1292  0503                     u3277:
  1293  0503  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1294  0504  2D03               	goto	u3277
  1295  0505  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1296  0506  2D03               	goto	u3277
  1297  0507  2D08               	nop2
  1298                           opt asmopt_on
  1299                           
  1300                           	line	106
  1301                           ;lcd.c: 106: PORTD = init_value;
  1302  0508  0876               	movf	(lcd_init@init_value),w
  1303  0509  1283               	bcf	status, 5	;RP0=0, select bank0
  1304  050A  1303               	bcf	status, 6	;RP1=0, select bank0
  1305  050B  0088               	movwf	(8)	;volatile
  1306                           	line	107
  1307                           	
  1308  050C                     l6426:	
  1309                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
  1310  050C  1485               	bsf	(41/8),(41)&7
  1311                           	
  1312  050D                     l6428:	
  1313  050D  1085               	bcf	(41/8),(41)&7
  1314                           	line	108
  1315                           ;lcd.c: 108: _delay((unsigned long)((5)*(4000000/4000.0)));
  1316                           	opt asmopt_off
  1317  050E  3007               movlw	7
  1318  050F  00F5               movwf	((??_lcd_init+0)+0+1),f
  1319  0510  307D               	movlw	125
  1320  0511  00F4               movwf	((??_lcd_init+0)+0),f
  1321  0512                     u3287:
  1322  0512  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1323  0513  2D12               	goto	u3287
  1324  0514  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1325  0515  2D12               	goto	u3287
  1326                           opt asmopt_on
  1327                           
  1328                           	line	109
  1329                           	
  1330  0516                     l6430:	
  1331                           ;lcd.c: 109: ((RA1 = 1),(RA1=0));
  1332  0516  1283               	bcf	status, 5	;RP0=0, select bank0
  1333  0517  1303               	bcf	status, 6	;RP1=0, select bank0
  1334  0518  1485               	bsf	(41/8),(41)&7
  1335                           	
  1336  0519                     l6432:	
  1337  0519  1085               	bcf	(41/8),(41)&7
  1338                           	line	110
  1339                           ;lcd.c: 110: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1340                           	opt asmopt_off
  1341  051A  3042               movlw	66
  1342  051B  00F4               movwf	(??_lcd_init+0)+0,f
  1343  051C                     u3297:
  1344  051C  0BF4               decfsz	(??_lcd_init+0)+0,f
  1345  051D  2D1C               	goto	u3297
  1346  051E  0064               	clrwdt
  1347                           opt asmopt_on
  1348                           
  1349                           	line	111
  1350                           	
  1351  051F                     l6434:	
  1352                           ;lcd.c: 111: ((RA1 = 1),(RA1=0));
  1353  051F  1283               	bcf	status, 5	;RP0=0, select bank0
  1354  0520  1303               	bcf	status, 6	;RP1=0, select bank0
  1355  0521  1485               	bsf	(41/8),(41)&7
  1356                           	
  1357  0522                     l6436:	
  1358  0522  1085               	bcf	(41/8),(41)&7
  1359                           	line	112
  1360                           ;lcd.c: 112: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1361                           	opt asmopt_off
  1362  0523  3042               movlw	66
  1363  0524  00F4               movwf	(??_lcd_init+0)+0,f
  1364  0525                     u3307:
  1365  0525  0BF4               decfsz	(??_lcd_init+0)+0,f
  1366  0526  2D25               	goto	u3307
  1367  0527  0064               	clrwdt
  1368                           opt asmopt_on
  1369                           
  1370                           	line	113
  1371                           ;lcd.c: 113: PORTD = 2;
  1372  0528  3002               	movlw	(02h)
  1373  0529  1283               	bcf	status, 5	;RP0=0, select bank0
  1374  052A  1303               	bcf	status, 6	;RP1=0, select bank0
  1375  052B  0088               	movwf	(8)	;volatile
  1376                           	line	114
  1377                           	
  1378  052C                     l6438:	
  1379                           ;lcd.c: 114: ((RA1 = 1),(RA1=0));
  1380  052C  1485               	bsf	(41/8),(41)&7
  1381                           	
  1382  052D                     l6440:	
  1383  052D  1085               	bcf	(41/8),(41)&7
  1384                           	line	116
  1385                           	
  1386  052E                     l6442:	
  1387                           ;lcd.c: 116: lcd_write(0x28);
  1388  052E  3028               	movlw	(028h)
  1389  052F  120A  118A  23AE   	fcall	_lcd_write
              120A  118A         
  1390                           	line	117
  1391                           	
  1392  0534                     l6444:	
  1393                           ;lcd.c: 117: lcd_write(0xF);
  1394  0534  300F               	movlw	(0Fh)
  1395  0535  120A  118A  23AE   	fcall	_lcd_write
              120A  118A         
  1396                           	line	118
  1397                           	
  1398  053A                     l6446:	
  1399                           ;lcd.c: 118: lcd_clear();
  1400  053A  120A  118A  239B   	fcall	_lcd_clear
              120A  118A         
  1401                           	line	119
  1402                           	
  1403  053F                     l6448:	
  1404                           ;lcd.c: 119: lcd_write(0x6);
  1405  053F  3006               	movlw	(06h)
  1406  0540  120A  118A  23AE   	fcall	_lcd_write
              120A  118A         
  1407                           	line	120
  1408                           	
  1409  0545                     l3083:	
  1410  0545  0008               	return
  1411                           	opt stack 0
  1412                           GLOBAL	__end_of_lcd_init
  1413  0546                     	__end_of_lcd_init:
  1414 ;; =============== function _lcd_init ends ============
  1415                           
  1416                           	signat	_lcd_init,88
  1417                           	global	_lcdCountdown
  1418                           psect	text428,local,class=CODE,delta=2
  1419                           global __ptext428
  1420  038D                     __ptext428:
  1421                           
  1422 ;; *************** function _lcdCountdown *****************
  1423 ;; Defined at:
  1424 ;;		line 217 in file "newmain.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  t               1    wreg     unsigned char 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  t               1    3[COMMON] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;		None               void
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0
  1441 ;;      Totals:         1       0       0       0       0
  1442 ;;Total ram usage:        1 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    2
  1445 ;; This function calls:
  1446 ;;		_lcd_goto
  1447 ;;		_lcd_putch
  1448 ;; This function is called by:
  1449 ;;		_doDelay
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           psect	text428
  1453                           	file	"newmain.c"
  1454                           	line	217
  1455                           	global	__size_of_lcdCountdown
  1456  000E                     	__size_of_lcdCountdown	equ	__end_of_lcdCountdown-_lcdCountdown
  1457                           	
  1458  038D                     _lcdCountdown:	
  1459                           	opt	stack 4
  1460                           ; Regs used in _lcdCountdown: [wreg+status,2+status,0+pclath+cstack]
  1461                           ;lcdCountdown@t stored from wreg
  1462  038D  00F3               	movwf	(lcdCountdown@t)
  1463                           	line	218
  1464                           	
  1465  038E                     l6412:	
  1466                           ;newmain.c: 218: lcd_goto(0);
  1467  038E  3000               	movlw	(0)
  1468  038F  120A  118A  2374   	fcall	_lcd_goto
              120A  118A         
  1469                           	line	219
  1470                           ;newmain.c: 219: lcd_putch(t);
  1471  0394  0873               	movf	(lcdCountdown@t),w
  1472  0395  120A  118A  2369   	fcall	_lcd_putch
              120A  118A         
  1473                           	line	220
  1474                           	
  1475  039A                     l1545:	
  1476  039A  0008               	return
  1477                           	opt stack 0
  1478                           GLOBAL	__end_of_lcdCountdown
  1479  039B                     	__end_of_lcdCountdown:
  1480 ;; =============== function _lcdCountdown ends ============
  1481                           
  1482                           	signat	_lcdCountdown,4216
  1483                           	global	_lcd_clear
  1484                           psect	text429,local,class=CODE,delta=2
  1485                           global __ptext429
  1486  039B                     __ptext429:
  1487                           
  1488 ;; *************** function _lcd_clear *****************
  1489 ;; Defined at:
  1490 ;;		line 53 in file "lcd.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;		None               void
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, pclath, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1504 ;;      Params:         0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0
  1506 ;;      Temps:          2       0       0       0       0
  1507 ;;      Totals:         2       0       0       0       0
  1508 ;;Total ram usage:        2 bytes
  1509 ;; Hardware stack levels used:    1
  1510 ;; Hardware stack levels required when called:    1
  1511 ;; This function calls:
  1512 ;;		_lcd_write
  1513 ;; This function is called by:
  1514 ;;		_lcd_init
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           psect	text429
  1518                           	file	"lcd.c"
  1519                           	line	53
  1520                           	global	__size_of_lcd_clear
  1521  0013                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1522                           	
  1523  039B                     _lcd_clear:	
  1524                           	opt	stack 5
  1525                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1526                           	line	54
  1527                           	
  1528  039B                     l6406:	
  1529                           ;lcd.c: 54: RA3 = 0;
  1530  039B  1283               	bcf	status, 5	;RP0=0, select bank0
  1531  039C  1303               	bcf	status, 6	;RP1=0, select bank0
  1532  039D  1185               	bcf	(43/8),(43)&7
  1533                           	line	55
  1534                           	
  1535  039E                     l6408:	
  1536                           ;lcd.c: 55: lcd_write(0x1);
  1537  039E  3001               	movlw	(01h)
  1538  039F  120A  118A  23AE   	fcall	_lcd_write
              120A  118A         
  1539                           	line	56
  1540                           	
  1541  03A4                     l6410:	
  1542                           ;lcd.c: 56: _delay((unsigned long)((2)*(4000000/4000.0)));
  1543                           	opt asmopt_off
  1544  03A4  3003               movlw	3
  1545  03A5  00F3               movwf	((??_lcd_clear+0)+0+1),f
  1546  03A6  3097               	movlw	151
  1547  03A7  00F2               movwf	((??_lcd_clear+0)+0),f
  1548  03A8                     u3317:
  1549  03A8  0BF2               	decfsz	((??_lcd_clear+0)+0),f
  1550  03A9  2BA8               	goto	u3317
  1551  03AA  0BF3               	decfsz	((??_lcd_clear+0)+0+1),f
  1552  03AB  2BA8               	goto	u3317
  1553  03AC  2BAD               	nop2
  1554                           opt asmopt_on
  1555                           
  1556                           	line	57
  1557                           	
  1558  03AD                     l3068:	
  1559  03AD  0008               	return
  1560                           	opt stack 0
  1561                           GLOBAL	__end_of_lcd_clear
  1562  03AE                     	__end_of_lcd_clear:
  1563 ;; =============== function _lcd_clear ends ============
  1564                           
  1565                           	signat	_lcd_clear,88
  1566                           	global	_lcd_putch
  1567                           psect	text430,local,class=CODE,delta=2
  1568                           global __ptext430
  1569  0369                     __ptext430:
  1570                           
  1571 ;; *************** function _lcd_putch *****************
  1572 ;; Defined at:
  1573 ;;		line 73 in file "lcd.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  c               1    wreg     unsigned char 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  c               1    2[COMMON] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;		None               void
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       0       0       0       0
  1588 ;;      Locals:         1       0       0       0       0
  1589 ;;      Temps:          0       0       0       0       0
  1590 ;;      Totals:         1       0       0       0       0
  1591 ;;Total ram usage:        1 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    1
  1594 ;; This function calls:
  1595 ;;		_lcd_write
  1596 ;; This function is called by:
  1597 ;;		_lcdCountdown
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           psect	text430
  1601                           	file	"lcd.c"
  1602                           	line	73
  1603                           	global	__size_of_lcd_putch
  1604  000B                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  1605                           	
  1606  0369                     _lcd_putch:	
  1607                           	opt	stack 4
  1608                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1609                           ;lcd_putch@c stored from wreg
  1610  0369  00F2               	movwf	(lcd_putch@c)
  1611                           	line	74
  1612                           	
  1613  036A                     l6402:	
  1614                           ;lcd.c: 74: RA3 = 1;
  1615  036A  1283               	bcf	status, 5	;RP0=0, select bank0
  1616  036B  1303               	bcf	status, 6	;RP1=0, select bank0
  1617  036C  1585               	bsf	(43/8),(43)&7
  1618                           	line	75
  1619                           	
  1620  036D                     l6404:	
  1621                           ;lcd.c: 75: lcd_write( c );
  1622  036D  0872               	movf	(lcd_putch@c),w
  1623  036E  120A  118A  23AE   	fcall	_lcd_write
              120A  118A         
  1624                           	line	76
  1625                           	
  1626  0373                     l3077:	
  1627  0373  0008               	return
  1628                           	opt stack 0
  1629                           GLOBAL	__end_of_lcd_putch
  1630  0374                     	__end_of_lcd_putch:
  1631 ;; =============== function _lcd_putch ends ============
  1632                           
  1633                           	signat	_lcd_putch,4216
  1634                           	global	_lcd_puts
  1635                           psect	text431,local,class=CODE,delta=2
  1636                           global __ptext431
  1637  03EA                     __ptext431:
  1638                           
  1639 ;; *************** function _lcd_puts *****************
  1640 ;; Defined at:
  1641 ;;		line 63 in file "lcd.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  s               1    wreg     PTR const unsigned char 
  1644 ;;		 -> STR_2(5), STR_1(7), 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  s               1    3[COMMON] PTR const unsigned char 
  1647 ;;		 -> STR_2(5), STR_1(7), 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;		None               void
  1650 ;; Registers used:
  1651 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1657 ;;      Params:         0       0       0       0       0
  1658 ;;      Locals:         1       0       0       0       0
  1659 ;;      Temps:          1       0       0       0       0
  1660 ;;      Totals:         2       0       0       0       0
  1661 ;;Total ram usage:        2 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    1
  1664 ;; This function calls:
  1665 ;;		_lcd_write
  1666 ;; This function is called by:
  1667 ;;		_doDelay
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           psect	text431
  1672                           	file	"lcd.c"
  1673                           	line	63
  1674                           	global	__size_of_lcd_puts
  1675  0024                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1676                           	
  1677  03EA                     _lcd_puts:	
  1678                           	opt	stack 5
  1679                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1680                           ;lcd_puts@s stored from wreg
  1681  03EA  00F3               	movwf	(lcd_puts@s)
  1682                           	line	64
  1683                           	
  1684  03EB                     l6394:	
  1685                           ;lcd.c: 64: RA3 = 1;
  1686  03EB  1283               	bcf	status, 5	;RP0=0, select bank0
  1687  03EC  1303               	bcf	status, 6	;RP1=0, select bank0
  1688  03ED  1585               	bsf	(43/8),(43)&7
  1689                           	line	65
  1690                           ;lcd.c: 65: while(*s)
  1691  03EE  2C00               	goto	l6400
  1692                           	
  1693  03EF                     l3072:	
  1694                           	line	66
  1695                           	
  1696  03EF                     l6396:	
  1697                           ;lcd.c: 66: lcd_write(*s++);
  1698  03EF  0873               	movf	(lcd_puts@s),w
  1699  03F0  0084               	movwf	fsr0
  1700  03F1  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1701  03F6  120A  118A  23AE   	fcall	_lcd_write
              120A  118A         
  1702                           	
  1703  03FB                     l6398:	
  1704  03FB  3001               	movlw	(01h)
  1705  03FC  00F2               	movwf	(??_lcd_puts+0)+0
  1706  03FD  0872               	movf	(??_lcd_puts+0)+0,w
  1707  03FE  07F3               	addwf	(lcd_puts@s),f
  1708  03FF  2C00               	goto	l6400
  1709                           	
  1710  0400                     l3071:	
  1711                           	line	65
  1712                           	
  1713  0400                     l6400:	
  1714  0400  0873               	movf	(lcd_puts@s),w
  1715  0401  0084               	movwf	fsr0
  1716  0402  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1717  0407  3800               	iorlw	0
  1718  0408  1D03               	skipz
  1719  0409  2C0B               	goto	u3241
  1720  040A  2C0C               	goto	u3240
  1721  040B                     u3241:
  1722  040B  2BEF               	goto	l6396
  1723  040C                     u3240:
  1724  040C  2C0D               	goto	l3074
  1725                           	
  1726  040D                     l3073:	
  1727                           	line	67
  1728                           	
  1729  040D                     l3074:	
  1730  040D  0008               	return
  1731                           	opt stack 0
  1732                           GLOBAL	__end_of_lcd_puts
  1733  040E                     	__end_of_lcd_puts:
  1734 ;; =============== function _lcd_puts ends ============
  1735                           
  1736                           	signat	_lcd_puts,4216
  1737                           	global	_lcd_goto
  1738                           psect	text432,local,class=CODE,delta=2
  1739                           global __ptext432
  1740  0374                     __ptext432:
  1741                           
  1742 ;; *************** function _lcd_goto *****************
  1743 ;; Defined at:
  1744 ;;		line 85 in file "lcd.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  pos             1    wreg     unsigned char 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  pos             1    2[COMMON] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;		None               void
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0, pclath, cstack
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1758 ;;      Params:         0       0       0       0       0
  1759 ;;      Locals:         1       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0
  1761 ;;      Totals:         1       0       0       0       0
  1762 ;;Total ram usage:        1 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    1
  1765 ;; This function calls:
  1766 ;;		_lcd_write
  1767 ;; This function is called by:
  1768 ;;		_doDelay
  1769 ;;		_lcdCountdown
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           psect	text432
  1773                           	file	"lcd.c"
  1774                           	line	85
  1775                           	global	__size_of_lcd_goto
  1776  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1777                           	
  1778  0374                     _lcd_goto:	
  1779                           	opt	stack 5
  1780                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1781                           ;lcd_goto@pos stored from wreg
  1782  0374  00F2               	movwf	(lcd_goto@pos)
  1783                           	line	86
  1784                           	
  1785  0375                     l6390:	
  1786                           ;lcd.c: 86: RA3 = 0;
  1787  0375  1283               	bcf	status, 5	;RP0=0, select bank0
  1788  0376  1303               	bcf	status, 6	;RP1=0, select bank0
  1789  0377  1185               	bcf	(43/8),(43)&7
  1790                           	line	87
  1791                           	
  1792  0378                     l6392:	
  1793                           ;lcd.c: 87: lcd_write(0x80+pos);
  1794  0378  0872               	movf	(lcd_goto@pos),w
  1795  0379  3E80               	addlw	080h
  1796  037A  120A  118A  23AE   	fcall	_lcd_write
              120A  118A         
  1797                           	line	88
  1798                           	
  1799  037F                     l3080:	
  1800  037F  0008               	return
  1801                           	opt stack 0
  1802                           GLOBAL	__end_of_lcd_goto
  1803  0380                     	__end_of_lcd_goto:
  1804 ;; =============== function _lcd_goto ends ============
  1805                           
  1806                           	signat	_lcd_goto,4216
  1807                           	global	___awtoft
  1808                           psect	text433,local,class=CODE,delta=2
  1809                           global __ptext433
  1810  0434                     __ptext433:
  1811                           
  1812 ;; *************** function ___awtoft *****************
  1813 ;; Defined at:
  1814 ;;		line 33 in file "/usr/hitech/picc/9.82/sources/awtoft.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  c               2    6[BANK0 ] int 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  sign            1   11[BANK0 ] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  3    6[BANK0 ] float 
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0, pclath, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         0       3       0       0       0
  1829 ;;      Locals:         0       1       0       0       0
  1830 ;;      Temps:          0       2       0       0       0
  1831 ;;      Totals:         0       6       0       0       0
  1832 ;;Total ram usage:        6 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; Hardware stack levels required when called:    1
  1835 ;; This function calls:
  1836 ;;		___ftpack
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           psect	text433
  1842                           	file	"/usr/hitech/picc/9.82/sources/awtoft.c"
  1843                           	line	33
  1844                           	global	__size_of___awtoft
  1845  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  1846                           	
  1847  0434                     ___awtoft:	
  1848                           	opt	stack 6
  1849                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1850                           	line	36
  1851                           	
  1852  0434                     l6382:	
  1853  0434  1283               	bcf	status, 5	;RP0=0, select bank0
  1854  0435  1303               	bcf	status, 6	;RP1=0, select bank0
  1855  0436  01AB               	clrf	(___awtoft@sign)
  1856                           	line	37
  1857  0437  1FA7               	btfss	(___awtoft@c+1),7
  1858  0438  2C3A               	goto	u3231
  1859  0439  2C3B               	goto	u3230
  1860  043A                     u3231:
  1861  043A  2C44               	goto	l6386
  1862  043B                     u3230:
  1863                           	line	38
  1864                           	
  1865  043B                     l6384:	
  1866  043B  09A6               	comf	(___awtoft@c),f
  1867  043C  09A7               	comf	(___awtoft@c+1),f
  1868  043D  0AA6               	incf	(___awtoft@c),f
  1869  043E  1903               	skipnz
  1870  043F  0AA7               	incf	(___awtoft@c+1),f
  1871                           	line	39
  1872  0440  01AB               	clrf	(___awtoft@sign)
  1873  0441  1403               	bsf	status,0
  1874  0442  0DAB               	rlf	(___awtoft@sign),f
  1875  0443  2C44               	goto	l6386
  1876                           	line	40
  1877                           	
  1878  0444                     l4656:	
  1879                           	line	41
  1880                           	
  1881  0444                     l6386:	
  1882  0444  0826               	movf	(___awtoft@c),w
  1883  0445  00F0               	movwf	(?___ftpack)
  1884  0446  0827               	movf	(___awtoft@c+1),w
  1885  0447  00F1               	movwf	(?___ftpack+1)
  1886  0448  01F2               	clrf	(?___ftpack+2)
  1887  0449  308E               	movlw	(08Eh)
  1888  044A  00A9               	movwf	(??___awtoft+0)+0
  1889  044B  0829               	movf	(??___awtoft+0)+0,w
  1890  044C  00F3               	movwf	0+(?___ftpack)+03h
  1891  044D  082B               	movf	(___awtoft@sign),w
  1892  044E  00AA               	movwf	(??___awtoft+1)+0
  1893  044F  082A               	movf	(??___awtoft+1)+0,w
  1894  0450  00F4               	movwf	0+(?___ftpack)+04h
  1895  0451  120A  118A  25B6   	fcall	___ftpack
              120A  118A         
  1896  0456  0870               	movf	(0+(?___ftpack)),w
  1897  0457  1283               	bcf	status, 5	;RP0=0, select bank0
  1898  0458  1303               	bcf	status, 6	;RP1=0, select bank0
  1899  0459  00A6               	movwf	(?___awtoft)
  1900  045A  0871               	movf	(1+(?___ftpack)),w
  1901  045B  00A7               	movwf	(?___awtoft+1)
  1902  045C  0872               	movf	(2+(?___ftpack)),w
  1903  045D  00A8               	movwf	(?___awtoft+2)
  1904  045E  2C5F               	goto	l4657
  1905                           	
  1906  045F                     l6388:	
  1907                           	line	42
  1908                           	
  1909  045F                     l4657:	
  1910  045F  0008               	return
  1911                           	opt stack 0
  1912                           GLOBAL	__end_of___awtoft
  1913  0460                     	__end_of___awtoft:
  1914 ;; =============== function ___awtoft ends ============
  1915                           
  1916                           	signat	___awtoft,4219
  1917                           	global	_lcd_write
  1918                           psect	text434,local,class=CODE,delta=2
  1919                           global __ptext434
  1920  03AE                     __ptext434:
  1921                           
  1922 ;; *************** function _lcd_write *****************
  1923 ;; Defined at:
  1924 ;;		line 39 in file "lcd.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  c               1    wreg     unsigned char 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  c               1    1[COMMON] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;		None               void
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         0       0       0       0       0
  1939 ;;      Locals:         1       0       0       0       0
  1940 ;;      Temps:          1       0       0       0       0
  1941 ;;      Totals:         2       0       0       0       0
  1942 ;;Total ram usage:        2 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_lcd_clear
  1948 ;;		_lcd_puts
  1949 ;;		_lcd_putch
  1950 ;;		_lcd_goto
  1951 ;;		_lcd_init
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           psect	text434
  1955                           	file	"lcd.c"
  1956                           	line	39
  1957                           	global	__size_of_lcd_write
  1958  001A                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  1959                           	
  1960  03AE                     _lcd_write:	
  1961                           	opt	stack 5
  1962                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  1963                           ;lcd_write@c stored from wreg
  1964  03AE  00F1               	movwf	(lcd_write@c)
  1965                           	line	40
  1966                           	
  1967  03AF                     l6368:	
  1968                           ;lcd.c: 40: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1969                           	opt asmopt_off
  1970  03AF  300D               movlw	13
  1971  03B0  00F0               movwf	(??_lcd_write+0)+0,f
  1972  03B1                     u3327:
  1973  03B1  0BF0               decfsz	(??_lcd_write+0)+0,f
  1974  03B2  2BB1               	goto	u3327
  1975                           opt asmopt_on
  1976                           
  1977                           	line	41
  1978                           	
  1979  03B3                     l6370:	
  1980                           ;lcd.c: 41: PORTD = ( ( c >> 4 ) & 0x0F );
  1981  03B3  0871               	movf	(lcd_write@c),w
  1982  03B4  00F0               	movwf	(??_lcd_write+0)+0
  1983  03B5  3004               	movlw	04h
  1984  03B6                     u3225:
  1985  03B6  1003               	clrc
  1986  03B7  0CF0               	rrf	(??_lcd_write+0)+0,f
  1987  03B8  3EFF               	addlw	-1
  1988  03B9  1D03               	skipz
  1989  03BA  2BB6               	goto	u3225
  1990  03BB  0870               	movf	0+(??_lcd_write+0)+0,w
  1991  03BC  390F               	andlw	0Fh
  1992  03BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1993  03BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1994  03BF  0088               	movwf	(8)	;volatile
  1995                           	line	42
  1996                           	
  1997  03C0                     l6372:	
  1998                           ;lcd.c: 42: ((RA1 = 1),(RA1=0));
  1999  03C0  1485               	bsf	(41/8),(41)&7
  2000                           	
  2001  03C1                     l6374:	
  2002  03C1  1085               	bcf	(41/8),(41)&7
  2003                           	line	43
  2004                           	
  2005  03C2                     l6376:	
  2006                           ;lcd.c: 43: PORTD = ( c & 0x0F );
  2007  03C2  0871               	movf	(lcd_write@c),w
  2008  03C3  390F               	andlw	0Fh
  2009  03C4  0088               	movwf	(8)	;volatile
  2010                           	line	44
  2011                           	
  2012  03C5                     l6378:	
  2013                           ;lcd.c: 44: ((RA1 = 1),(RA1=0));
  2014  03C5  1485               	bsf	(41/8),(41)&7
  2015                           	
  2016  03C6                     l6380:	
  2017  03C6  1085               	bcf	(41/8),(41)&7
  2018                           	line	45
  2019                           	
  2020  03C7                     l3065:	
  2021  03C7  0008               	return
  2022                           	opt stack 0
  2023                           GLOBAL	__end_of_lcd_write
  2024  03C8                     	__end_of_lcd_write:
  2025 ;; =============== function _lcd_write ends ============
  2026                           
  2027                           	signat	_lcd_write,4216
  2028                           	global	_searchTrack
  2029                           psect	text435,local,class=CODE,delta=2
  2030                           global __ptext435
  2031  048D                     __ptext435:
  2032                           
  2033 ;; *************** function _searchTrack *****************
  2034 ;; Defined at:
  2035 ;;		line 109 in file "newmain.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;		None
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;		None
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2  1529[COMMON] int 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0, pclath, cstack
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         0       0       0       0       0
  2050 ;;      Locals:         0       0       0       0       0
  2051 ;;      Temps:          0       0       0       0       0
  2052 ;;      Totals:         0       0       0       0       0
  2053 ;;Total ram usage:        0 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; Hardware stack levels required when called:    1
  2056 ;; This function calls:
  2057 ;;		_controlMotor
  2058 ;; This function is called by:
  2059 ;;		_main
  2060 ;; This function uses a non-reentrant model
  2061 ;;
  2062                           psect	text435
  2063                           	file	"newmain.c"
  2064                           	line	109
  2065                           	global	__size_of_searchTrack
  2066  0030                     	__size_of_searchTrack	equ	__end_of_searchTrack-_searchTrack
  2067                           	
  2068  048D                     _searchTrack:	
  2069                           	opt	stack 6
  2070                           ; Regs used in _searchTrack: [wreg+status,2+status,0+pclath+cstack]
  2071                           	line	110
  2072                           	
  2073  048D                     l6360:	
  2074                           ;newmain.c: 110: if (lastMotor == 1)
  2075  048D  3001               	movlw	01h
  2076  048E  1283               	bcf	status, 5	;RP0=0, select bank0
  2077  048F  1303               	bcf	status, 6	;RP1=0, select bank0
  2078  0490  0642               	xorwf	(_lastMotor),w
  2079  0491  0443               	iorwf	(_lastMotor+1),w
  2080  0492  1D03               	skipz
  2081  0493  2C95               	goto	u3201
  2082  0494  2C96               	goto	u3200
  2083  0495                     u3201:
  2084  0495  2CA4               	goto	l6364
  2085  0496                     u3200:
  2086                           	line	112
  2087                           	
  2088  0496                     l6362:	
  2089                           ;newmain.c: 111: {
  2090                           ;newmain.c: 112: controlMotor(1, 0);
  2091  0496  3001               	movlw	low(01h)
  2092  0497  00F0               	movwf	(?_controlMotor)
  2093  0498  3000               	movlw	high(01h)
  2094  0499  00F1               	movwf	((?_controlMotor))+1
  2095  049A  3000               	movlw	low(0)
  2096  049B  00F2               	movwf	0+(?_controlMotor)+02h
  2097  049C  3000               	movlw	high(0)
  2098  049D  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  2099  049E  120A  118A  23C8   	fcall	_controlMotor
              120A  118A         
  2100                           	line	113
  2101                           ;newmain.c: 113: }
  2102  04A3  2CBC               	goto	l1533
  2103                           	line	114
  2104                           	
  2105  04A4                     l1530:	
  2106                           	
  2107  04A4                     l6364:	
  2108                           ;newmain.c: 114: else if (lastMotor == 2)
  2109  04A4  3002               	movlw	02h
  2110  04A5  1283               	bcf	status, 5	;RP0=0, select bank0
  2111  04A6  1303               	bcf	status, 6	;RP1=0, select bank0
  2112  04A7  0642               	xorwf	(_lastMotor),w
  2113  04A8  0443               	iorwf	(_lastMotor+1),w
  2114  04A9  1D03               	skipz
  2115  04AA  2CAC               	goto	u3211
  2116  04AB  2CAD               	goto	u3210
  2117  04AC                     u3211:
  2118  04AC  2CBC               	goto	l1533
  2119  04AD                     u3210:
  2120                           	line	116
  2121                           	
  2122  04AD                     l6366:	
  2123                           ;newmain.c: 115: {
  2124                           ;newmain.c: 116: controlMotor(0, 1);
  2125  04AD  3000               	movlw	low(0)
  2126  04AE  00F0               	movwf	(?_controlMotor)
  2127  04AF  3000               	movlw	high(0)
  2128  04B0  00F1               	movwf	((?_controlMotor))+1
  2129  04B1  3001               	movlw	low(01h)
  2130  04B2  00F2               	movwf	0+(?_controlMotor)+02h
  2131  04B3  3000               	movlw	high(01h)
  2132  04B4  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  2133  04B5  120A  118A  23C8   	fcall	_controlMotor
              120A  118A         
  2134  04BA  2CBC               	goto	l1533
  2135                           	line	117
  2136                           	
  2137  04BB                     l1532:	
  2138  04BB  2CBC               	goto	l1533
  2139                           	line	118
  2140                           	
  2141  04BC                     l1531:	
  2142                           	
  2143  04BC                     l1533:	
  2144  04BC  0008               	return
  2145                           	opt stack 0
  2146                           GLOBAL	__end_of_searchTrack
  2147  04BD                     	__end_of_searchTrack:
  2148 ;; =============== function _searchTrack ends ============
  2149                           
  2150                           	signat	_searchTrack,90
  2151                           	global	___ftge
  2152                           psect	text436,local,class=CODE,delta=2
  2153                           global __ptext436
  2154  0546                     __ptext436:
  2155                           
  2156 ;; *************** function ___ftge *****************
  2157 ;; Defined at:
  2158 ;;		line 5 in file "/usr/hitech/picc/9.82/sources/ftge.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  ff1             3    8[COMMON] float 
  2161 ;;  ff2             3   11[COMMON] float 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2173 ;;      Params:         6       0       0       0       0
  2174 ;;      Locals:         0       0       0       0       0
  2175 ;;      Temps:          0       6       0       0       0
  2176 ;;      Totals:         6       6       0       0       0
  2177 ;;Total ram usage:       12 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           psect	text436
  2186                           	file	"/usr/hitech/picc/9.82/sources/ftge.c"
  2187                           	line	5
  2188                           	global	__size_of___ftge
  2189  0070                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  2190                           	
  2191  0546                     ___ftge:	
  2192                           	opt	stack 7
  2193                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2194                           	line	6
  2195                           	
  2196  0546                     l6294:	
  2197  0546  1FFA               	btfss	(___ftge@ff1+2),(23)&7
  2198  0547  2D49               	goto	u3091
  2199  0548  2D4A               	goto	u3090
  2200  0549                     u3091:
  2201  0549  2D72               	goto	l6298
  2202  054A                     u3090:
  2203                           	line	7
  2204                           	
  2205  054A                     l6296:	
  2206  054A  3000               	movlw	0
  2207  054B  1283               	bcf	status, 5	;RP0=0, select bank0
  2208  054C  1303               	bcf	status, 6	;RP1=0, select bank0
  2209  054D  00A0               	movwf	((??___ftge+0)+0)
  2210  054E  3000               	movlw	0
  2211  054F  00A1               	movwf	((??___ftge+0)+0+1)
  2212  0550  3080               	movlw	080h
  2213  0551  00A2               	movwf	((??___ftge+0)+0+2)
  2214  0552  0978               	comf	(___ftge@ff1),w
  2215  0553  00A3               	movwf	(??___ftge+3)+0
  2216  0554  0979               	comf	(___ftge@ff1+1),w
  2217  0555  00A4               	movwf	((??___ftge+3)+0+1)
  2218  0556  097A               	comf	(___ftge@ff1+2),w
  2219  0557  00A5               	movwf	((??___ftge+3)+0+2)
  2220  0558  0AA3               	incf	(??___ftge+3)+0,f
  2221  0559  1903               	skipnz
  2222  055A  0AA4               	incf	((??___ftge+3)+0+1),f
  2223  055B  1903               	skipnz
  2224  055C  0AA5               	incf	((??___ftge+3)+0+2),f
  2225  055D  0823               	movf	0+(??___ftge+3)+0,w
  2226  055E  07A0               	addwf	(??___ftge+0)+0,f
  2227  055F  0824               	movf	1+(??___ftge+3)+0,w
  2228  0560  1803               	skipnc
  2229  0561  0F24               	incfsz	1+(??___ftge+3)+0,w
  2230  0562  2D64               	goto	u3101
  2231  0563  2D65               	goto	u3102
  2232  0564                     u3101:
  2233  0564  07A1               	addwf	(??___ftge+0)+1,f
  2234                           	
  2235  0565                     u3102:
  2236  0565  0825               	movf	2+(??___ftge+3)+0,w
  2237  0566  1803               	skipnc
  2238  0567  0F25               	incfsz	2+(??___ftge+3)+0,w
  2239  0568  2D6A               	goto	u3103
  2240  0569  2D6B               	goto	u3104
  2241  056A                     u3103:
  2242  056A  07A2               	addwf	(??___ftge+0)+2,f
  2243                           	
  2244  056B                     u3104:
  2245  056B  0820               	movf	0+(??___ftge+0)+0,w
  2246  056C  00F8               	movwf	(___ftge@ff1)
  2247  056D  0821               	movf	1+(??___ftge+0)+0,w
  2248  056E  00F9               	movwf	(___ftge@ff1+1)
  2249  056F  0822               	movf	2+(??___ftge+0)+0,w
  2250  0570  00FA               	movwf	(___ftge@ff1+2)
  2251  0571  2D72               	goto	l6298
  2252                           	
  2253  0572                     l4687:	
  2254                           	line	8
  2255                           	
  2256  0572                     l6298:	
  2257  0572  1FFD               	btfss	(___ftge@ff2+2),(23)&7
  2258  0573  2D75               	goto	u3111
  2259  0574  2D76               	goto	u3110
  2260  0575                     u3111:
  2261  0575  2D9E               	goto	l6302
  2262  0576                     u3110:
  2263                           	line	9
  2264                           	
  2265  0576                     l6300:	
  2266  0576  3000               	movlw	0
  2267  0577  1283               	bcf	status, 5	;RP0=0, select bank0
  2268  0578  1303               	bcf	status, 6	;RP1=0, select bank0
  2269  0579  00A0               	movwf	((??___ftge+0)+0)
  2270  057A  3000               	movlw	0
  2271  057B  00A1               	movwf	((??___ftge+0)+0+1)
  2272  057C  3080               	movlw	080h
  2273  057D  00A2               	movwf	((??___ftge+0)+0+2)
  2274  057E  097B               	comf	(___ftge@ff2),w
  2275  057F  00A3               	movwf	(??___ftge+3)+0
  2276  0580  097C               	comf	(___ftge@ff2+1),w
  2277  0581  00A4               	movwf	((??___ftge+3)+0+1)
  2278  0582  097D               	comf	(___ftge@ff2+2),w
  2279  0583  00A5               	movwf	((??___ftge+3)+0+2)
  2280  0584  0AA3               	incf	(??___ftge+3)+0,f
  2281  0585  1903               	skipnz
  2282  0586  0AA4               	incf	((??___ftge+3)+0+1),f
  2283  0587  1903               	skipnz
  2284  0588  0AA5               	incf	((??___ftge+3)+0+2),f
  2285  0589  0823               	movf	0+(??___ftge+3)+0,w
  2286  058A  07A0               	addwf	(??___ftge+0)+0,f
  2287  058B  0824               	movf	1+(??___ftge+3)+0,w
  2288  058C  1803               	skipnc
  2289  058D  0F24               	incfsz	1+(??___ftge+3)+0,w
  2290  058E  2D90               	goto	u3121
  2291  058F  2D91               	goto	u3122
  2292  0590                     u3121:
  2293  0590  07A1               	addwf	(??___ftge+0)+1,f
  2294                           	
  2295  0591                     u3122:
  2296  0591  0825               	movf	2+(??___ftge+3)+0,w
  2297  0592  1803               	skipnc
  2298  0593  0F25               	incfsz	2+(??___ftge+3)+0,w
  2299  0594  2D96               	goto	u3123
  2300  0595  2D97               	goto	u3124
  2301  0596                     u3123:
  2302  0596  07A2               	addwf	(??___ftge+0)+2,f
  2303                           	
  2304  0597                     u3124:
  2305  0597  0820               	movf	0+(??___ftge+0)+0,w
  2306  0598  00FB               	movwf	(___ftge@ff2)
  2307  0599  0821               	movf	1+(??___ftge+0)+0,w
  2308  059A  00FC               	movwf	(___ftge@ff2+1)
  2309  059B  0822               	movf	2+(??___ftge+0)+0,w
  2310  059C  00FD               	movwf	(___ftge@ff2+2)
  2311  059D  2D9E               	goto	l6302
  2312                           	
  2313  059E                     l4688:	
  2314                           	line	10
  2315                           	
  2316  059E                     l6302:	
  2317  059E  3080               	movlw	080h
  2318  059F  06FA               	xorwf	(___ftge@ff1+2),f
  2319                           	line	11
  2320                           	
  2321  05A0                     l6304:	
  2322  05A0  3080               	movlw	080h
  2323  05A1  06FD               	xorwf	(___ftge@ff2+2),f
  2324                           	line	12
  2325                           	
  2326  05A2                     l6306:	
  2327  05A2  087D               	movf	(___ftge@ff2+2),w
  2328  05A3  027A               	subwf	(___ftge@ff1+2),w
  2329  05A4  1D03               	skipz
  2330  05A5  2DAC               	goto	u3135
  2331  05A6  087C               	movf	(___ftge@ff2+1),w
  2332  05A7  0279               	subwf	(___ftge@ff1+1),w
  2333  05A8  1D03               	skipz
  2334  05A9  2DAC               	goto	u3135
  2335  05AA  087B               	movf	(___ftge@ff2),w
  2336  05AB  0278               	subwf	(___ftge@ff1),w
  2337  05AC                     u3135:
  2338  05AC  1803               	skipnc
  2339  05AD  2DAF               	goto	u3131
  2340  05AE  2DB0               	goto	u3130
  2341  05AF                     u3131:
  2342  05AF  2DB2               	goto	l6310
  2343  05B0                     u3130:
  2344                           	
  2345  05B0                     l6308:	
  2346  05B0  1003               	clrc
  2347                           	
  2348  05B1  2DB5               	goto	l4689
  2349                           	
  2350  05B2                     l6022:	
  2351                           	
  2352  05B2                     l6310:	
  2353  05B2  1403               	setc
  2354                           	
  2355  05B3  2DB5               	goto	l4689
  2356                           	
  2357  05B4                     l6024:	
  2358  05B4  2DB5               	goto	l4689
  2359                           	
  2360  05B5                     l6312:	
  2361                           	line	13
  2362                           	
  2363  05B5                     l4689:	
  2364  05B5  0008               	return
  2365                           	opt stack 0
  2366                           GLOBAL	__end_of___ftge
  2367  05B6                     	__end_of___ftge:
  2368 ;; =============== function ___ftge ends ============
  2369                           
  2370                           	signat	___ftge,8312
  2371                           	global	___ftpack
  2372                           psect	text437,local,class=CODE,delta=2
  2373                           global __ptext437
  2374  05B6                     __ptext437:
  2375                           
  2376 ;; *************** function ___ftpack *****************
  2377 ;; Defined at:
  2378 ;;		line 63 in file "/usr/hitech/picc/9.82/sources/float.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  arg             3    0[COMMON] unsigned um
  2381 ;;  exp             1    3[COMMON] unsigned char 
  2382 ;;  sign            1    4[COMMON] unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  3    0[COMMON] float 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2394 ;;      Params:         5       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0
  2396 ;;      Temps:          3       0       0       0       0
  2397 ;;      Totals:         8       0       0       0       0
  2398 ;;Total ram usage:        8 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; This function calls:
  2401 ;;		Nothing
  2402 ;; This function is called by:
  2403 ;;		___awtoft
  2404 ;;		___ftadd
  2405 ;;		___ftdiv
  2406 ;;		___ftmul
  2407 ;;		___lbtoft
  2408 ;;		___abtoft
  2409 ;;		___lwtoft
  2410 ;;		___altoft
  2411 ;;		___lltoft
  2412 ;;		___attoft
  2413 ;;		___lttoft
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           psect	text437
  2417                           	file	"/usr/hitech/picc/9.82/sources/float.c"
  2418                           	line	63
  2419                           	global	__size_of___ftpack
  2420  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  2421                           	
  2422  05B6                     ___ftpack:	
  2423                           	opt	stack 6
  2424                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2425                           	line	64
  2426                           	
  2427  05B6                     l6162:	
  2428  05B6  0873               	movf	(___ftpack@exp),w
  2429  05B7  1D03               	skipz
  2430  05B8  2DBA               	goto	u2750
  2431  05B9  2DC2               	goto	l6166
  2432  05BA                     u2750:
  2433                           	
  2434  05BA                     l6164:	
  2435  05BA  0872               	movf	(___ftpack@arg+2),w
  2436  05BB  0471               	iorwf	(___ftpack@arg+1),w
  2437  05BC  0470               	iorwf	(___ftpack@arg),w
  2438  05BD  1D03               	skipz
  2439  05BE  2DC0               	goto	u2761
  2440  05BF  2DC1               	goto	u2760
  2441  05C0                     u2761:
  2442  05C0  2DD8               	goto	l6172
  2443  05C1                     u2760:
  2444  05C1  2DC2               	goto	l6166
  2445                           	
  2446  05C2                     l4854:	
  2447                           	line	65
  2448                           	
  2449  05C2                     l6166:	
  2450  05C2  3000               	movlw	0x0
  2451  05C3  00F0               	movwf	(?___ftpack)
  2452  05C4  3000               	movlw	0x0
  2453  05C5  00F1               	movwf	(?___ftpack+1)
  2454  05C6  3000               	movlw	0x0
  2455  05C7  00F2               	movwf	(?___ftpack+2)
  2456  05C8  2E30               	goto	l4855
  2457                           	
  2458  05C9                     l6168:	
  2459  05C9  2E30               	goto	l4855
  2460                           	
  2461  05CA                     l4852:	
  2462                           	line	66
  2463  05CA  2DD8               	goto	l6172
  2464                           	
  2465  05CB                     l4857:	
  2466                           	line	67
  2467                           	
  2468  05CB                     l6170:	
  2469  05CB  3001               	movlw	(01h)
  2470  05CC  00F5               	movwf	(??___ftpack+0)+0
  2471  05CD  0875               	movf	(??___ftpack+0)+0,w
  2472  05CE  07F3               	addwf	(___ftpack@exp),f
  2473                           	line	68
  2474  05CF  3001               	movlw	01h
  2475  05D0                     u2775:
  2476  05D0  1003               	clrc
  2477  05D1  0CF2               	rrf	(___ftpack@arg+2),f
  2478  05D2  0CF1               	rrf	(___ftpack@arg+1),f
  2479  05D3  0CF0               	rrf	(___ftpack@arg),f
  2480  05D4  3EFF               	addlw	-1
  2481  05D5  1D03               	skipz
  2482  05D6  2DD0               	goto	u2775
  2483                           
  2484  05D7  2DD8               	goto	l6172
  2485                           	line	69
  2486                           	
  2487  05D8                     l4856:	
  2488                           	line	66
  2489                           	
  2490  05D8                     l6172:	
  2491  05D8  30FE               	movlw	low highword(0FE0000h)
  2492  05D9  0572               	andwf	(___ftpack@arg+2),w
  2493  05DA  1D03               	btfss	status,2
  2494  05DB  2DDD               	goto	u2781
  2495  05DC  2DDE               	goto	u2780
  2496  05DD                     u2781:
  2497  05DD  2DCB               	goto	l6170
  2498  05DE                     u2780:
  2499  05DE  2DF6               	goto	l4859
  2500                           	
  2501  05DF                     l4858:	
  2502                           	line	70
  2503  05DF  2DF6               	goto	l4859
  2504                           	
  2505  05E0                     l4860:	
  2506                           	line	71
  2507                           	
  2508  05E0                     l6174:	
  2509  05E0  3001               	movlw	(01h)
  2510  05E1  00F5               	movwf	(??___ftpack+0)+0
  2511  05E2  0875               	movf	(??___ftpack+0)+0,w
  2512  05E3  07F3               	addwf	(___ftpack@exp),f
  2513                           	line	72
  2514                           	
  2515  05E4                     l6176:	
  2516  05E4  3001               	movlw	01h
  2517  05E5  07F0               	addwf	(___ftpack@arg),f
  2518  05E6  3000               	movlw	0
  2519  05E7  1803               	skipnc
  2520  05E8  3001               movlw 1
  2521  05E9  07F1               	addwf	(___ftpack@arg+1),f
  2522  05EA  3000               	movlw	0
  2523  05EB  1803               	skipnc
  2524  05EC  3001               movlw 1
  2525  05ED  07F2               	addwf	(___ftpack@arg+2),f
  2526                           	line	73
  2527                           	
  2528  05EE                     l6178:	
  2529  05EE  3001               	movlw	01h
  2530  05EF                     u2795:
  2531  05EF  1003               	clrc
  2532  05F0  0CF2               	rrf	(___ftpack@arg+2),f
  2533  05F1  0CF1               	rrf	(___ftpack@arg+1),f
  2534  05F2  0CF0               	rrf	(___ftpack@arg),f
  2535  05F3  3EFF               	addlw	-1
  2536  05F4  1D03               	skipz
  2537  05F5  2DEF               	goto	u2795
  2538                           
  2539                           	line	74
  2540                           	
  2541  05F6                     l4859:	
  2542                           	line	70
  2543  05F6  30FF               	movlw	low highword(0FF0000h)
  2544  05F7  0572               	andwf	(___ftpack@arg+2),w
  2545  05F8  1D03               	btfss	status,2
  2546  05F9  2DFB               	goto	u2801
  2547  05FA  2DFC               	goto	u2800
  2548  05FB                     u2801:
  2549  05FB  2DE0               	goto	l6174
  2550  05FC                     u2800:
  2551  05FC  2E09               	goto	l6182
  2552                           	
  2553  05FD                     l4861:	
  2554                           	line	75
  2555  05FD  2E09               	goto	l6182
  2556                           	
  2557  05FE                     l4863:	
  2558                           	line	76
  2559                           	
  2560  05FE                     l6180:	
  2561  05FE  3001               	movlw	low(01h)
  2562  05FF  02F3               	subwf	(___ftpack@exp),f
  2563                           	line	77
  2564  0600  3001               	movlw	01h
  2565  0601                     u2815:
  2566  0601  1003               	clrc
  2567  0602  0DF0               	rlf	(___ftpack@arg),f
  2568  0603  0DF1               	rlf	(___ftpack@arg+1),f
  2569  0604  0DF2               	rlf	(___ftpack@arg+2),f
  2570  0605  3EFF               	addlw	-1
  2571  0606  1D03               	skipz
  2572  0607  2E01               	goto	u2815
  2573  0608  2E09               	goto	l6182
  2574                           	line	78
  2575                           	
  2576  0609                     l4862:	
  2577                           	line	75
  2578                           	
  2579  0609                     l6182:	
  2580  0609  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  2581  060A  2E0C               	goto	u2821
  2582  060B  2E0D               	goto	u2820
  2583  060C                     u2821:
  2584  060C  2DFE               	goto	l6180
  2585  060D                     u2820:
  2586                           	
  2587  060D                     l4864:	
  2588                           	line	79
  2589  060D  1873               	btfsc	(___ftpack@exp),(0)&7
  2590  060E  2E10               	goto	u2831
  2591  060F  2E11               	goto	u2830
  2592  0610                     u2831:
  2593  0610  2E17               	goto	l4865
  2594  0611                     u2830:
  2595                           	line	80
  2596                           	
  2597  0611                     l6184:	
  2598  0611  30FF               	movlw	0FFh
  2599  0612  05F0               	andwf	(___ftpack@arg),f
  2600  0613  307F               	movlw	07Fh
  2601  0614  05F1               	andwf	(___ftpack@arg+1),f
  2602  0615  30FF               	movlw	0FFh
  2603  0616  05F2               	andwf	(___ftpack@arg+2),f
  2604                           	
  2605  0617                     l4865:	
  2606                           	line	81
  2607  0617  1003               	clrc
  2608  0618  0CF3               	rrf	(___ftpack@exp),f
  2609                           
  2610                           	line	82
  2611                           	
  2612  0619                     l6186:	
  2613  0619  0873               	movf	(___ftpack@exp),w
  2614  061A  00F5               	movwf	((??___ftpack+0)+0)
  2615  061B  01F6               	clrf	((??___ftpack+0)+0+1)
  2616  061C  01F7               	clrf	((??___ftpack+0)+0+2)
  2617  061D  3010               	movlw	010h
  2618  061E                     u2845:
  2619  061E  1003               	clrc
  2620  061F  0DF5               	rlf	(??___ftpack+0)+0,f
  2621  0620  0DF6               	rlf	(??___ftpack+0)+1,f
  2622  0621  0DF7               	rlf	(??___ftpack+0)+2,f
  2623  0622                     u2840:
  2624  0622  3EFF               	addlw	-1
  2625  0623  1D03               	skipz
  2626  0624  2E1E               	goto	u2845
  2627  0625  0875               	movf	0+(??___ftpack+0)+0,w
  2628  0626  04F0               	iorwf	(___ftpack@arg),f
  2629  0627  0876               	movf	1+(??___ftpack+0)+0,w
  2630  0628  04F1               	iorwf	(___ftpack@arg+1),f
  2631  0629  0877               	movf	2+(??___ftpack+0)+0,w
  2632  062A  04F2               	iorwf	(___ftpack@arg+2),f
  2633                           	line	83
  2634                           	
  2635  062B                     l6188:	
  2636  062B  0874               	movf	(___ftpack@sign),w
  2637  062C  1D03               	skipz
  2638  062D  2E2F               	goto	u2850
  2639  062E  2E30               	goto	l4866
  2640  062F                     u2850:
  2641                           	line	84
  2642                           	
  2643  062F                     l6190:	
  2644  062F  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  2645                           	
  2646  0630                     l4866:	
  2647                           	line	85
  2648                           	line	86
  2649                           	
  2650  0630                     l4855:	
  2651  0630  0008               	return
  2652                           	opt stack 0
  2653                           GLOBAL	__end_of___ftpack
  2654  0631                     	__end_of___ftpack:
  2655 ;; =============== function ___ftpack ends ============
  2656                           
  2657                           	signat	___ftpack,12411
  2658                           	global	_ADCRead
  2659                           psect	text438,local,class=CODE,delta=2
  2660                           global __ptext438
  2661  0460                     __ptext438:
  2662                           
  2663 ;; *************** function _ADCRead *****************
  2664 ;; Defined at:
  2665 ;;		line 236 in file "newmain.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  ch              1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  ch              1    6[COMMON] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  2    0[COMMON] unsigned int 
  2672 ;; Registers used:
  2673 ;;		wreg, status,2, status,0
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2679 ;;      Params:         2       0       0       0       0
  2680 ;;      Locals:         1       0       0       0       0
  2681 ;;      Temps:          4       0       0       0       0
  2682 ;;      Totals:         7       0       0       0       0
  2683 ;;Total ram usage:        7 bytes
  2684 ;; Hardware stack levels used:    1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           psect	text438
  2692                           	file	"newmain.c"
  2693                           	line	236
  2694                           	global	__size_of_ADCRead
  2695  002D                     	__size_of_ADCRead	equ	__end_of_ADCRead-_ADCRead
  2696                           	
  2697  0460                     _ADCRead:	
  2698                           	opt	stack 7
  2699                           ; Regs used in _ADCRead: [wreg+status,2+status,0]
  2700                           ;ADCRead@ch stored from wreg
  2701  0460  00F6               	movwf	(ADCRead@ch)
  2702                           	line	237
  2703                           	
  2704  0461                     l6080:	
  2705                           ;newmain.c: 237: ADCON0 = 0x00;
  2706  0461  1283               	bcf	status, 5	;RP0=0, select bank0
  2707  0462  1303               	bcf	status, 6	;RP1=0, select bank0
  2708  0463  019F               	clrf	(31)	;volatile
  2709                           	line	238
  2710                           	
  2711  0464                     l6082:	
  2712                           ;newmain.c: 238: ADCON0 = (ch<<2);
  2713  0464  0876               	movf	(ADCRead@ch),w
  2714  0465  00F2               	movwf	(??_ADCRead+0)+0
  2715  0466  3001               	movlw	(02h)-1
  2716  0467                     u2495:
  2717  0467  1003               	clrc
  2718  0468  0DF2               	rlf	(??_ADCRead+0)+0,f
  2719  0469  3EFF               	addlw	-1
  2720  046A  1D03               	skipz
  2721  046B  2C67               	goto	u2495
  2722  046C  1003               	clrc
  2723  046D  0D72               	rlf	(??_ADCRead+0)+0,w
  2724  046E  009F               	movwf	(31)	;volatile
  2725                           	line	240
  2726                           	
  2727  046F                     l6084:	
  2728                           ;newmain.c: 240: ADON=1;
  2729  046F  141F               	bsf	(248/8),(248)&7
  2730                           	line	242
  2731                           	
  2732  0470                     l6086:	
  2733                           ;newmain.c: 242: GO_DONE=1;
  2734  0470  149F               	bsf	(249/8),(249)&7
  2735                           	line	243
  2736                           ;newmain.c: 243: while(GO_DONE);
  2737  0471  2C72               	goto	l1558
  2738                           	
  2739  0472                     l1559:	
  2740                           	
  2741  0472                     l1558:	
  2742  0472  189F               	btfsc	(249/8),(249)&7
  2743  0473  2C75               	goto	u2501
  2744  0474  2C76               	goto	u2500
  2745  0475                     u2501:
  2746  0475  2C72               	goto	l1558
  2747  0476                     u2500:
  2748                           	
  2749  0476                     l1560:	
  2750                           	line	245
  2751                           ;newmain.c: 245: ADON=0;
  2752  0476  101F               	bcf	(248/8),(248)&7
  2753                           	line	247
  2754                           	
  2755  0477                     l6088:	
  2756                           ;newmain.c: 247: return (ADRESH<8)|ADRESL;
  2757  0477  1683               	bsf	status, 5	;RP0=1, select bank1
  2758  0478  1303               	bcf	status, 6	;RP1=0, select bank1
  2759  0479  081E               	movf	(158)^080h,w	;volatile
  2760  047A  00F2               	movwf	(??_ADCRead+0)+0
  2761  047B  01F3               	clrf	(??_ADCRead+0)+0+1
  2762  047C  3008               	movlw	(08h)
  2763  047D  1283               	bcf	status, 5	;RP0=0, select bank0
  2764  047E  1303               	bcf	status, 6	;RP1=0, select bank0
  2765  047F  021E               	subwf	(30),w	;volatile
  2766  0480  3000               	movlw	0
  2767  0481  1C03               	skipc
  2768  0482  3001               	movlw	1
  2769  0483  00F4               	movwf	(??_ADCRead+2)+0
  2770  0484  01F5               	clrf	(??_ADCRead+2)+0+1
  2771  0485  0872               	movf	0+(??_ADCRead+0)+0,w
  2772  0486  0474               	iorwf	0+(??_ADCRead+2)+0,w
  2773  0487  00F0               	movwf	(?_ADCRead)
  2774  0488  0873               	movf	1+(??_ADCRead+0)+0,w
  2775  0489  0475               	iorwf	1+(??_ADCRead+2)+0,w
  2776  048A  00F1               	movwf	1+(?_ADCRead)
  2777  048B  2C8C               	goto	l1561
  2778                           	
  2779  048C                     l6090:	
  2780                           	line	249
  2781                           	
  2782  048C                     l1561:	
  2783  048C  0008               	return
  2784                           	opt stack 0
  2785                           GLOBAL	__end_of_ADCRead
  2786  048D                     	__end_of_ADCRead:
  2787 ;; =============== function _ADCRead ends ============
  2788                           
  2789                           	signat	_ADCRead,4218
  2790                           	global	_ADCInit
  2791                           psect	text439,local,class=CODE,delta=2
  2792                           global __ptext439
  2793  04BD                     __ptext439:
  2794                           
  2795 ;; *************** function _ADCInit *****************
  2796 ;; Defined at:
  2797 ;;		line 225 in file "newmain.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  ADC_Channel     2    0[COMMON] int 
  2800 ;; Auto vars:     Size  Location     Type
  2801 ;;		None
  2802 ;; Return value:  Size  Location     Type
  2803 ;;		None               void
  2804 ;; Registers used:
  2805 ;;		wreg, status,2, status,0
  2806 ;; Tracked objects:
  2807 ;;		On entry : 0/0
  2808 ;;		On exit  : 0/0
  2809 ;;		Unchanged: 0/0
  2810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2811 ;;      Params:         2       0       0       0       0
  2812 ;;      Locals:         0       0       0       0       0
  2813 ;;      Temps:          0       0       0       0       0
  2814 ;;      Totals:         2       0       0       0       0
  2815 ;;Total ram usage:        2 bytes
  2816 ;; Hardware stack levels used:    1
  2817 ;; This function calls:
  2818 ;;		Nothing
  2819 ;; This function is called by:
  2820 ;;		_main
  2821 ;; This function uses a non-reentrant model
  2822 ;;
  2823                           psect	text439
  2824                           	file	"newmain.c"
  2825                           	line	225
  2826                           	global	__size_of_ADCInit
  2827  0033                     	__size_of_ADCInit	equ	__end_of_ADCInit-_ADCInit
  2828                           	
  2829  04BD                     _ADCInit:	
  2830                           	opt	stack 7
  2831                           ; Regs used in _ADCInit: [wreg+status,2+status,0]
  2832                           	line	226
  2833                           	
  2834  04BD                     l6062:	
  2835                           ;newmain.c: 226: if (ADC_Channel == 0) TRISE0 = 1;
  2836  04BD  0871               	movf	((ADCInit@ADC_Channel+1)),w
  2837  04BE  0470               	iorwf	((ADCInit@ADC_Channel)),w
  2838  04BF  1D03               	skipz
  2839  04C0  2CC2               	goto	u2451
  2840  04C1  2CC3               	goto	u2450
  2841  04C2                     u2451:
  2842  04C2  2CC7               	goto	l6066
  2843  04C3                     u2450:
  2844                           	
  2845  04C3                     l6064:	
  2846  04C3  1683               	bsf	status, 5	;RP0=1, select bank1
  2847  04C4  1303               	bcf	status, 6	;RP1=0, select bank1
  2848  04C5  1409               	bsf	(1096/8)^080h,(1096)&7
  2849  04C6  2CEB               	goto	l6078
  2850                           	line	227
  2851                           	
  2852  04C7                     l1548:	
  2853                           	
  2854  04C7                     l6066:	
  2855                           ;newmain.c: 227: else if (ADC_Channel == 1) TRISE1 = 1;
  2856  04C7  3001               	movlw	01h
  2857  04C8  0670               	xorwf	(ADCInit@ADC_Channel),w
  2858  04C9  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2859  04CA  1D03               	skipz
  2860  04CB  2CCD               	goto	u2461
  2861  04CC  2CCE               	goto	u2460
  2862  04CD                     u2461:
  2863  04CD  2CD2               	goto	l6070
  2864  04CE                     u2460:
  2865                           	
  2866  04CE                     l6068:	
  2867  04CE  1683               	bsf	status, 5	;RP0=1, select bank1
  2868  04CF  1303               	bcf	status, 6	;RP1=0, select bank1
  2869  04D0  1489               	bsf	(1097/8)^080h,(1097)&7
  2870  04D1  2CEB               	goto	l6078
  2871                           	line	228
  2872                           	
  2873  04D2                     l1550:	
  2874                           	
  2875  04D2                     l6070:	
  2876                           ;newmain.c: 228: else if (ADC_Channel == 2) TRISE2 = 1;
  2877  04D2  3002               	movlw	02h
  2878  04D3  0670               	xorwf	(ADCInit@ADC_Channel),w
  2879  04D4  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2880  04D5  1D03               	skipz
  2881  04D6  2CD8               	goto	u2471
  2882  04D7  2CD9               	goto	u2470
  2883  04D8                     u2471:
  2884  04D8  2CDD               	goto	l6074
  2885  04D9                     u2470:
  2886                           	
  2887  04D9                     l6072:	
  2888  04D9  1683               	bsf	status, 5	;RP0=1, select bank1
  2889  04DA  1303               	bcf	status, 6	;RP1=0, select bank1
  2890  04DB  1509               	bsf	(1098/8)^080h,(1098)&7
  2891  04DC  2CEB               	goto	l6078
  2892                           	line	229
  2893                           	
  2894  04DD                     l1552:	
  2895                           	
  2896  04DD                     l6074:	
  2897                           ;newmain.c: 229: else if (ADC_Channel == 3) TRISE3 = 1;
  2898  04DD  3003               	movlw	03h
  2899  04DE  0670               	xorwf	(ADCInit@ADC_Channel),w
  2900  04DF  0471               	iorwf	(ADCInit@ADC_Channel+1),w
  2901  04E0  1D03               	skipz
  2902  04E1  2CE3               	goto	u2481
  2903  04E2  2CE4               	goto	u2480
  2904  04E3                     u2481:
  2905  04E3  2CEB               	goto	l6078
  2906  04E4                     u2480:
  2907                           	
  2908  04E4                     l6076:	
  2909  04E4  1683               	bsf	status, 5	;RP0=1, select bank1
  2910  04E5  1303               	bcf	status, 6	;RP1=0, select bank1
  2911  04E6  1589               	bsf	(1099/8)^080h,(1099)&7
  2912  04E7  2CEB               	goto	l6078
  2913                           	
  2914  04E8                     l1554:	
  2915  04E8  2CEB               	goto	l6078
  2916                           	line	231
  2917                           	
  2918  04E9                     l1553:	
  2919  04E9  2CEB               	goto	l6078
  2920                           	
  2921  04EA                     l1551:	
  2922  04EA  2CEB               	goto	l6078
  2923                           	
  2924  04EB                     l1549:	
  2925                           	
  2926  04EB                     l6078:	
  2927                           ;newmain.c: 231: ADCON1 = 0b10000100;
  2928  04EB  3084               	movlw	(084h)
  2929  04EC  1683               	bsf	status, 5	;RP0=1, select bank1
  2930  04ED  1303               	bcf	status, 6	;RP1=0, select bank1
  2931  04EE  009F               	movwf	(159)^080h	;volatile
  2932                           	line	232
  2933                           	
  2934  04EF                     l1555:	
  2935  04EF  0008               	return
  2936                           	opt stack 0
  2937                           GLOBAL	__end_of_ADCInit
  2938  04F0                     	__end_of_ADCInit:
  2939 ;; =============== function _ADCInit ends ============
  2940                           
  2941                           	signat	_ADCInit,4216
  2942                           	global	_controlMotor
  2943                           psect	text440,local,class=CODE,delta=2
  2944                           global __ptext440
  2945  03C8                     __ptext440:
  2946                           
  2947 ;; *************** function _controlMotor *****************
  2948 ;; Defined at:
  2949 ;;		line 73 in file "newmain.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;  Leftpt          2    0[COMMON] int 
  2952 ;;  Rightpt         2    2[COMMON] int 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;		None
  2955 ;; Return value:  Size  Location     Type
  2956 ;;		None               void
  2957 ;; Registers used:
  2958 ;;		wreg
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         4       0       0       0       0
  2965 ;;      Locals:         0       0       0       0       0
  2966 ;;      Temps:          0       0       0       0       0
  2967 ;;      Totals:         4       0       0       0       0
  2968 ;;Total ram usage:        4 bytes
  2969 ;; Hardware stack levels used:    1
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_searchTrack
  2974 ;;		_main
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           psect	text440
  2978                           	file	"newmain.c"
  2979                           	line	73
  2980                           	global	__size_of_controlMotor
  2981  0022                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
  2982                           	
  2983  03C8                     _controlMotor:	
  2984                           	opt	stack 7
  2985                           ; Regs used in _controlMotor: [wreg]
  2986                           	line	74
  2987                           	
  2988  03C8                     l6034:	
  2989                           ;newmain.c: 74: if (Leftpt == 1)
  2990  03C8  3001               	movlw	01h
  2991  03C9  0670               	xorwf	(controlMotor@Leftpt),w
  2992  03CA  0471               	iorwf	(controlMotor@Leftpt+1),w
  2993  03CB  1D03               	skipz
  2994  03CC  2BCE               	goto	u2431
  2995  03CD  2BCF               	goto	u2430
  2996  03CE                     u2431:
  2997  03CE  2BD3               	goto	l1523
  2998  03CF                     u2430:
  2999                           	line	78
  3000                           	
  3001  03CF                     l6036:	
  3002                           ;newmain.c: 75: {
  3003                           ;newmain.c: 78: RC6 = 1;
  3004  03CF  1283               	bcf	status, 5	;RP0=0, select bank0
  3005  03D0  1303               	bcf	status, 6	;RP1=0, select bank0
  3006  03D1  1707               	bsf	(62/8),(62)&7
  3007                           	line	79
  3008                           ;newmain.c: 79: }
  3009  03D2  2BDA               	goto	l1524
  3010                           	line	80
  3011                           	
  3012  03D3                     l1523:	
  3013                           	line	84
  3014                           ;newmain.c: 80: else
  3015                           ;newmain.c: 81: {
  3016                           ;newmain.c: 84: RC6 = 0;
  3017  03D3  1283               	bcf	status, 5	;RP0=0, select bank0
  3018  03D4  1303               	bcf	status, 6	;RP1=0, select bank0
  3019  03D5  1307               	bcf	(62/8),(62)&7
  3020                           	line	85
  3021                           	
  3022  03D6                     l6038:	
  3023                           ;newmain.c: 85: lastMotor = 1;
  3024  03D6  3001               	movlw	low(01h)
  3025  03D7  00C2               	movwf	(_lastMotor)
  3026  03D8  3000               	movlw	high(01h)
  3027  03D9  00C3               	movwf	((_lastMotor))+1
  3028                           	line	86
  3029                           	
  3030  03DA                     l1524:	
  3031                           	line	89
  3032                           ;newmain.c: 86: }
  3033                           ;newmain.c: 89: if (Rightpt == 1)
  3034  03DA  3001               	movlw	01h
  3035  03DB  0672               	xorwf	(controlMotor@Rightpt),w
  3036  03DC  0473               	iorwf	(controlMotor@Rightpt+1),w
  3037  03DD  1D03               	skipz
  3038  03DE  2BE0               	goto	u2441
  3039  03DF  2BE1               	goto	u2440
  3040  03E0                     u2441:
  3041  03E0  2BE3               	goto	l1525
  3042  03E1                     u2440:
  3043                           	line	93
  3044                           	
  3045  03E1                     l6040:	
  3046                           ;newmain.c: 90: {
  3047                           ;newmain.c: 93: RC7 = 1;
  3048  03E1  1787               	bsf	(63/8),(63)&7
  3049                           	line	94
  3050                           ;newmain.c: 94: }
  3051  03E2  2BE9               	goto	l1527
  3052                           	line	95
  3053                           	
  3054  03E3                     l1525:	
  3055                           	line	98
  3056                           ;newmain.c: 95: else
  3057                           ;newmain.c: 96: {
  3058                           ;newmain.c: 98: RC7 = 0;
  3059  03E3  1387               	bcf	(63/8),(63)&7
  3060                           	line	99
  3061                           	
  3062  03E4                     l6042:	
  3063                           ;newmain.c: 99: lastMotor = 2;
  3064  03E4  3002               	movlw	low(02h)
  3065  03E5  00C2               	movwf	(_lastMotor)
  3066  03E6  3000               	movlw	high(02h)
  3067  03E7  00C3               	movwf	((_lastMotor))+1
  3068  03E8  2BE9               	goto	l1527
  3069                           	line	100
  3070                           	
  3071  03E9                     l1526:	
  3072                           	line	101
  3073                           	
  3074  03E9                     l1527:	
  3075  03E9  0008               	return
  3076                           	opt stack 0
  3077                           GLOBAL	__end_of_controlMotor
  3078  03EA                     	__end_of_controlMotor:
  3079 ;; =============== function _controlMotor ends ============
  3080                           
  3081                           	signat	_controlMotor,8312
  3082                           	global	__delay_ms
  3083                           psect	text441,local,class=CODE,delta=2
  3084                           global __ptext441
  3085  040E                     __ptext441:
  3086                           
  3087 ;; *************** function __delay_ms *****************
  3088 ;; Defined at:
  3089 ;;		line 45 in file "newmain.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  ms              2    0[COMMON] unsigned int 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  us              1    4[COMMON] unsigned char 
  3094 ;;  i               1    3[COMMON] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;		None               void
  3097 ;; Registers used:
  3098 ;;		wreg, status,2, status,0
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3104 ;;      Params:         2       0       0       0       0
  3105 ;;      Locals:         2       0       0       0       0
  3106 ;;      Temps:          1       0       0       0       0
  3107 ;;      Totals:         5       0       0       0       0
  3108 ;;Total ram usage:        5 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_doDelay
  3114 ;;		_main
  3115 ;;		_controlBuzzer
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           psect	text441
  3119                           	file	"newmain.c"
  3120                           	line	45
  3121                           	global	__size_of__delay_ms
  3122  0026                     	__size_of__delay_ms	equ	__end_of__delay_ms-__delay_ms
  3123                           	
  3124  040E                     __delay_ms:	
  3125                           	opt	stack 6
  3126                           ; Regs used in __delay_ms: [wreg+status,2+status,0]
  3127                           	line	47
  3128                           ;newmain.c: 46: unsigned char i;
  3129                           ;newmain.c: 47: do
  3130                           	
  3131  040E                     l1513:	
  3132                           	line	49
  3133                           	
  3134  040E                     l6026:	
  3135                           ;newmain.c: 48: {
  3136                           ;newmain.c: 49: i = 4;
  3137  040E  3004               	movlw	(04h)
  3138  040F  00F2               	movwf	(??__delay_ms+0)+0
  3139  0410  0872               	movf	(??__delay_ms+0)+0,w
  3140  0411  00F3               	movwf	(__delay_ms@i)
  3141                           	line	50
  3142                           ;newmain.c: 50: do
  3143                           	
  3144  0412                     l1514:	
  3145                           	line	52
  3146                           ;newmain.c: 51: {
  3147                           ;newmain.c: 52: { unsigned char us; us = (250)/(12000000/1700000L)|1; while(--us != 0) c
                                 ontinue; };
  3148  0412  3023               	movlw	(023h)
  3149  0413  00F2               	movwf	(??__delay_ms+0)+0
  3150  0414  0872               	movf	(??__delay_ms+0)+0,w
  3151  0415  00F4               	movwf	(__delay_ms@us)
  3152  0416  2C18               	goto	l6028
  3153                           	
  3154  0417                     l1516:	
  3155  0417  2C18               	goto	l6028
  3156                           	
  3157  0418                     l1515:	
  3158                           	
  3159  0418                     l6028:	
  3160  0418  3001               	movlw	low(01h)
  3161  0419  02F4               	subwf	(__delay_ms@us),f
  3162  041A  1D03               	btfss	status,2
  3163  041B  2C1D               	goto	u2401
  3164  041C  2C1E               	goto	u2400
  3165  041D                     u2401:
  3166  041D  2C18               	goto	l6028
  3167  041E                     u2400:
  3168  041E  2C1F               	goto	l6030
  3169                           	
  3170  041F                     l1517:	
  3171                           	line	53
  3172                           	
  3173  041F                     l6030:	
  3174                           ;newmain.c: 53: } while(--i);
  3175  041F  3001               	movlw	low(01h)
  3176  0420  02F3               	subwf	(__delay_ms@i),f
  3177  0421  1D03               	btfss	status,2
  3178  0422  2C24               	goto	u2411
  3179  0423  2C25               	goto	u2410
  3180  0424                     u2411:
  3181  0424  2C12               	goto	l1514
  3182  0425                     u2410:
  3183  0425  2C26               	goto	l6032
  3184                           	
  3185  0426                     l1518:	
  3186                           	line	54
  3187                           	
  3188  0426                     l6032:	
  3189                           ;newmain.c: 54: } while(--ms);
  3190  0426  3001               	movlw	low(01h)
  3191  0427  02F0               	subwf	(__delay_ms@ms),f
  3192  0428  3000               	movlw	high(01h)
  3193  0429  1C03               	skipc
  3194  042A  03F1               	decf	(__delay_ms@ms+1),f
  3195  042B  02F1               	subwf	(__delay_ms@ms+1),f
  3196  042C  0871               	movf	(((__delay_ms@ms+1))),w
  3197  042D  0470               	iorwf	(((__delay_ms@ms))),w
  3198  042E  1D03               	skipz
  3199  042F  2C31               	goto	u2421
  3200  0430  2C32               	goto	u2420
  3201  0431                     u2421:
  3202  0431  2C0E               	goto	l1513
  3203  0432                     u2420:
  3204  0432  2C33               	goto	l1520
  3205                           	
  3206  0433                     l1519:	
  3207                           	line	55
  3208                           	
  3209  0433                     l1520:	
  3210  0433  0008               	return
  3211                           	opt stack 0
  3212                           GLOBAL	__end_of__delay_ms
  3213  0434                     	__end_of__delay_ms:
  3214 ;; =============== function __delay_ms ends ============
  3215                           
  3216                           	signat	__delay_ms,4216
  3217                           psect	text442,local,class=CODE,delta=2
  3218                           global __ptext442
  3219  0000                     __ptext442:
  3220                           	global	btemp
  3221  007E                     	btemp set 07Eh
  3222                           
  3223                           	DABS	1,126,2	;btemp
  3224                           	global	wtemp0
  3225  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Thu Mar  8 17:09:01 2012

                    pc 0002                     _RD 0C60                     _WR 0C61                     fsr 0004  
                  _GIE 005F                    _RA1 0029                    _RA2 002A                    _RA3 002B  
                  _RC3 003B                    _RC4 003C                    _RC6 003E                    _RC7 003F  
                  fsr0 0004        __end_of_ADCInit 04F0        __end_of_ADCRead 048D                    indf 0000  
          lcd_goto@pos 0072                   l1520 0433                   l1513 040E                   l1514 0412  
                 l1530 04A4                   l1515 0418                   l1523 03D3                   l1531 04BC  
                 l1516 0417                   l1524 03DA                   l1532 04BB                   l1517 041F  
                 l1525 03E3                   l1533 04BC                   l1518 0426                   l1526 03E9  
                 l1550 04D2                   l1542 06FE                   l1519 0433                   l1527 03E9  
                 l1551 04EA                   l3071 0400                   l1552 04DD                   l1560 0476  
                 l3080 037F                   l3072 03EF                   l1553 04E9                   l1561 048C  
                 l3065 03C7                   l3073 040D                   l1545 039A                   l1554 04E8  
                 l3074 040D                   l1570 07FC                   l1555 04EF                   l3083 0545  
                 l1571 07FD                   l1548 04C7                   l3068 03AD                   l1572 07FD  
                 l1564 0722                   l1549 04EB                   l3077 0373                   l1565 0728  
                 l1558 0472                   l1566 0729                   l1559 0472                   l1567 073B  
                 l1568 07D1                   l1569 07FB                   l6030 041F                   l6022 05B2  
                 l6032 0426                   l6040 03E1                   l6024 05B4                   l6026 040E  
                 l6042 03E4                   l6034 03C8                   l6028 0418                   l6036 03CF  
                 l6300 0576                   l6038 03D6                   l6070 04D2                   l6062 04BD  
                 l6310 05B2                   l6302 059E                   l6072 04D9                   l6064 04C3  
                 l6080 0461                   l6312 05B5                   l6304 05A0                   l6400 0400  
                 l6074 04DD                   l6066 04C7                   l6090 048C                   l6082 0464  
                 l6170 05CB                   l6162 05B6                   l6306 05A2                   l6402 036A  
                 l6410 03A4                   l6076 04E4                   l6068 04CE                   l6084 046F  
                 l6180 05FE                   l6172 05D8                   l6164 05BA                   l6308 05B0  
                 l6404 036D                   l6412 038E                   l6420 04FA                   l6078 04EB  
                 l6086 0470                   l6190 062F                   l6182 0609                   l6174 05E0  
                 l6166 05C2                   l6406 039B                   l6430 0516                   l6422 04FD  
                 l6414 04F0                   l6088 0477                   l6184 0611                   l6176 05E4  
                 l6168 05C9                   l6360 048D                   l4656 0444                   l6408 039E  
                 l6440 052D                   l6432 0519                   l6424 04FE                   l6416 04F8  
                 l4657 045F                   l6186 0619                   l6178 05EE                   l6362 0496  
                 l6370 03B3                   l6442 052E                   l6434 051F                   l6426 050C  
                 l6418 04F9                   l6450 0631                   l6188 062B                   l4860 05E0  
                 l4852 05CA                   l6364 04A4                   l6380 03C6                   l6372 03C0  
                 l6444 0534                   l6436 0522                   l6428 050D                   l6460 06B9  
                 l6452 0635                   l4861 05FD                   l4862 0609                   l4854 05C2  
                 l6294 0546                   l6366 04AD                   l6374 03C1                   l6382 0434  
                 l6390 0375                   l6446 053A                   l6438 052C                   l6470 06F8  
                 l6462 06C5                   l6454 0686                   l4863 05FE                   l4855 0630  
                 l4687 0572                   l4864 060D                   l4856 05D8                   l4688 059E  
                 l6296 054A                   l6376 03C2                   l6368 03AF                   l6384 043B  
                 l6392 0378                   l6448 053F                   l6464 06D7                   l6456 0692  
                 l6480 0718                   l6472 06FF                   l4865 0617                   l4857 05CB  
                 l4689 05B5                   l4866 0630                   l4858 05DF                   l6298 0572  
                 l6378 03C5                   l6386 0444                   l6394 03EB                   l6466 06E3  
                 l6458 069E                   l6490 07B5                   l6482 0722                   l6474 0704  
                 l4859 05F6                   l6388 045F                   l6396 03EF                   l6468 06EF  
                 l6492 07B6                   l6484 0729                   l6476 070D                   l6398 03FB  
                 l6494 07BF                   l6486 07A9                   l6478 0712                   l6496 07D2  
                 l6488 07AF                   l6498 07DB                   _ADON 00F8                   STR_1 0009  
                 STR_2 0010                   u3101 0564                   u3110 0576                   u3102 0565  
                 u3111 0575                   u3103 056A                   u2400 041E                   u3104 056B  
                 u3200 0496                   u2401 041D                   u3121 0590                   u3201 0495  
                 u2410 0425                   u3130 05B0                   u3122 0591                   u3210 04AD  
                 u2411 0424                   u3131 05AF                   u3123 0596                   u3211 04AC  
                 u2420 0432                   u2500 0476                   u3124 0597                   u2421 0431  
                 u2501 0475                   u2430 03CF                   u3230 043B                   u2431 03CE  
                 u3135 05AC                   u3231 043A                   u2440 03E1                   u3240 040C  
                 u2441 03E0                   u3225 03B6                   u3241 040B                   u2450 04C3  
                 u3090 054A                   u3250 07AF                   u2451 04C2                   u3091 0549  
                 u3307 0525                   u3251 07AE                   u2460 04CE                   u3260 07B5  
                 u2461 04CD                   u3317 03A8                   u3261 07B4                   u2470 04D9  
                 u2471 04D8                   u3327 03B1                   u2480 04E4                   u2800 05FC  
                 u2481 04E3                   u2801 05FB                   u2820 060D                   u2821 060C  
                 u3277 0503                   u2830 0611                   u2750 05BA                   u2495 0467  
                 u2831 0610                   u2815 0601                   u3287 0512                   u2840 0622  
                 u2760 05C1                   u2761 05C0                   u3297 051C                   u2850 062F  
                 u2780 05DE                   u2845 061E                   u2781 05DD                   u2775 05D0  
                 u2795 05EF                   _WREN 0C62                   _main 06FF           ___ftpack@arg 0070  
          main@rightpt 0030           ___ftpack@exp 0073                   btemp 007E                   _stop 003C  
                 start 0000          ?_controlMotor 0070                  ?_main 0070     controlMotor@Leftpt 0070  
                _EEADR 010D                  _CARRY 0018        __end_of_doDelay 06FF           __delay_ms@ms 0070  
         __delay_ms@us 0074                  _PORTD 0008                  _TRISA 0085                  _TRISB 0086  
                _TRISC 0087                  _TRISD 0088                  _TRISE 0089          ___awtoft@sign 002B  
                _count 0034                  _ticks 0044          ___ftpack@sign 0074                  _start 0038  
                pclath 000A                  status 0003                  wtemp0 007E   __end_of_lcdCountdown 039B  
         __end_of_main 0800         ??_controlMotor 0074           ?_searchTrack 0070              ??_ADCInit 0072  
            ??_ADCRead 0072                 ??_main 002C              ADCRead@ch 0076                 _ADCON0 001F  
               _ADCON1 009F                 _ADRESH 001E                 _ADRESL 009E                 _EEDATA 010C  
               _EECON1 018C                 _EECON2 018D       __end_of___awtoft 0460       __end_of___ftpack 0631  
  controlMotor@Rightpt 0072                 _TRISE0 0448                 _TRISE1 0449                 _TRISE2 044A  
               _TRISE3 044B       __end_of_lcd_init 0546       __end_of_lcd_goto 0380       __end_of_lcd_puts 040E  
               ___ftge 0546              ??_doDelay 0075                 clrloop 0362             ___ftge@ff1 0078  
           ___ftge@ff2 007B     __size_of__delay_ms 0026             ___awtoft@c 0026         __pcstackCOMMON 0070  
   __size_of_lcd_clear 0013     __size_of_lcd_putch 000B     __size_of_lcd_write 001A             __pbssBANK0 0034  
 __end_of_controlMotor 03EA  __size_of_lcdCountdown 000E             __pmaintext 06FF                ?___ftge 0078  
              _ADCInit 04BD                _ADCRead 0460              ?___awtoft 0026              ?___ftpack 0070  
 __size_of_searchTrack 0030      __end_of__delay_ms 0434                _GO_DONE 00F9           _lcdCountdown 038D  
            ?_lcd_init 0070              ?_lcd_goto 0070              ?_lcd_puts 0070      __end_of_lcd_clear 03AE  
      __size_of___ftge 0070      __end_of_lcd_putch 0374      __end_of_lcd_write 03C8                _doDelay 0631  
           ??___awtoft 0029             ??___ftpack 0075                _clock_t 0040             ??_lcd_init 0074  
           ??_lcd_goto 0072             ??_lcd_puts 0072   end_of_initialization 0389  __size_of_controlMotor 0022  
   ADCInit@ADC_Channel 0070             main@leftpt 002E             lcd_putch@c 0072             lcd_write@c 0071  
       __end_of___ftge 05B6            __delay_ms@i 0073           _controlMotor 03C8    start_initialization 0380  
   lcd_init@init_value 0076               ??___ftge 0020               ?_ADCInit 0070               ?_ADCRead 0070  
    __size_of___awtoft 002C      __size_of___ftpack 007B          __pcstackBANK0 0020              __delay_ms 040E  
    __size_of_lcd_init 0056      __size_of_lcd_goto 000C      __size_of_lcd_puts 0024              __ptext430 0369  
            __ptext431 03EA              __ptext440 03C8              __ptext432 0374              __ptext441 040E  
            __ptext433 0434              __ptext425 0000              __ptext442 0000              __ptext434 03AE  
            __ptext426 0631              __ptext435 048D              __ptext427 04F0              __ptext436 0546  
            __ptext428 038D              __ptext437 05B6              __ptext429 039B              __ptext438 0460  
            __ptext439 04BD          ??_searchTrack 0074               ?_doDelay 0070              _lcd_clear 039B  
            __pstrings 0003              _lcd_putch 0369              _lcd_write 03AE              _lastMotor 0042  
           ?__delay_ms 0070             ?_lcd_clear 0070          lcdCountdown@t 0073       __size_of_ADCInit 0033  
     __size_of_ADCRead 002D             ?_lcd_putch 0070            __stringbase 0008             ?_lcd_write 0070  
  __end_of_searchTrack 04BD              lcd_puts@s 0073       __size_of_doDelay 00CE               ___awtoft 0434  
             ___ftpack 05B6            ??__delay_ms 0072               _lcd_init 04F0               _lcd_goto 0374  
             _lcd_puts 03EA          __size_of_main 0101               clear_ram 0361            _searchTrack 048D  
          ??_lcd_clear 0072               main@read 0032            ??_lcd_putch 0072            ??_lcd_write 0070  
        ?_lcdCountdown 0070              stringcode 0003         ??_lcdCountdown 0073               stringdir 0003  
             stringtab 0003  
