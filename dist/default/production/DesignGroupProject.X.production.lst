

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Wed May  9 10:06:00 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 11 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 11 "newmain.c"
    45  2007  FFF5               	dw 0xFFFD & 0xFFF7 ;#
    46                           	FNCALL	_main,_ADCInit
    47                           	FNCALL	_main,_readchannel
    48                           	FNCALL	_main,_searchTrack
    49                           	FNCALL	_main,_controlMotor
    50                           	FNCALL	_searchTrack,_controlMotor
    51                           	FNROOT	_main
    52                           	global	_count
    53                           	global	_start
    54                           	global	_stop
    55                           	global	_clock_t
    56                           	global	_lastMotor
    57                           	global	_ticks
    58                           	global	_ADCON0
    59                           psect	text133,local,class=CODE,delta=2
    60                           global __ptext133
    61  0000                     __ptext133:
    62  001F                     _ADCON0	set	31
    63                           	global	_ADRESH
    64  001E                     _ADRESH	set	30
    65                           	global	_PORTA
    66  0005                     _PORTA	set	5
    67                           	global	_PORTB
    68  0006                     _PORTB	set	6
    69                           	global	_PORTC
    70  0007                     _PORTC	set	7
    71                           	global	_ADON
    72  00F8                     _ADON	set	248
    73                           	global	_CARRY
    74  0018                     _CARRY	set	24
    75                           	global	_GIE
    76  005F                     _GIE	set	95
    77                           	global	_GO_DONE
    78  00F9                     _GO_DONE	set	249
    79                           	global	_RB4
    80  0034                     _RB4	set	52
    81                           	global	_RB5
    82  0035                     _RB5	set	53
    83                           	global	_RB6
    84  0036                     _RB6	set	54
    85                           	global	_RC3
    86  003B                     _RC3	set	59
    87                           	global	_RC4
    88  003C                     _RC4	set	60
    89                           	global	_RC6
    90  003E                     _RC6	set	62
    91                           	global	_RC7
    92  003F                     _RC7	set	63
    93                           	global	_ANSEL
    94  0091                     _ANSEL	set	145
    95                           	global	_TRISA
    96  0085                     _TRISA	set	133
    97                           	global	_TRISB
    98  0086                     _TRISB	set	134
    99                           	global	_TRISC
   100  0087                     _TRISC	set	135
   101                           	global	_TRISE
   102  0089                     _TRISE	set	137
   103                           	global	_EEADR
   104  010D                     _EEADR	set	269
   105                           	global	_EEDATA
   106  010C                     _EEDATA	set	268
   107                           	global	_EECON1
   108  018C                     _EECON1	set	396
   109                           	global	_EECON2
   110  018D                     _EECON2	set	397
   111                           	global	_RD
   112  0C60                     _RD	set	3168
   113                           	global	_WR
   114  0C61                     _WR	set	3169
   115                           	global	_WREN
   116  0C62                     _WREN	set	3170
   117                           	file	"/tmp/cgtbEeXpk"
   118                           	line	#
   119                           psect cinit,class=CODE,delta=2
   120                           global start_initialization
   121  06E8                     start_initialization:
   122                           
   123                           psect	bssCOMMON,class=COMMON,space=1
   124                           global __pbssCOMMON
   125  007C                     __pbssCOMMON:
   126  007C                     _lastMotor:
   127  007C                            ds      2
   128                           
   129                           psect	bssBANK0,class=BANK0,space=1
   130                           global __pbssBANK0
   131  0020                     __pbssBANK0:
   132  0020                     _count:
   133  0020                            ds      4
   134                           
   135  0024                     _start:
   136  0024                            ds      4
   137                           
   138  0028                     _stop:
   139  0028                            ds      4
   140                           
   141  002C                     _clock_t:
   142  002C                            ds      2
   143                           
   144  002E                     _ticks:
   145  002E                            ds      2
   146                           
   147                           psect clrtext,class=CODE,delta=2
   148                           global clear_ram
   149                           ;	Called with FSR containing the base address, and
   150                           ;	W with the last address+1
   151  06E0                     clear_ram:
   152  06E0  0064               	clrwdt			;clear the watchdog before getting into this loop
   153  06E1                     clrloop:
   154  06E1  0180               	clrf	indf		;clear RAM location pointed to by FSR
   155  06E2  0A84               	incf	fsr,f		;increment pointer
   156  06E3  0604               	xorwf	fsr,w		;XOR with final address
   157  06E4  1903               	btfsc	status,2	;have we reached the end yet?
   158  06E5  3400               	retlw	0		;all done for this memory range, return
   159  06E6  0604               	xorwf	fsr,w		;XOR again to restore value
   160  06E7  2EE1               	goto	clrloop		;do the next byte
   161                           
   162                           ; Clear objects allocated to COMMON
   163                           psect cinit,class=CODE,delta=2
   164  06E8  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   165  06E9  01FD               	clrf	((__pbssCOMMON)+1)&07Fh
   166                           ; Clear objects allocated to BANK0
   167                           psect cinit,class=CODE,delta=2
   168  06EA  1383               	bcf	status, 7	;select IRP bank0
   169  06EB  3020               	movlw	low(__pbssBANK0)
   170  06EC  0084               	movwf	fsr
   171  06ED  3030               	movlw	low((__pbssBANK0)+010h)
   172  06EE  120A  118A  26E0   	fcall	clear_ram
              120A  118A         
   173                           psect cinit,class=CODE,delta=2
   174                           global end_of_initialization
   175                           
   176                           ;End of C runtime variable initialization code
   177                           
   178  06F3                     end_of_initialization:
   179  06F3  0183               clrf status
   180  06F4  120A  118A  2F7D   ljmp _main	;jump to C main() function
   181                           psect	cstackCOMMON,class=COMMON,space=1
   182                           global __pcstackCOMMON
   183  0070                     __pcstackCOMMON:
   184                           	global	?_controlMotor
   185  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   186                           	global	?_ADCInit
   187  0070                     ?_ADCInit:	; 0 bytes @ 0x0
   188                           	global	??_ADCInit
   189  0070                     ??_ADCInit:	; 0 bytes @ 0x0
   190                           	global	?_searchTrack
   191  0070                     ?_searchTrack:	; 2 bytes @ 0x0
   192                           	global	?_readchannel
   193  0070                     ?_readchannel:	; 2 bytes @ 0x0
   194                           	global	?_main
   195  0070                     ?_main:	; 2 bytes @ 0x0
   196                           	global	controlMotor@Leftpt
   197  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   198                           	global	readchannel@chan
   199  0070                     readchannel@chan:	; 2 bytes @ 0x0
   200  0070                     	ds	2
   201                           	global	??_readchannel
   202  0072                     ??_readchannel:	; 0 bytes @ 0x2
   203                           	global	controlMotor@Rightpt
   204  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   205  0072                     	ds	2
   206                           	global	??_controlMotor
   207  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   208                           	global	??_searchTrack
   209  0074                     ??_searchTrack:	; 0 bytes @ 0x4
   210                           	global	??_main
   211  0074                     ??_main:	; 0 bytes @ 0x4
   212  0074                     	ds	2
   213                           	global	main@leftpt
   214  0076                     main@leftpt:	; 2 bytes @ 0x6
   215  0076                     	ds	2
   216                           	global	main@rightpt
   217  0078                     main@rightpt:	; 2 bytes @ 0x8
   218  0078                     	ds	2
   219                           	global	main@read
   220  007A                     main@read:	; 2 bytes @ 0xA
   221  007A                     	ds	2
   222 ;;Data sizes: Strings 0, constant 0, data 0, bss 18, persistent 0 stack 0
   223 ;;Auto spaces:   Size  Autos    Used
   224 ;; COMMON          14     12      14
   225 ;; BANK0           80      0      16
   226 ;; BANK1           80      0       0
   227 ;; BANK3           96      0       0
   228 ;; BANK2           80      0       0
   229                           
   230 ;;
   231 ;; Pointer list with targets:
   232                           
   233 ;; ?_readchannel	int  size(1) Largest target is 0
   234 ;;
   235                           
   236                           
   237 ;;
   238 ;; Critical Paths under _main in COMMON
   239 ;;
   240 ;;   _main->_readchannel
   241 ;;   _main->_controlMotor
   242 ;;   _searchTrack->_controlMotor
   243 ;;
   244 ;; Critical Paths under _main in BANK0
   245 ;;
   246 ;;   None.
   247 ;;
   248 ;; Critical Paths under _main in BANK1
   249 ;;
   250 ;;   None.
   251 ;;
   252 ;; Critical Paths under _main in BANK3
   253 ;;
   254 ;;   None.
   255 ;;
   256 ;; Critical Paths under _main in BANK2
   257 ;;
   258 ;;   None.
   259                           
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   262 ;;
   263                           
   264 ;;
   265 ;;Call Graph Tables:
   266 ;;
   267 ;; ---------------------------------------------------------------------------------
   268 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   269 ;; ---------------------------------------------------------------------------------
   270 ;; (0) _main                                                 8     8      0     180
   271 ;;                                              4 COMMON     8     8      0
   272 ;;                            _ADCInit
   273 ;;                        _readchannel
   274 ;;                        _searchTrack
   275 ;;                       _controlMotor
   276 ;; ---------------------------------------------------------------------------------
   277 ;; (1) _searchTrack                                          0     0      0      30
   278 ;;                       _controlMotor
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (1) _readchannel                                          4     2      2      30
   281 ;;                                              0 COMMON     4     2      2
   282 ;; ---------------------------------------------------------------------------------
   283 ;; (1) _ADCInit                                              0     0      0       0
   284 ;; ---------------------------------------------------------------------------------
   285 ;; (1) _controlMotor                                         4     0      4      30
   286 ;;                                              0 COMMON     4     0      4
   287 ;; ---------------------------------------------------------------------------------
   288 ;; Estimated maximum stack depth 1
   289 ;; ---------------------------------------------------------------------------------
   290                           
   291 ;; Call Graph Graphs:
   292                           
   293 ;; _main (ROOT)
   294 ;;   _ADCInit
   295 ;;   _readchannel
   296 ;;   _searchTrack
   297 ;;     _controlMotor
   298 ;;   _controlMotor
   299 ;;
   300                           
   301 ;; Address spaces:
   302                           
   303 ;;Name               Size   Autos  Total    Cost      Usage
   304 ;;BITCOMMON            E      0       0       0        0.0%
   305 ;;EEDATA             100      0       0       0        0.0%
   306 ;;NULL                 0      0       0       0        0.0%
   307 ;;CODE                 0      0       0       0        0.0%
   308 ;;COMMON               E      C       E       1      100.0%
   309 ;;BITSFR0              0      0       0       1        0.0%
   310 ;;SFR0                 0      0       0       1        0.0%
   311 ;;BITSFR1              0      0       0       2        0.0%
   312 ;;SFR1                 0      0       0       2        0.0%
   313 ;;STACK                0      0       2       2        0.0%
   314 ;;BITBANK0            50      0       0       3        0.0%
   315 ;;BANK0               50      0      10       4       20.0%
   316 ;;BITSFR3              0      0       0       4        0.0%
   317 ;;SFR3                 0      0       0       4        0.0%
   318 ;;BITBANK1            50      0       0       5        0.0%
   319 ;;BITSFR2              0      0       0       5        0.0%
   320 ;;SFR2                 0      0       0       5        0.0%
   321 ;;BANK1               50      0       0       6        0.0%
   322 ;;BITBANK3            60      0       0       7        0.0%
   323 ;;BANK3               60      0       0       8        0.0%
   324 ;;BANK2               50      0       0       9        0.0%
   325 ;;ABS                  0      0      1E      10        0.0%
   326 ;;BITBANK2            50      0       0      11        0.0%
   327 ;;DATA                 0      0      20      12        0.0%
   328                           
   329                           	global	_main
   330                           psect	maintext,global,class=CODE,delta=2
   331                           global __pmaintext
   332  077D                     __pmaintext:
   333                           
   334 ;; *************** function _main *****************
   335 ;; Defined at:
   336 ;;		line 339 in file "newmain.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;  read            2   10[COMMON] int 
   341 ;;  rightpt         2    8[COMMON] int 
   342 ;;  leftpt          2    6[COMMON] int 
   343 ;; Return value:  Size  Location     Type
   344 ;;                  2  1560[COMMON] int 
   345 ;; Registers used:
   346 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   347 ;; Tracked objects:
   348 ;;		On entry : 17F/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   352 ;;      Params:         0       0       0       0       0
   353 ;;      Locals:         6       0       0       0       0
   354 ;;      Temps:          2       0       0       0       0
   355 ;;      Totals:         8       0       0       0       0
   356 ;;Total ram usage:        8 bytes
   357 ;; Hardware stack levels required when called:    2
   358 ;; This function calls:
   359 ;;		_ADCInit
   360 ;;		_readchannel
   361 ;;		_searchTrack
   362 ;;		_controlMotor
   363 ;; This function is called by:
   364 ;;		Startup code after reset
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           psect	maintext
   368                           	file	"newmain.c"
   369                           	line	339
   370                           	global	__size_of_main
   371  0083                     	__size_of_main	equ	__end_of_main-_main
   372                           	
   373  077D                     _main:	
   374                           	opt	stack 6
   375                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   376                           	line	341
   377                           	
   378  077D                     l6060:	
   379                           ;newmain.c: 341: TRISA = 0x00;
   380  077D  1683               	bsf	status, 5	;RP0=1, select bank1
   381  077E  1303               	bcf	status, 6	;RP1=0, select bank1
   382  077F  0185               	clrf	(133)^080h	;volatile
   383                           	line	342
   384                           ;newmain.c: 342: TRISB = 0x00;
   385  0780  0186               	clrf	(134)^080h	;volatile
   386                           	line	343
   387                           ;newmain.c: 343: TRISC = 0x00;
   388  0781  0187               	clrf	(135)^080h	;volatile
   389                           	line	345
   390                           	
   391  0782                     l6062:	
   392                           ;newmain.c: 345: TRISE = 0b11000000;
   393  0782  30C0               	movlw	(0C0h)
   394  0783  0089               	movwf	(137)^080h	;volatile
   395                           	line	348
   396                           	
   397  0784                     l6064:	
   398                           ;newmain.c: 348: PORTA = 0b00000000;
   399  0784  1283               	bcf	status, 5	;RP0=0, select bank0
   400  0785  1303               	bcf	status, 6	;RP1=0, select bank0
   401  0786  0185               	clrf	(5)	;volatile
   402                           	line	349
   403                           	
   404  0787                     l6066:	
   405                           ;newmain.c: 349: PORTB = 0b00000000;
   406  0787  0186               	clrf	(6)	;volatile
   407                           	line	350
   408                           	
   409  0788                     l6068:	
   410                           ;newmain.c: 350: PORTC = 0b00000000;
   411  0788  0187               	clrf	(7)	;volatile
   412                           	line	368
   413                           	
   414  0789                     l6070:	
   415                           ;newmain.c: 368: ADCInit ();
   416  0789  120A  118A  26DB   	fcall	_ADCInit
              120A  118A         
   417  078E  2F8F               	goto	l6072
   418                           	line	372
   419                           ;newmain.c: 369: int leftpt, rightpt;
   420                           ;newmain.c: 370: int read;
   421                           ;newmain.c: 372: while (1)
   422                           	
   423  078F                     l1561:	
   424                           	line	377
   425                           	
   426  078F                     l6072:	
   427                           ;newmain.c: 373: {
   428                           ;newmain.c: 377: read = readchannel(0);
   429  078F  3000               	movlw	low(0)
   430  0790  00F0               	movwf	(?_readchannel)
   431  0791  3000               	movlw	high(0)
   432  0792  00F1               	movwf	((?_readchannel))+1
   433  0793  120A  118A  2745   	fcall	_readchannel
              120A  118A         
   434  0798  0871               	movf	(1+(?_readchannel)),w
   435  0799  01FB               	clrf	(main@read+1)
   436  079A  07FB               	addwf	(main@read+1)
   437  079B  0870               	movf	(0+(?_readchannel)),w
   438  079C  01FA               	clrf	(main@read)
   439  079D  07FA               	addwf	(main@read)
   440                           
   441                           	line	378
   442                           	
   443  079E                     l6074:	
   444                           ;newmain.c: 378: leftpt = (read > 150) ? 1 : 0;
   445  079E  087B               	movf	(main@read+1),w
   446  079F  3A80               	xorlw	80h
   447  07A0  00FF               	movwf	btemp+1
   448  07A1  3080               	movlw	(high(097h))^80h
   449  07A2  027F               	subwf	btemp+1,w
   450  07A3  1D03               	skipz
   451  07A4  2FA7               	goto	u2575
   452  07A5  3097               	movlw	low(097h)
   453  07A6  027A               	subwf	(main@read),w
   454  07A7                     u2575:
   455                           
   456  07A7  3000               	movlw	0
   457  07A8  1803               	skipnc
   458  07A9  3001               	movlw	1
   459  07AA  00F4               	movwf	(??_main+0)+0
   460  07AB  01F5               	clrf	(??_main+0)+0+1
   461  07AC  0874               	movf	0+(??_main+0)+0,w
   462  07AD  00F6               	movwf	(main@leftpt)
   463  07AE  0875               	movf	1+(??_main+0)+0,w
   464  07AF  00F7               	movwf	(main@leftpt+1)
   465                           	line	382
   466                           	
   467  07B0                     l6076:	
   468                           ;newmain.c: 382: read = readchannel(1);
   469  07B0  3001               	movlw	low(01h)
   470  07B1  00F0               	movwf	(?_readchannel)
   471  07B2  3000               	movlw	high(01h)
   472  07B3  00F1               	movwf	((?_readchannel))+1
   473  07B4  120A  118A  2745   	fcall	_readchannel
              120A  118A         
   474  07B9  0871               	movf	(1+(?_readchannel)),w
   475  07BA  01FB               	clrf	(main@read+1)
   476  07BB  07FB               	addwf	(main@read+1)
   477  07BC  0870               	movf	(0+(?_readchannel)),w
   478  07BD  01FA               	clrf	(main@read)
   479  07BE  07FA               	addwf	(main@read)
   480                           
   481                           	line	383
   482                           	
   483  07BF                     l6078:	
   484                           ;newmain.c: 383: rightpt = (read > 150) ? 1 : 0;
   485  07BF  087B               	movf	(main@read+1),w
   486  07C0  3A80               	xorlw	80h
   487  07C1  00FF               	movwf	btemp+1
   488  07C2  3080               	movlw	(high(097h))^80h
   489  07C3  027F               	subwf	btemp+1,w
   490  07C4  1D03               	skipz
   491  07C5  2FC8               	goto	u2585
   492  07C6  3097               	movlw	low(097h)
   493  07C7  027A               	subwf	(main@read),w
   494  07C8                     u2585:
   495                           
   496  07C8  3000               	movlw	0
   497  07C9  1803               	skipnc
   498  07CA  3001               	movlw	1
   499  07CB  00F4               	movwf	(??_main+0)+0
   500  07CC  01F5               	clrf	(??_main+0)+0+1
   501  07CD  0874               	movf	0+(??_main+0)+0,w
   502  07CE  00F8               	movwf	(main@rightpt)
   503  07CF  0875               	movf	1+(??_main+0)+0,w
   504  07D0  00F9               	movwf	(main@rightpt+1)
   505                           	line	388
   506                           	
   507  07D1                     l6080:	
   508                           ;newmain.c: 388: if((leftpt==0) && (rightpt==0))
   509  07D1  0877               	movf	((main@leftpt+1)),w
   510  07D2  0476               	iorwf	((main@leftpt)),w
   511  07D3  1D03               	skipz
   512  07D4  2FD6               	goto	u2591
   513  07D5  2FD7               	goto	u2590
   514  07D6                     u2591:
   515  07D6  2FE6               	goto	l1562
   516  07D7                     u2590:
   517                           	
   518  07D7                     l6082:	
   519  07D7  0879               	movf	((main@rightpt+1)),w
   520  07D8  0478               	iorwf	((main@rightpt)),w
   521  07D9  1D03               	skipz
   522  07DA  2FDC               	goto	u2601
   523  07DB  2FDD               	goto	u2600
   524  07DC                     u2601:
   525  07DC  2FE6               	goto	l1562
   526  07DD                     u2600:
   527                           	line	390
   528                           	
   529  07DD                     l6084:	
   530                           ;newmain.c: 389: {
   531                           ;newmain.c: 390: RC3 = 1;
   532  07DD  1283               	bcf	status, 5	;RP0=0, select bank0
   533  07DE  1303               	bcf	status, 6	;RP1=0, select bank0
   534  07DF  1587               	bsf	(59/8),(59)&7
   535                           	line	391
   536                           	
   537  07E0                     l6086:	
   538                           ;newmain.c: 391: searchTrack();
   539  07E0  120A  118A  2719   	fcall	_searchTrack
              120A  118A         
   540                           	line	392
   541                           ;newmain.c: 392: }
   542  07E5  2F8F               	goto	l6072
   543                           	line	393
   544                           	
   545  07E6                     l1562:	
   546                           	line	395
   547                           ;newmain.c: 393: else
   548                           ;newmain.c: 394: {
   549                           ;newmain.c: 395: RC3 = 0;
   550  07E6  1283               	bcf	status, 5	;RP0=0, select bank0
   551  07E7  1303               	bcf	status, 6	;RP1=0, select bank0
   552  07E8  1187               	bcf	(59/8),(59)&7
   553                           	line	396
   554                           	
   555  07E9                     l6088:	
   556                           ;newmain.c: 396: controlMotor(leftpt, rightpt);
   557  07E9  0877               	movf	(main@leftpt+1),w
   558  07EA  01F1               	clrf	(?_controlMotor+1)
   559  07EB  07F1               	addwf	(?_controlMotor+1)
   560  07EC  0876               	movf	(main@leftpt),w
   561  07ED  01F0               	clrf	(?_controlMotor)
   562  07EE  07F0               	addwf	(?_controlMotor)
   563                           
   564  07EF  0879               	movf	(main@rightpt+1),w
   565  07F0  01F3               	clrf	1+(?_controlMotor)+02h
   566  07F1  07F3               	addwf	1+(?_controlMotor)+02h
   567  07F2  0878               	movf	(main@rightpt),w
   568  07F3  01F2               	clrf	0+(?_controlMotor)+02h
   569  07F4  07F2               	addwf	0+(?_controlMotor)+02h
   570                           
   571  07F5  120A  118A  26F7   	fcall	_controlMotor
              120A  118A         
   572  07FA  2F8F               	goto	l6072
   573                           	line	397
   574                           	
   575  07FB                     l1563:	
   576  07FB  2F8F               	goto	l6072
   577                           	line	398
   578                           	
   579  07FC                     l1564:	
   580                           	line	372
   581  07FC  2F8F               	goto	l6072
   582                           	
   583  07FD                     l1565:	
   584                           	line	400
   585                           	
   586  07FD                     l1566:	
   587                           	global	start
   588  07FD  120A  118A  2800   	ljmp	start
   589                           	opt stack 0
   590                           GLOBAL	__end_of_main
   591  0800                     	__end_of_main:
   592 ;; =============== function _main ends ============
   593                           
   594                           	signat	_main,90
   595                           	global	_searchTrack
   596                           psect	text134,local,class=CODE,delta=2
   597                           global __ptext134
   598  0719                     __ptext134:
   599                           
   600 ;; *************** function _searchTrack *****************
   601 ;; Defined at:
   602 ;;		line 111 in file "newmain.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;                  2  1521[COMMON] int 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    1
   623 ;; This function calls:
   624 ;;		_controlMotor
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           psect	text134
   630                           	file	"newmain.c"
   631                           	line	111
   632                           	global	__size_of_searchTrack
   633  002C                     	__size_of_searchTrack	equ	__end_of_searchTrack-_searchTrack
   634                           	
   635  0719                     _searchTrack:	
   636                           	opt	stack 6
   637                           ; Regs used in _searchTrack: [wreg+status,2+status,0+pclath+cstack]
   638                           	line	112
   639                           	
   640  0719                     l6052:	
   641                           ;newmain.c: 112: if (lastMotor == 1)
   642  0719  3001               	movlw	01h
   643  071A  067C               	xorwf	(_lastMotor),w
   644  071B  047D               	iorwf	(_lastMotor+1),w
   645  071C  1D03               	skipz
   646  071D  2F1F               	goto	u2551
   647  071E  2F20               	goto	u2550
   648  071F                     u2551:
   649  071F  2F2E               	goto	l6056
   650  0720                     u2550:
   651                           	line	114
   652                           	
   653  0720                     l6054:	
   654                           ;newmain.c: 113: {
   655                           ;newmain.c: 114: controlMotor(1, 0);
   656  0720  3001               	movlw	low(01h)
   657  0721  00F0               	movwf	(?_controlMotor)
   658  0722  3000               	movlw	high(01h)
   659  0723  00F1               	movwf	((?_controlMotor))+1
   660  0724  3000               	movlw	low(0)
   661  0725  00F2               	movwf	0+(?_controlMotor)+02h
   662  0726  3000               	movlw	high(0)
   663  0727  00F3               	movwf	(0+(?_controlMotor)+02h)+1
   664  0728  120A  118A  26F7   	fcall	_controlMotor
              120A  118A         
   665                           	line	115
   666                           ;newmain.c: 115: }
   667  072D  2F44               	goto	l1525
   668                           	line	116
   669                           	
   670  072E                     l1522:	
   671                           	
   672  072E                     l6056:	
   673                           ;newmain.c: 116: else if (lastMotor == 2)
   674  072E  3002               	movlw	02h
   675  072F  067C               	xorwf	(_lastMotor),w
   676  0730  047D               	iorwf	(_lastMotor+1),w
   677  0731  1D03               	skipz
   678  0732  2F34               	goto	u2561
   679  0733  2F35               	goto	u2560
   680  0734                     u2561:
   681  0734  2F44               	goto	l1525
   682  0735                     u2560:
   683                           	line	118
   684                           	
   685  0735                     l6058:	
   686                           ;newmain.c: 117: {
   687                           ;newmain.c: 118: controlMotor(0, 1);
   688  0735  3000               	movlw	low(0)
   689  0736  00F0               	movwf	(?_controlMotor)
   690  0737  3000               	movlw	high(0)
   691  0738  00F1               	movwf	((?_controlMotor))+1
   692  0739  3001               	movlw	low(01h)
   693  073A  00F2               	movwf	0+(?_controlMotor)+02h
   694  073B  3000               	movlw	high(01h)
   695  073C  00F3               	movwf	(0+(?_controlMotor)+02h)+1
   696  073D  120A  118A  26F7   	fcall	_controlMotor
              120A  118A         
   697  0742  2F44               	goto	l1525
   698                           	line	119
   699                           	
   700  0743                     l1524:	
   701  0743  2F44               	goto	l1525
   702                           	line	120
   703                           	
   704  0744                     l1523:	
   705                           	
   706  0744                     l1525:	
   707  0744  0008               	return
   708                           	opt stack 0
   709                           GLOBAL	__end_of_searchTrack
   710  0745                     	__end_of_searchTrack:
   711 ;; =============== function _searchTrack ends ============
   712                           
   713                           	signat	_searchTrack,90
   714                           	global	_readchannel
   715                           psect	text135,local,class=CODE,delta=2
   716                           global __ptext135
   717  0745                     __ptext135:
   718                           
   719 ;; *************** function _readchannel *****************
   720 ;; Defined at:
   721 ;;		line 313 in file "newmain.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  chan            2    0[COMMON] int 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  2    0[COMMON] int 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   735 ;;      Params:         2       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0
   737 ;;      Temps:          2       0       0       0       0
   738 ;;      Totals:         4       0       0       0       0
   739 ;;Total ram usage:        4 bytes
   740 ;; Hardware stack levels used:    1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           psect	text135
   748                           	file	"newmain.c"
   749                           	line	313
   750                           	global	__size_of_readchannel
   751  0038                     	__size_of_readchannel	equ	__end_of_readchannel-_readchannel
   752                           	
   753  0745                     _readchannel:	
   754                           	opt	stack 7
   755                           ; Regs used in _readchannel: [wreg+status,2+status,0]
   756                           	line	314
   757                           	
   758  0745                     l5044:	
   759                           ;newmain.c: 314: if (chan == 0)
   760  0745  0871               	movf	((readchannel@chan+1)),w
   761  0746  0470               	iorwf	((readchannel@chan)),w
   762  0747  1D03               	skipz
   763  0748  2F4A               	goto	u81
   764  0749  2F4B               	goto	u80
   765  074A                     u81:
   766  074A  2F60               	goto	l5056
   767  074B                     u80:
   768                           	line	316
   769                           	
   770  074B                     l5046:	
   771                           ;newmain.c: 315: {
   772                           ;newmain.c: 316: ADCON0 = 0b00010101;
   773  074B  3015               	movlw	(015h)
   774  074C  1283               	bcf	status, 5	;RP0=0, select bank0
   775  074D  1303               	bcf	status, 6	;RP1=0, select bank0
   776  074E  009F               	movwf	(31)	;volatile
   777                           	line	318
   778                           	
   779  074F                     l5048:	
   780                           ;newmain.c: 318: GO_DONE=1;
   781  074F  149F               	bsf	(249/8),(249)&7
   782                           	line	319
   783                           ;newmain.c: 319: while(GO_DONE);
   784  0750  2F51               	goto	l1550
   785                           	
   786  0751                     l1551:	
   787                           	
   788  0751                     l1550:	
   789  0751  189F               	btfsc	(249/8),(249)&7
   790  0752  2F54               	goto	u91
   791  0753  2F55               	goto	u90
   792  0754                     u91:
   793  0754  2F51               	goto	l1550
   794  0755                     u90:
   795                           	
   796  0755                     l1552:	
   797                           	line	321
   798                           ;newmain.c: 321: ADON=0;
   799  0755  101F               	bcf	(248/8),(248)&7
   800                           	line	323
   801                           	
   802  0756                     l5050:	
   803                           ;newmain.c: 323: return ADRESH;
   804  0756  081E               	movf	(30),w	;volatile
   805  0757  00F2               	movwf	(??_readchannel+0)+0
   806  0758  01F3               	clrf	(??_readchannel+0)+0+1
   807  0759  0872               	movf	0+(??_readchannel+0)+0,w
   808  075A  00F0               	movwf	(?_readchannel)
   809  075B  0873               	movf	1+(??_readchannel+0)+0,w
   810  075C  00F1               	movwf	(?_readchannel+1)
   811  075D  2F7C               	goto	l1553
   812                           	
   813  075E                     l5052:	
   814  075E  2F7C               	goto	l1553
   815                           	line	324
   816                           	
   817  075F                     l5054:	
   818                           ;newmain.c: 324: }
   819  075F  2F7C               	goto	l1553
   820                           	line	325
   821                           	
   822  0760                     l1549:	
   823                           	
   824  0760                     l5056:	
   825                           ;newmain.c: 325: else if (chan == 1)
   826  0760  3001               	movlw	01h
   827  0761  0670               	xorwf	(readchannel@chan),w
   828  0762  0471               	iorwf	(readchannel@chan+1),w
   829  0763  1D03               	skipz
   830  0764  2F66               	goto	u101
   831  0765  2F67               	goto	u100
   832  0766                     u101:
   833  0766  2F7C               	goto	l1553
   834  0767                     u100:
   835                           	line	327
   836                           	
   837  0767                     l5058:	
   838                           ;newmain.c: 326: {
   839                           ;newmain.c: 327: ADCON0 = 0b00011001;
   840  0767  3019               	movlw	(019h)
   841  0768  1283               	bcf	status, 5	;RP0=0, select bank0
   842  0769  1303               	bcf	status, 6	;RP1=0, select bank0
   843  076A  009F               	movwf	(31)	;volatile
   844                           	line	329
   845                           	
   846  076B                     l5060:	
   847                           ;newmain.c: 329: GO_DONE=1;
   848  076B  149F               	bsf	(249/8),(249)&7
   849                           	line	330
   850                           ;newmain.c: 330: while(GO_DONE);
   851  076C  2F6D               	goto	l1556
   852                           	
   853  076D                     l1557:	
   854                           	
   855  076D                     l1556:	
   856  076D  189F               	btfsc	(249/8),(249)&7
   857  076E  2F70               	goto	u111
   858  076F  2F71               	goto	u110
   859  0770                     u111:
   860  0770  2F6D               	goto	l1556
   861  0771                     u110:
   862                           	
   863  0771                     l1558:	
   864                           	line	332
   865                           ;newmain.c: 332: ADON=0;
   866  0771  101F               	bcf	(248/8),(248)&7
   867                           	line	334
   868                           	
   869  0772                     l5062:	
   870                           ;newmain.c: 334: return ADRESH;
   871  0772  081E               	movf	(30),w	;volatile
   872  0773  00F2               	movwf	(??_readchannel+0)+0
   873  0774  01F3               	clrf	(??_readchannel+0)+0+1
   874  0775  0872               	movf	0+(??_readchannel+0)+0,w
   875  0776  00F0               	movwf	(?_readchannel)
   876  0777  0873               	movf	1+(??_readchannel+0)+0,w
   877  0778  00F1               	movwf	(?_readchannel+1)
   878  0779  2F7C               	goto	l1553
   879                           	
   880  077A                     l5064:	
   881  077A  2F7C               	goto	l1553
   882                           	line	335
   883                           	
   884  077B                     l1555:	
   885  077B  2F7C               	goto	l1553
   886                           	line	336
   887                           	
   888  077C                     l1554:	
   889                           	
   890  077C                     l1553:	
   891  077C  0008               	return
   892                           	opt stack 0
   893                           GLOBAL	__end_of_readchannel
   894  077D                     	__end_of_readchannel:
   895 ;; =============== function _readchannel ends ============
   896                           
   897                           	signat	_readchannel,4218
   898                           	global	_ADCInit
   899                           psect	text136,local,class=CODE,delta=2
   900                           global __ptext136
   901  06DB                     __ptext136:
   902                           
   903 ;; *************** function _ADCInit *****************
   904 ;; Defined at:
   905 ;;		line 227 in file "newmain.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;		None               void
   912 ;; Registers used:
   913 ;;		wreg
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   919 ;;      Params:         0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0
   921 ;;      Temps:          0       0       0       0       0
   922 ;;      Totals:         0       0       0       0       0
   923 ;;Total ram usage:        0 bytes
   924 ;; Hardware stack levels used:    1
   925 ;; This function calls:
   926 ;;		Nothing
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           psect	text136
   932                           	file	"newmain.c"
   933                           	line	227
   934                           	global	__size_of_ADCInit
   935  0005                     	__size_of_ADCInit	equ	__end_of_ADCInit-_ADCInit
   936                           	
   937  06DB                     _ADCInit:	
   938                           	opt	stack 7
   939                           ; Regs used in _ADCInit: [wreg]
   940                           	line	228
   941                           	
   942  06DB                     l5030:	
   943                           ;newmain.c: 228: ANSEL = 0b11111111;
   944  06DB  30FF               	movlw	(0FFh)
   945  06DC  1683               	bsf	status, 5	;RP0=1, select bank1
   946  06DD  1303               	bcf	status, 6	;RP1=0, select bank1
   947  06DE  0091               	movwf	(145)^080h	;volatile
   948                           	line	230
   949                           	
   950  06DF                     l1540:	
   951  06DF  0008               	return
   952                           	opt stack 0
   953                           GLOBAL	__end_of_ADCInit
   954  06E0                     	__end_of_ADCInit:
   955 ;; =============== function _ADCInit ends ============
   956                           
   957                           	signat	_ADCInit,88
   958                           	global	_controlMotor
   959                           psect	text137,local,class=CODE,delta=2
   960                           global __ptext137
   961  06F7                     __ptext137:
   962                           
   963 ;; *************** function _controlMotor *****************
   964 ;; Defined at:
   965 ;;		line 75 in file "newmain.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  Leftpt          2    0[COMMON] int 
   968 ;;  Rightpt         2    2[COMMON] int 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;		None               void
   973 ;; Registers used:
   974 ;;		wreg
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         4       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0
   982 ;;      Temps:          0       0       0       0       0
   983 ;;      Totals:         4       0       0       0       0
   984 ;;Total ram usage:        4 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_searchTrack
   990 ;;		_main
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           psect	text137
   994                           	file	"newmain.c"
   995                           	line	75
   996                           	global	__size_of_controlMotor
   997  0022                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
   998                           	
   999  06F7                     _controlMotor:	
  1000                           	opt	stack 7
  1001                           ; Regs used in _controlMotor: [wreg]
  1002                           	line	76
  1003                           	
  1004  06F7                     l4954:	
  1005                           ;newmain.c: 76: if (Leftpt == 1)
  1006  06F7  3001               	movlw	01h
  1007  06F8  0670               	xorwf	(controlMotor@Leftpt),w
  1008  06F9  0471               	iorwf	(controlMotor@Leftpt+1),w
  1009  06FA  1D03               	skipz
  1010  06FB  2EFD               	goto	u41
  1011  06FC  2EFE               	goto	u40
  1012  06FD                     u41:
  1013  06FD  2F02               	goto	l1515
  1014  06FE                     u40:
  1015                           	line	80
  1016                           	
  1017  06FE                     l4956:	
  1018                           ;newmain.c: 77: {
  1019                           ;newmain.c: 80: RC6 = 1;
  1020  06FE  1283               	bcf	status, 5	;RP0=0, select bank0
  1021  06FF  1303               	bcf	status, 6	;RP1=0, select bank0
  1022  0700  1707               	bsf	(62/8),(62)&7
  1023                           	line	81
  1024                           ;newmain.c: 81: }
  1025  0701  2F09               	goto	l1516
  1026                           	line	82
  1027                           	
  1028  0702                     l1515:	
  1029                           	line	86
  1030                           ;newmain.c: 82: else
  1031                           ;newmain.c: 83: {
  1032                           ;newmain.c: 86: RC6 = 0;
  1033  0702  1283               	bcf	status, 5	;RP0=0, select bank0
  1034  0703  1303               	bcf	status, 6	;RP1=0, select bank0
  1035  0704  1307               	bcf	(62/8),(62)&7
  1036                           	line	87
  1037                           	
  1038  0705                     l4958:	
  1039                           ;newmain.c: 87: lastMotor = 1;
  1040  0705  3001               	movlw	low(01h)
  1041  0706  00FC               	movwf	(_lastMotor)
  1042  0707  3000               	movlw	high(01h)
  1043  0708  00FD               	movwf	((_lastMotor))+1
  1044                           	line	88
  1045                           	
  1046  0709                     l1516:	
  1047                           	line	91
  1048                           ;newmain.c: 88: }
  1049                           ;newmain.c: 91: if (Rightpt == 1)
  1050  0709  3001               	movlw	01h
  1051  070A  0672               	xorwf	(controlMotor@Rightpt),w
  1052  070B  0473               	iorwf	(controlMotor@Rightpt+1),w
  1053  070C  1D03               	skipz
  1054  070D  2F0F               	goto	u51
  1055  070E  2F10               	goto	u50
  1056  070F                     u51:
  1057  070F  2F12               	goto	l1517
  1058  0710                     u50:
  1059                           	line	95
  1060                           	
  1061  0710                     l4960:	
  1062                           ;newmain.c: 92: {
  1063                           ;newmain.c: 95: RC7 = 1;
  1064  0710  1787               	bsf	(63/8),(63)&7
  1065                           	line	96
  1066                           ;newmain.c: 96: }
  1067  0711  2F18               	goto	l1519
  1068                           	line	97
  1069                           	
  1070  0712                     l1517:	
  1071                           	line	100
  1072                           ;newmain.c: 97: else
  1073                           ;newmain.c: 98: {
  1074                           ;newmain.c: 100: RC7 = 0;
  1075  0712  1387               	bcf	(63/8),(63)&7
  1076                           	line	101
  1077                           	
  1078  0713                     l4962:	
  1079                           ;newmain.c: 101: lastMotor = 2;
  1080  0713  3002               	movlw	low(02h)
  1081  0714  00FC               	movwf	(_lastMotor)
  1082  0715  3000               	movlw	high(02h)
  1083  0716  00FD               	movwf	((_lastMotor))+1
  1084  0717  2F18               	goto	l1519
  1085                           	line	102
  1086                           	
  1087  0718                     l1518:	
  1088                           	line	103
  1089                           	
  1090  0718                     l1519:	
  1091  0718  0008               	return
  1092                           	opt stack 0
  1093                           GLOBAL	__end_of_controlMotor
  1094  0719                     	__end_of_controlMotor:
  1095 ;; =============== function _controlMotor ends ============
  1096                           
  1097                           	signat	_controlMotor,8312
  1098                           psect	text138,local,class=CODE,delta=2
  1099                           global __ptext138
  1100  0000                     __ptext138:
  1101                           	global	btemp
  1102  007E                     	btemp set 07Eh
  1103                           
  1104                           	DABS	1,126,2	;btemp
  1105                           	global	wtemp0
  1106  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Wed May  9 10:06:00 2012

                   _RD 0C60                     u40 06FE                     u41 06FD                     u50 0710  
                   u51 070F                     u80 074B                     u81 074A                     u90 0755  
                   u91 0754                     _WR 0C61                     fsr 0004                    _GIE 005F  
                  _RB4 0034                    _RC3 003B                    _RB5 0035                    _RC4 003C  
                  _RB6 0036                    u100 0767                    _RC6 003E                    u101 0766  
                  _RC7 003F                    u110 0771                    u111 0770        __end_of_ADCInit 06E0  
                  indf 0000                   l1522 072E                   l1515 0702                   l1523 0744  
                 l1516 0709                   l1540 06DF                   l1524 0743                   l1517 0712  
                 l1525 0744                   l1518 0718                   l1550 0751                   l1519 0718  
                 l1551 0751                   l1552 0755                   l1553 077C                   l1561 078F  
                 l1554 077C                   l1562 07E6                   l1555 077B                   l1563 07FB  
                 l1556 076D                   l1564 07FC                   l1557 076D                   l1549 0760  
                 l1565 07FD                   l5030 06DB                   l1558 0771                   l1566 07FD  
                 l5050 0756                   l5060 076B                   l5052 075E                   l5044 0745  
                 l5062 0772                   l5054 075F                   l5046 074B                   l5064 077A  
                 l5048 074F                   l5056 0760                   l5058 0767                   l6052 0719  
                 l6060 077D                   l6054 0720                   l6070 0789                   l6062 0782  
                 l6056 072E                   l6080 07D1                   l6072 078F                   l6064 0784  
                 l6058 0735                   l6082 07D7                   l6074 079E                   l6066 0787  
                 l6084 07DD                   l6076 07B0                   l6068 0788                   l6086 07E0  
                 l6078 07BF                   l6088 07E9                   l4960 0710                   l4962 0713  
                 l4954 06F7                   l4956 06FE                   l4958 0705                   _ADON 00F8  
                 u2600 07DD                   u2601 07DC                   u2550 0720                   u2551 071F  
                 u2560 0735                   u2561 0734                   u2590 07D7                   u2591 07D6  
                 u2575 07A7                   u2585 07C8                   _WREN 0C62                   _main 077D  
          main@rightpt 0078                   btemp 007E                   _stop 0028                   start 0000  
        ?_controlMotor 0070                  ?_main 0070     controlMotor@Leftpt 0070                  _EEADR 010D  
                _CARRY 0018                  _ANSEL 0091                  _PORTA 0005                  _PORTB 0006  
                _PORTC 0007                  _TRISA 0085                  _TRISB 0086                  _TRISC 0087  
                _TRISE 0089           ?_readchannel 0070                  _count 0020                  _ticks 002E  
                _start 0024                  status 0003                  wtemp0 007E           __end_of_main 0800  
       ??_controlMotor 0074           ?_searchTrack 0070              ??_ADCInit 0070                 ??_main 0074  
               _ADCON0 001F                 _ADRESH 001E                 _EEDATA 010C                 _EECON1 018C  
               _EECON2 018D    controlMotor@Rightpt 0072                 clrloop 06E1         __pcstackCOMMON 0070  
           __pbssBANK0 0020   __size_of_readchannel 0038   __end_of_controlMotor 0719             __pmaintext 077D  
              _ADCInit 06DB   __size_of_searchTrack 002C                _GO_DONE 00F9                _clock_t 002C  
 end_of_initialization 06F3  __size_of_controlMotor 0022             main@leftpt 0076           _controlMotor 06F7  
  start_initialization 06E8               ?_ADCInit 0070            __pbssCOMMON 007C          ??_readchannel 0072  
            __ptext133 0000              __ptext134 0719              __ptext135 0745              __ptext136 06DB  
            __ptext137 06F7              __ptext138 0000          ??_searchTrack 0074              _lastMotor 007C  
  __end_of_readchannel 077D       __size_of_ADCInit 0005    __end_of_searchTrack 0745            _readchannel 0745  
      readchannel@chan 0070          __size_of_main 0083               clear_ram 06E0            _searchTrack 0719  
             main@read 007A  
