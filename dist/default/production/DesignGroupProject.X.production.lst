

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Fri May 18 15:36:10 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16LF1516
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0001                     indf1	equ	1
    35  0002                     pc	equ	2
    36  0002                     pcl	equ	2
    37  0003                     status	equ	3
    38  0004                     fsr0l	equ	4
    39  0005                     fsr0h	equ	5
    40  0006                     fsr1l	equ	6
    41  0007                     fsr1h	equ	7
    42  0008                     bsr	equ	8
    43  0009                     wreg	equ	9
    44  000B                     intcon	equ	11
    45  0001                     c	equ	1
    46  0000                     z	equ	0
    47  000A                     pclath	equ	10
    48                           # 19 "newmain.c"
    49                           	psect config,class=CONFIG,delta=2 ;#
    50                           # 19 "newmain.c"
    51  8007  FFE4               	dw 0xFFFC & 0xFFE7 ;#
    52                           	FNCALL	_main,_ADCInit
    53                           	FNCALL	_main,_readchannel
    54                           	FNCALL	_main,_controlMotor
    55                           	FNROOT	_main
    56                           	global	_count
    57                           	global	_start
    58                           	global	_stop
    59                           	global	_clock_t
    60                           	global	_ignore
    61                           	global	_ticks
    62                           	global	_lastMotor
    63                           	global	_PORTA
    64                           psect	text162,local,class=CODE,delta=2
    65                           global __ptext162
    66  0000                     __ptext162:
    67  000C                     _PORTA	set	12
    68                           	global	_PORTB
    69  000D                     _PORTB	set	13
    70                           	global	_PORTC
    71  000E                     _PORTC	set	14
    72                           	global	_RA0
    73  0060                     _RA0	set	96
    74                           	global	_RA1
    75  0061                     _RA1	set	97
    76                           	global	_RA2
    77  0062                     _RA2	set	98
    78                           	global	_RC4
    79  0074                     _RC4	set	116
    80                           	global	_RC5
    81  0075                     _RC5	set	117
    82                           	global	_RC6
    83  0076                     _RC6	set	118
    84                           	global	_RC7
    85  0077                     _RC7	set	119
    86                           	global	_ADCON0
    87  009D                     _ADCON0	set	157
    88                           	global	_ADCON1
    89  009E                     _ADCON1	set	158
    90                           	global	_ADRESH
    91  009C                     _ADRESH	set	156
    92                           	global	_TRISA
    93  008C                     _TRISA	set	140
    94                           	global	_TRISB
    95  008D                     _TRISB	set	141
    96                           	global	_TRISC
    97  008E                     _TRISC	set	142
    98                           	global	_ADON
    99  04E8                     _ADON	set	1256
   100                           	global	_GO_nDONE
   101  04E9                     _GO_nDONE	set	1257
   102                           	global	_ANSELC
   103  018E                     _ANSELC	set	398
   104                           	file	"/tmp/cgtK0qDZz"
   105                           	line	#
   106                           psect cinit,class=CODE,delta=2
   107                           global start_initialization
   108  071F                     start_initialization:
   109                           
   110                           psect	bssCOMMON,class=COMMON,space=1
   111                           global __pbssCOMMON
   112  007C                     __pbssCOMMON:
   113  007C                     _lastMotor:
   114  007C                            ds      2
   115                           
   116                           psect	bssBANK0,class=BANK0,space=1
   117                           global __pbssBANK0
   118  0020                     __pbssBANK0:
   119  0020                     _count:
   120  0020                            ds      4
   121                           
   122  0024                     _start:
   123  0024                            ds      4
   124                           
   125  0028                     _stop:
   126  0028                            ds      4
   127                           
   128  002C                     _clock_t:
   129  002C                            ds      2
   130                           
   131  002E                     _ignore:
   132  002E                            ds      2
   133                           
   134  0030                     _ticks:
   135  0030                            ds      2
   136                           
   137                           psect clrtext,class=CODE,delta=2
   138                           global clear_ram
   139                           ;	Called with FSR0 containing the base address, and
   140                           ;	WREG with the size to clear
   141  0719                     clear_ram:
   142  0719  0064               	clrwdt			;clear the watchdog before getting into this loop
   143  071A                     clrloop:
   144  071A  0180               	clrf	indf0		;clear RAM location pointed to by FSR
   145  071B  3101               	addfsr	0,1
   146  071C  0B89               	decfsz wreg		;Have we reached the end of clearing yet?
   147  071D  2F1A               	goto clrloop	;have we reached the end yet?
   148  071E  3400               	retlw	0		;all done for this memory range, return
   149                           ; Clear objects allocated to COMMON
   150                           psect cinit,class=CODE,delta=2
   151                           	global __pbssCOMMON
   152  071F  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   153  0720  01FD               	clrf	((__pbssCOMMON)+1)&07Fh
   154                           ; Clear objects allocated to BANK0
   155                           psect cinit,class=CODE,delta=2
   156                           	global __pbssBANK0
   157  0721  3020               	movlw	low(__pbssBANK0)
   158  0722  0084               	movwf	fsr0l
   159  0723  3000               	movlw	high(__pbssBANK0)
   160  0724  0085               	movwf	fsr0h
   161  0725  3012               	movlw	012h
   162  0726  3187  2719  3187   	fcall	clear_ram
   163                           psect cinit,class=CODE,delta=2
   164                           global end_of_initialization
   165                           
   166                           ;End of C runtime variable initialization code
   167                           
   168  0729                     end_of_initialization:
   169  0729  0020               movlb 0
   170  072A  3187  2F90         ljmp _main	;jump to C main() function
   171                           psect	cstackCOMMON,class=COMMON,space=1
   172                           global __pcstackCOMMON
   173  0070                     __pcstackCOMMON:
   174                           	global	?_controlMotor
   175  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   176                           	global	?_ADCInit
   177  0070                     ?_ADCInit:	; 0 bytes @ 0x0
   178                           	global	??_ADCInit
   179  0070                     ??_ADCInit:	; 0 bytes @ 0x0
   180                           	global	?_readchannel
   181  0070                     ?_readchannel:	; 2 bytes @ 0x0
   182                           	global	?_main
   183  0070                     ?_main:	; 2 bytes @ 0x0
   184                           	global	controlMotor@Leftpt
   185  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   186                           	global	readchannel@chan
   187  0070                     readchannel@chan:	; 2 bytes @ 0x0
   188  0070                     	ds	2
   189                           	global	??_readchannel
   190  0072                     ??_readchannel:	; 0 bytes @ 0x2
   191                           	global	controlMotor@Rightpt
   192  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   193  0072                     	ds	2
   194                           	global	??_controlMotor
   195  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   196                           	global	??_main
   197  0074                     ??_main:	; 0 bytes @ 0x4
   198  0074                     	ds	2
   199                           	global	main@leftpt
   200  0076                     main@leftpt:	; 2 bytes @ 0x6
   201  0076                     	ds	2
   202                           	global	main@rightpt
   203  0078                     main@rightpt:	; 2 bytes @ 0x8
   204  0078                     	ds	2
   205                           	global	main@read
   206  007A                     main@read:	; 2 bytes @ 0xA
   207  007A                     	ds	2
   208 ;;Data sizes: Strings 0, constant 0, data 0, bss 20, persistent 0 stack 0
   209 ;;Auto spaces:   Size  Autos    Used
   210 ;; COMMON          14     12      14
   211 ;; BANK0           80      0      18
   212 ;; BANK1           80      0       0
   213 ;; BANK2           80      0       0
   214 ;; BANK3           80      0       0
   215 ;; BANK4           80      0       0
   216 ;; BANK5           80      0       0
   217 ;; BANK6           16      0       0
   218                           
   219 ;;
   220 ;; Pointer list with targets:
   221                           
   222 ;; ?_readchannel	int  size(1) Largest target is 0
   223 ;;
   224                           
   225                           
   226 ;;
   227 ;; Critical Paths under _main in COMMON
   228 ;;
   229 ;;   _main->_readchannel
   230 ;;   _main->_controlMotor
   231 ;;
   232 ;; Critical Paths under _main in BANK0
   233 ;;
   234 ;;   None.
   235 ;;
   236 ;; Critical Paths under _main in BANK1
   237 ;;
   238 ;;   None.
   239 ;;
   240 ;; Critical Paths under _main in BANK2
   241 ;;
   242 ;;   None.
   243 ;;
   244 ;; Critical Paths under _main in BANK3
   245 ;;
   246 ;;   None.
   247 ;;
   248 ;; Critical Paths under _main in BANK4
   249 ;;
   250 ;;   None.
   251 ;;
   252 ;; Critical Paths under _main in BANK5
   253 ;;
   254 ;;   None.
   255 ;;
   256 ;; Critical Paths under _main in BANK6
   257 ;;
   258 ;;   None.
   259                           
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   262 ;;
   263                           
   264 ;;
   265 ;;Call Graph Tables:
   266 ;;
   267 ;; ---------------------------------------------------------------------------------
   268 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   269 ;; ---------------------------------------------------------------------------------
   270 ;; (0) _main                                                 8     8      0     224
   271 ;;                                              4 COMMON     8     8      0
   272 ;;                            _ADCInit
   273 ;;                        _readchannel
   274 ;;                       _controlMotor
   275 ;; ---------------------------------------------------------------------------------
   276 ;; (1) _readchannel                                          4     2      2      44
   277 ;;                                              0 COMMON     4     2      2
   278 ;; ---------------------------------------------------------------------------------
   279 ;; (1) _ADCInit                                              0     0      0       0
   280 ;; ---------------------------------------------------------------------------------
   281 ;; (1) _controlMotor                                         4     0      4      44
   282 ;;                                              0 COMMON     4     0      4
   283 ;; ---------------------------------------------------------------------------------
   284 ;; Estimated maximum stack depth 1
   285 ;; ---------------------------------------------------------------------------------
   286                           
   287 ;; Call Graph Graphs:
   288                           
   289 ;; _main (ROOT)
   290 ;;   _ADCInit
   291 ;;   _readchannel
   292 ;;   _controlMotor
   293 ;;
   294                           
   295 ;; Address spaces:
   296                           
   297 ;;Name               Size   Autos  Total    Cost      Usage
   298 ;;BIGRAM             1F0      0       0       0        0.0%
   299 ;;NULL                 0      0       0       0        0.0%
   300 ;;CODE                 0      0       0       0        0.0%
   301 ;;BITCOMMON            E      0       0       1        0.0%
   302 ;;BITSFR0              0      0       0       1        0.0%
   303 ;;SFR0                 0      0       0       1        0.0%
   304 ;;COMMON               E      C       E       2      100.0%
   305 ;;BITSFR1              0      0       0       2        0.0%
   306 ;;SFR1                 0      0       0       2        0.0%
   307 ;;BITSFR2              0      0       0       3        0.0%
   308 ;;SFR2                 0      0       0       3        0.0%
   309 ;;STACK                0      0       1       3        0.0%
   310 ;;BITSFR3              0      0       0       4        0.0%
   311 ;;SFR3                 0      0       0       4        0.0%
   312 ;;ABS                  0      0      20       4        0.0%
   313 ;;BITBANK0            50      0       0       5        0.0%
   314 ;;BITSFR4              0      0       0       5        0.0%
   315 ;;SFR4                 0      0       0       5        0.0%
   316 ;;BANK0               50      0      12       6       22.5%
   317 ;;BITSFR5              0      0       0       6        0.0%
   318 ;;SFR5                 0      0       0       6        0.0%
   319 ;;BITBANK1            50      0       0       7        0.0%
   320 ;;BITSFR6              0      0       0       7        0.0%
   321 ;;SFR6                 0      0       0       7        0.0%
   322 ;;BANK1               50      0       0       8        0.0%
   323 ;;BITSFR7              0      0       0       8        0.0%
   324 ;;SFR7                 0      0       0       8        0.0%
   325 ;;BITBANK2            50      0       0       9        0.0%
   326 ;;BITSFR8              0      0       0       9        0.0%
   327 ;;SFR8                 0      0       0       9        0.0%
   328 ;;BANK2               50      0       0      10        0.0%
   329 ;;BITSFR9              0      0       0      10        0.0%
   330 ;;SFR9                 0      0       0      10        0.0%
   331 ;;BITBANK3            50      0       0      11        0.0%
   332 ;;BITSFR10             0      0       0      11        0.0%
   333 ;;SFR10                0      0       0      11        0.0%
   334 ;;BANK3               50      0       0      12        0.0%
   335 ;;BITSFR11             0      0       0      12        0.0%
   336 ;;SFR11                0      0       0      12        0.0%
   337 ;;BITBANK4            50      0       0      13        0.0%
   338 ;;BITSFR12             0      0       0      13        0.0%
   339 ;;SFR12                0      0       0      13        0.0%
   340 ;;BANK4               50      0       0      14        0.0%
   341 ;;BITSFR13             0      0       0      14        0.0%
   342 ;;SFR13                0      0       0      14        0.0%
   343 ;;BITBANK5            50      0       0      15        0.0%
   344 ;;BITSFR14             0      0       0      15        0.0%
   345 ;;SFR14                0      0       0      15        0.0%
   346 ;;BANK5               50      0       0      16        0.0%
   347 ;;BITSFR15             0      0       0      16        0.0%
   348 ;;SFR15                0      0       0      16        0.0%
   349 ;;BITBANK6            10      0       0      17        0.0%
   350 ;;BITSFR16             0      0       0      17        0.0%
   351 ;;SFR16                0      0       0      17        0.0%
   352 ;;BANK6               10      0       0      18        0.0%
   353 ;;BITSFR17             0      0       0      18        0.0%
   354 ;;SFR17                0      0       0      18        0.0%
   355 ;;BITSFR18             0      0       0      19        0.0%
   356 ;;SFR18                0      0       0      19        0.0%
   357 ;;DATA                 0      0      21      19        0.0%
   358 ;;BITSFR19             0      0       0      20        0.0%
   359 ;;SFR19                0      0       0      20        0.0%
   360 ;;BITSFR20             0      0       0      21        0.0%
   361 ;;SFR20                0      0       0      21        0.0%
   362 ;;BITSFR21             0      0       0      22        0.0%
   363 ;;SFR21                0      0       0      22        0.0%
   364 ;;BITSFR22             0      0       0      23        0.0%
   365 ;;SFR22                0      0       0      23        0.0%
   366 ;;BITSFR23             0      0       0      24        0.0%
   367 ;;SFR23                0      0       0      24        0.0%
   368 ;;BITSFR24             0      0       0      25        0.0%
   369 ;;SFR24                0      0       0      25        0.0%
   370 ;;BITSFR25             0      0       0      26        0.0%
   371 ;;SFR25                0      0       0      26        0.0%
   372 ;;BITSFR26             0      0       0      27        0.0%
   373 ;;SFR26                0      0       0      27        0.0%
   374 ;;BITSFR27             0      0       0      28        0.0%
   375 ;;SFR27                0      0       0      28        0.0%
   376 ;;BITSFR28             0      0       0      29        0.0%
   377 ;;SFR28                0      0       0      29        0.0%
   378 ;;BITSFR29             0      0       0      30        0.0%
   379 ;;SFR29                0      0       0      30        0.0%
   380 ;;BITSFR30             0      0       0      31        0.0%
   381 ;;SFR30                0      0       0      31        0.0%
   382 ;;BITSFR31             0      0       0      32        0.0%
   383 ;;SFR31                0      0       0      32        0.0%
   384                           
   385                           	global	_main
   386                           psect	maintext,global,class=CODE,delta=2
   387                           global __pmaintext
   388  0790                     __pmaintext:
   389                           
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 361 in file "newmain.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;  read            2   10[COMMON] int 
   397 ;;  rightpt         2    8[COMMON] int 
   398 ;;  leftpt          2    6[COMMON] int 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  2  1056[COMMON] int 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : 17F/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   408 ;;      Params:         0       0       0       0       0       0       0       0
   409 ;;      Locals:         6       0       0       0       0       0       0       0
   410 ;;      Temps:          2       0       0       0       0       0       0       0
   411 ;;      Totals:         8       0       0       0       0       0       0       0
   412 ;;Total ram usage:        8 bytes
   413 ;; Hardware stack levels required when called:    1
   414 ;; This function calls:
   415 ;;		_ADCInit
   416 ;;		_readchannel
   417 ;;		_controlMotor
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           psect	maintext
   423                           	file	"newmain.c"
   424                           	line	361
   425                           	global	__size_of_main
   426  0070                     	__size_of_main	equ	__end_of_main-_main
   427                           	
   428  0790                     _main:	
   429                           	opt	stack 15
   430                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   431                           	line	363
   432                           	
   433  0790                     l3556:	
   434                           ;newmain.c: 363: TRISA = 0x00;
   435  0790  0021               	movlb 1	; select bank1
   436  0791  018C               	clrf	(140)^080h	;volatile
   437                           	line	364
   438                           ;newmain.c: 364: TRISB = 0x00;
   439  0792  018D               	clrf	(141)^080h	;volatile
   440                           	line	365
   441                           	
   442  0793                     l3558:	
   443                           ;newmain.c: 365: TRISC = 0b00110000;
   444  0793  3030               	movlw	(030h)
   445  0794  008E               	movwf	(142)^080h	;volatile
   446                           	line	367
   447                           	
   448  0795                     l3560:	
   449                           ;newmain.c: 367: PORTA = 0x00;
   450  0795  0020               	movlb 0	; select bank0
   451  0796  018C               	clrf	(12)	;volatile
   452                           	line	368
   453                           	
   454  0797                     l3562:	
   455                           ;newmain.c: 368: PORTB = 0x00;
   456  0797  018D               	clrf	(13)	;volatile
   457                           	line	369
   458                           	
   459  0798                     l3564:	
   460                           ;newmain.c: 369: PORTC = 0x00;
   461  0798  018E               	clrf	(14)	;volatile
   462                           	line	382
   463                           	
   464  0799                     l3566:	
   465                           ;newmain.c: 382: ADCInit ();
   466  0799  3187  2713  3187   	fcall	_ADCInit
   467  079C  2F9D               	goto	l3568
   468                           	line	404
   469                           ;newmain.c: 403: int leftpt, rightpt, read;
   470                           ;newmain.c: 404: while (1)
   471                           	
   472  079D                     l1057:	
   473                           	line	408
   474                           	
   475  079D                     l3568:	
   476                           ;newmain.c: 405: {
   477                           ;newmain.c: 408: read = readchannel(1);
   478  079D  3001               	movlw	low(01h)
   479  079E  00F0               	movwf	(?_readchannel)
   480  079F  3000               	movlw	high(01h)
   481  07A0  00F1               	movwf	((?_readchannel))+1
   482  07A1  3187  275A  3187   	fcall	_readchannel
   483  07A4  0871               	movf	(1+(?_readchannel)),w
   484  07A5  01FB               	clrf	(main@read+1)
   485  07A6  07FB               	addwf	(main@read+1)
   486  07A7  0870               	movf	(0+(?_readchannel)),w
   487  07A8  01FA               	clrf	(main@read)
   488  07A9  07FA               	addwf	(main@read)
   489                           
   490                           	line	409
   491                           	
   492  07AA                     l3570:	
   493                           ;newmain.c: 409: leftpt = (read > 120) ? 1 : 0;
   494  07AA  087B               	movf	(main@read+1),w
   495  07AB  3A80               	xorlw	80h
   496  07AC  00FF               	movwf	btemp+1
   497  07AD  3080               	movlw	(high(079h))^80h
   498  07AE  027F               	subwf	btemp+1,w
   499  07AF  1D03               	skipz
   500  07B0  2FB3               	goto	u2485
   501  07B1  3079               	movlw	low(079h)
   502  07B2  027A               	subwf	(main@read),w
   503  07B3                     u2485:
   504                           
   505  07B3  3000               	movlw	0
   506  07B4  1803               	skipnc
   507  07B5  3001               	movlw	1
   508  07B6  00F4               	movwf	(??_main+0)+0
   509  07B7  01F5               	clrf	(??_main+0)+0+1
   510  07B8  0874               	movf	0+(??_main+0)+0,w
   511  07B9  00F6               	movwf	(main@leftpt)
   512  07BA  0875               	movf	1+(??_main+0)+0,w
   513  07BB  00F7               	movwf	(main@leftpt+1)
   514                           	line	413
   515                           	
   516  07BC                     l3572:	
   517                           ;newmain.c: 413: read = readchannel(0);
   518  07BC  3000               	movlw	low(0)
   519  07BD  00F0               	movwf	(?_readchannel)
   520  07BE  3000               	movlw	high(0)
   521  07BF  00F1               	movwf	((?_readchannel))+1
   522  07C0  3187  275A  3187   	fcall	_readchannel
   523  07C3  0871               	movf	(1+(?_readchannel)),w
   524  07C4  01FB               	clrf	(main@read+1)
   525  07C5  07FB               	addwf	(main@read+1)
   526  07C6  0870               	movf	(0+(?_readchannel)),w
   527  07C7  01FA               	clrf	(main@read)
   528  07C8  07FA               	addwf	(main@read)
   529                           
   530                           	line	414
   531                           	
   532  07C9                     l3574:	
   533                           ;newmain.c: 414: rightpt = (read > 120) ? 1 : 0;
   534  07C9  087B               	movf	(main@read+1),w
   535  07CA  3A80               	xorlw	80h
   536  07CB  00FF               	movwf	btemp+1
   537  07CC  3080               	movlw	(high(079h))^80h
   538  07CD  027F               	subwf	btemp+1,w
   539  07CE  1D03               	skipz
   540  07CF  2FD2               	goto	u2495
   541  07D0  3079               	movlw	low(079h)
   542  07D1  027A               	subwf	(main@read),w
   543  07D2                     u2495:
   544                           
   545  07D2  3000               	movlw	0
   546  07D3  1803               	skipnc
   547  07D4  3001               	movlw	1
   548  07D5  00F4               	movwf	(??_main+0)+0
   549  07D6  01F5               	clrf	(??_main+0)+0+1
   550  07D7  0874               	movf	0+(??_main+0)+0,w
   551  07D8  00F8               	movwf	(main@rightpt)
   552  07D9  0875               	movf	1+(??_main+0)+0,w
   553  07DA  00F9               	movwf	(main@rightpt+1)
   554                           	line	419
   555                           	
   556  07DB                     l3576:	
   557                           ;newmain.c: 419: if((leftpt==0) && (rightpt==0))
   558  07DB  0877               	movf	((main@leftpt+1)),w
   559  07DC  0476               	iorwf	((main@leftpt)),w
   560  07DD  1D03               	skipz
   561  07DE  2FE0               	goto	u2501
   562  07DF  2FE1               	goto	u2500
   563  07E0                     u2501:
   564  07E0  2FE9               	goto	l3582
   565  07E1                     u2500:
   566                           	
   567  07E1                     l3578:	
   568  07E1  0879               	movf	((main@rightpt+1)),w
   569  07E2  0478               	iorwf	((main@rightpt)),w
   570  07E3  1D03               	skipz
   571  07E4  2FE6               	goto	u2511
   572  07E5  2FE7               	goto	u2510
   573  07E6                     u2511:
   574  07E6  2FE9               	goto	l3582
   575  07E7                     u2510:
   576  07E7  2F9D               	goto	l3568
   577                           	line	422
   578                           	
   579  07E8                     l3580:	
   580                           ;newmain.c: 420: {
   581                           ;newmain.c: 422: }
   582  07E8  2F9D               	goto	l3568
   583                           	line	423
   584                           	
   585  07E9                     l1058:	
   586                           	line	425
   587                           	
   588  07E9                     l3582:	
   589                           ;newmain.c: 423: else
   590                           ;newmain.c: 424: {
   591                           ;newmain.c: 425: ignore = 0;
   592  07E9  0020               	movlb 0	; select bank0
   593  07EA  01AE               	clrf	(_ignore)
   594  07EB  01AF               	clrf	(_ignore+1)
   595                           	line	426
   596                           	
   597  07EC                     l3584:	
   598                           ;newmain.c: 426: controlMotor(leftpt, rightpt);
   599  07EC  0877               	movf	(main@leftpt+1),w
   600  07ED  01F1               	clrf	(?_controlMotor+1)
   601  07EE  07F1               	addwf	(?_controlMotor+1)
   602  07EF  0876               	movf	(main@leftpt),w
   603  07F0  01F0               	clrf	(?_controlMotor)
   604  07F1  07F0               	addwf	(?_controlMotor)
   605                           
   606  07F2  0879               	movf	(main@rightpt+1),w
   607  07F3  01F3               	clrf	1+(?_controlMotor)+02h
   608  07F4  07F3               	addwf	1+(?_controlMotor)+02h
   609  07F5  0878               	movf	(main@rightpt),w
   610  07F6  01F2               	clrf	0+(?_controlMotor)+02h
   611  07F7  07F2               	addwf	0+(?_controlMotor)+02h
   612                           
   613  07F8  3187  272C  3187   	fcall	_controlMotor
   614  07FB  2F9D               	goto	l3568
   615                           	line	427
   616                           	
   617  07FC                     l1059:	
   618  07FC  2F9D               	goto	l3568
   619                           	line	428
   620                           	
   621  07FD                     l1060:	
   622                           	line	404
   623  07FD  2F9D               	goto	l3568
   624                           	
   625  07FE                     l1061:	
   626                           	line	430
   627                           	
   628  07FE                     l1062:	
   629                           	global	start
   630  07FE  3180  2802         	ljmp	start
   631                           	opt stack 0
   632                           GLOBAL	__end_of_main
   633  0800                     	__end_of_main:
   634 ;; =============== function _main ends ============
   635                           
   636                           	signat	_main,90
   637                           	global	_readchannel
   638                           psect	text163,local,class=CODE,delta=2
   639                           global __ptext163
   640  075A                     __ptext163:
   641                           
   642 ;; *************** function _readchannel *****************
   643 ;; Defined at:
   644 ;;		line 335 in file "newmain.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;  chan            2    0[COMMON] int 
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  2    0[COMMON] int 
   651 ;; Registers used:
   652 ;;		wreg, status,2, status,0
   653 ;; Tracked objects:
   654 ;;		On entry : 0/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   658 ;;      Params:         2       0       0       0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0       0       0       0
   660 ;;      Temps:          2       0       0       0       0       0       0       0
   661 ;;      Totals:         4       0       0       0       0       0       0       0
   662 ;;Total ram usage:        4 bytes
   663 ;; Hardware stack levels used:    1
   664 ;; This function calls:
   665 ;;		Nothing
   666 ;; This function is called by:
   667 ;;		_main
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           psect	text163
   671                           	file	"newmain.c"
   672                           	line	335
   673                           	global	__size_of_readchannel
   674  0036                     	__size_of_readchannel	equ	__end_of_readchannel-_readchannel
   675                           	
   676  075A                     _readchannel:	
   677                           	opt	stack 15
   678                           ; Regs used in _readchannel: [wreg+status,2+status,0]
   679                           	line	336
   680                           	
   681  075A                     l3534:	
   682                           ;newmain.c: 336: if (chan == 0)
   683  075A  0871               	movf	((readchannel@chan+1)),w
   684  075B  0470               	iorwf	((readchannel@chan)),w
   685  075C  1D03               	skipz
   686  075D  2F5F               	goto	u2441
   687  075E  2F60               	goto	u2440
   688  075F                     u2441:
   689  075F  2F74               	goto	l3546
   690  0760                     u2440:
   691                           	line	338
   692                           	
   693  0760                     l3536:	
   694                           ;newmain.c: 337: {
   695                           ;newmain.c: 338: ADCON0 = 0b01000001;
   696  0760  3041               	movlw	(041h)
   697  0761  0021               	movlb 1	; select bank1
   698  0762  009D               	movwf	(157)^080h	;volatile
   699                           	line	340
   700                           	
   701  0763                     l3538:	
   702                           ;newmain.c: 340: GO_nDONE=1;
   703  0763  149D               	bsf	(1257/8)^080h,(1257)&7
   704                           	line	341
   705                           ;newmain.c: 341: while(GO_nDONE);
   706  0764  2F65               	goto	l1046
   707                           	
   708  0765                     l1047:	
   709                           	
   710  0765                     l1046:	
   711  0765  189D               	btfsc	(1257/8)^080h,(1257)&7
   712  0766  2F68               	goto	u2451
   713  0767  2F69               	goto	u2450
   714  0768                     u2451:
   715  0768  2F65               	goto	l1046
   716  0769                     u2450:
   717                           	
   718  0769                     l1048:	
   719                           	line	343
   720                           ;newmain.c: 343: ADON=0;
   721  0769  101D               	bcf	(1256/8)^080h,(1256)&7
   722                           	line	345
   723                           	
   724  076A                     l3540:	
   725                           ;newmain.c: 345: return ADRESH;
   726  076A  081C               	movf	(156)^080h,w	;volatile
   727  076B  00F2               	movwf	(??_readchannel+0)+0
   728  076C  01F3               	clrf	(??_readchannel+0)+0+1
   729  076D  0872               	movf	0+(??_readchannel+0)+0,w
   730  076E  00F0               	movwf	(?_readchannel)
   731  076F  0873               	movf	1+(??_readchannel+0)+0,w
   732  0770  00F1               	movwf	(?_readchannel+1)
   733  0771  2F8F               	goto	l1049
   734                           	
   735  0772                     l3542:	
   736  0772  2F8F               	goto	l1049
   737                           	line	346
   738                           	
   739  0773                     l3544:	
   740                           ;newmain.c: 346: }
   741  0773  2F8F               	goto	l1049
   742                           	line	347
   743                           	
   744  0774                     l1045:	
   745                           	
   746  0774                     l3546:	
   747                           ;newmain.c: 347: else if (chan == 1)
   748  0774  3001               	movlw	01h
   749  0775  0670               	xorwf	(readchannel@chan),w
   750  0776  0471               	iorwf	(readchannel@chan+1),w
   751  0777  1D03               	skipz
   752  0778  2F7A               	goto	u2461
   753  0779  2F7B               	goto	u2460
   754  077A                     u2461:
   755  077A  2F8F               	goto	l1049
   756  077B                     u2460:
   757                           	line	349
   758                           	
   759  077B                     l3548:	
   760                           ;newmain.c: 348: {
   761                           ;newmain.c: 349: ADCON0 = 0b01000101;
   762  077B  3045               	movlw	(045h)
   763  077C  0021               	movlb 1	; select bank1
   764  077D  009D               	movwf	(157)^080h	;volatile
   765                           	line	351
   766                           	
   767  077E                     l3550:	
   768                           ;newmain.c: 351: GO_nDONE=1;
   769  077E  149D               	bsf	(1257/8)^080h,(1257)&7
   770                           	line	352
   771                           ;newmain.c: 352: while(GO_nDONE);
   772  077F  2F80               	goto	l1052
   773                           	
   774  0780                     l1053:	
   775                           	
   776  0780                     l1052:	
   777  0780  189D               	btfsc	(1257/8)^080h,(1257)&7
   778  0781  2F83               	goto	u2471
   779  0782  2F84               	goto	u2470
   780  0783                     u2471:
   781  0783  2F80               	goto	l1052
   782  0784                     u2470:
   783                           	
   784  0784                     l1054:	
   785                           	line	354
   786                           ;newmain.c: 354: ADON=0;
   787  0784  101D               	bcf	(1256/8)^080h,(1256)&7
   788                           	line	356
   789                           	
   790  0785                     l3552:	
   791                           ;newmain.c: 356: return ADRESH;
   792  0785  081C               	movf	(156)^080h,w	;volatile
   793  0786  00F2               	movwf	(??_readchannel+0)+0
   794  0787  01F3               	clrf	(??_readchannel+0)+0+1
   795  0788  0872               	movf	0+(??_readchannel+0)+0,w
   796  0789  00F0               	movwf	(?_readchannel)
   797  078A  0873               	movf	1+(??_readchannel+0)+0,w
   798  078B  00F1               	movwf	(?_readchannel+1)
   799  078C  2F8F               	goto	l1049
   800                           	
   801  078D                     l3554:	
   802  078D  2F8F               	goto	l1049
   803                           	line	357
   804                           	
   805  078E                     l1051:	
   806  078E  2F8F               	goto	l1049
   807                           	line	358
   808                           	
   809  078F                     l1050:	
   810                           	
   811  078F                     l1049:	
   812  078F  0008               	return
   813                           	opt stack 0
   814                           GLOBAL	__end_of_readchannel
   815  0790                     	__end_of_readchannel:
   816 ;; =============== function _readchannel ends ============
   817                           
   818                           	signat	_readchannel,4218
   819                           	global	_ADCInit
   820                           psect	text164,local,class=CODE,delta=2
   821                           global __ptext164
   822  0713                     __ptext164:
   823                           
   824 ;; *************** function _ADCInit *****************
   825 ;; Defined at:
   826 ;;		line 246 in file "newmain.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;		None
   829 ;; Auto vars:     Size  Location     Type
   830 ;;		None
   831 ;; Return value:  Size  Location     Type
   832 ;;		None               void
   833 ;; Registers used:
   834 ;;		wreg, status,2
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   840 ;;      Params:         0       0       0       0       0       0       0       0
   841 ;;      Locals:         0       0       0       0       0       0       0       0
   842 ;;      Temps:          0       0       0       0       0       0       0       0
   843 ;;      Totals:         0       0       0       0       0       0       0       0
   844 ;;Total ram usage:        0 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           psect	text164
   853                           	file	"newmain.c"
   854                           	line	246
   855                           	global	__size_of_ADCInit
   856  0006                     	__size_of_ADCInit	equ	__end_of_ADCInit-_ADCInit
   857                           	
   858  0713                     _ADCInit:	
   859                           	opt	stack 15
   860                           ; Regs used in _ADCInit: [wreg+status,2]
   861                           	line	247
   862                           	
   863  0713                     l3530:	
   864                           ;newmain.c: 247: ANSELC = 0b00110000;
   865  0713  3030               	movlw	(030h)
   866  0714  0023               	movlb 3	; select bank3
   867  0715  008E               	movwf	(398)^0180h	;volatile
   868                           	line	248
   869                           	
   870  0716                     l3532:	
   871                           ;newmain.c: 248: ADCON1 = 0x00;
   872  0716  0021               	movlb 1	; select bank1
   873  0717  019E               	clrf	(158)^080h	;volatile
   874                           	line	252
   875                           	
   876  0718                     l1036:	
   877  0718  0008               	return
   878                           	opt stack 0
   879                           GLOBAL	__end_of_ADCInit
   880  0719                     	__end_of_ADCInit:
   881 ;; =============== function _ADCInit ends ============
   882                           
   883                           	signat	_ADCInit,88
   884                           	global	_controlMotor
   885                           psect	text165,local,class=CODE,delta=2
   886                           global __ptext165
   887  072C                     __ptext165:
   888                           
   889 ;; *************** function _controlMotor *****************
   890 ;; Defined at:
   891 ;;		line 84 in file "newmain.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  Leftpt          2    0[COMMON] int 
   894 ;;  Rightpt         2    2[COMMON] int 
   895 ;; Auto vars:     Size  Location     Type
   896 ;;		None
   897 ;; Return value:  Size  Location     Type
   898 ;;		None               void
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   906 ;;      Params:         4       0       0       0       0       0       0       0
   907 ;;      Locals:         0       0       0       0       0       0       0       0
   908 ;;      Temps:          0       0       0       0       0       0       0       0
   909 ;;      Totals:         4       0       0       0       0       0       0       0
   910 ;;Total ram usage:        4 bytes
   911 ;; Hardware stack levels used:    1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_main
   916 ;;		_searchTrack
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           psect	text165
   920                           	file	"newmain.c"
   921                           	line	84
   922                           	global	__size_of_controlMotor
   923  002E                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
   924                           	
   925  072C                     _controlMotor:	
   926                           	opt	stack 15
   927                           ; Regs used in _controlMotor: [wreg+status,2+status,0]
   928                           	line	85
   929                           	
   930  072C                     l3504:	
   931                           ;newmain.c: 85: if (Leftpt == 1)
   932  072C  3001               	movlw	01h
   933  072D  0670               	xorwf	(controlMotor@Leftpt),w
   934  072E  0471               	iorwf	(controlMotor@Leftpt+1),w
   935  072F  1D03               	skipz
   936  0730  2F32               	goto	u2371
   937  0731  2F33               	goto	u2370
   938  0732                     u2371:
   939  0732  2F36               	goto	l1007
   940  0733                     u2370:
   941                           	line	89
   942                           	
   943  0733                     l3506:	
   944                           ;newmain.c: 86: {
   945                           ;newmain.c: 89: RC6 = 1;
   946  0733  0020               	movlb 0	; select bank0
   947  0734  170E               	bsf	(118/8),(118)&7
   948                           	line	90
   949                           ;newmain.c: 90: }
   950  0735  2F43               	goto	l1008
   951                           	line	91
   952                           	
   953  0736                     l1007:	
   954                           	line	95
   955                           ;newmain.c: 91: else
   956                           ;newmain.c: 92: {
   957                           ;newmain.c: 95: RC6 = 0;
   958  0736  0020               	movlb 0	; select bank0
   959  0737  130E               	bcf	(118/8),(118)&7
   960                           	line	96
   961                           	
   962  0738                     l3508:	
   963                           ;newmain.c: 96: if (ignore == 0)
   964  0738  082F               	movf	((_ignore+1)),w
   965  0739  042E               	iorwf	((_ignore)),w
   966  073A  1D03               	skipz
   967  073B  2F3D               	goto	u2381
   968  073C  2F3E               	goto	u2380
   969  073D                     u2381:
   970  073D  2F43               	goto	l1008
   971  073E                     u2380:
   972                           	line	98
   973                           	
   974  073E                     l3510:	
   975                           ;newmain.c: 97: {
   976                           ;newmain.c: 98: lastMotor = 1;
   977  073E  3001               	movlw	low(01h)
   978  073F  00FC               	movwf	(_lastMotor)
   979  0740  3000               	movlw	high(01h)
   980  0741  00FD               	movwf	((_lastMotor))+1
   981  0742  2F43               	goto	l1008
   982                           	line	99
   983                           	
   984  0743                     l1009:	
   985                           	line	100
   986                           	
   987  0743                     l1008:	
   988                           	line	103
   989                           ;newmain.c: 99: }
   990                           ;newmain.c: 100: }
   991                           ;newmain.c: 103: if (Rightpt == 1)
   992  0743  3001               	movlw	01h
   993  0744  0672               	xorwf	(controlMotor@Rightpt),w
   994  0745  0473               	iorwf	(controlMotor@Rightpt+1),w
   995  0746  1D03               	skipz
   996  0747  2F49               	goto	u2391
   997  0748  2F4A               	goto	u2390
   998  0749                     u2391:
   999  0749  2F4C               	goto	l1010
  1000  074A                     u2390:
  1001                           	line	107
  1002                           	
  1003  074A                     l3512:	
  1004                           ;newmain.c: 104: {
  1005                           ;newmain.c: 107: RC7 = 1;
  1006  074A  178E               	bsf	(119/8),(119)&7
  1007                           	line	108
  1008                           ;newmain.c: 108: }
  1009  074B  2F59               	goto	l1013
  1010                           	line	109
  1011                           	
  1012  074C                     l1010:	
  1013                           	line	112
  1014                           ;newmain.c: 109: else
  1015                           ;newmain.c: 110: {
  1016                           ;newmain.c: 112: RC7 = 0;
  1017  074C  138E               	bcf	(119/8),(119)&7
  1018                           	line	113
  1019                           	
  1020  074D                     l3514:	
  1021                           ;newmain.c: 113: if (ignore == 0)
  1022  074D  082F               	movf	((_ignore+1)),w
  1023  074E  042E               	iorwf	((_ignore)),w
  1024  074F  1D03               	skipz
  1025  0750  2F52               	goto	u2401
  1026  0751  2F53               	goto	u2400
  1027  0752                     u2401:
  1028  0752  2F59               	goto	l1013
  1029  0753                     u2400:
  1030                           	line	115
  1031                           	
  1032  0753                     l3516:	
  1033                           ;newmain.c: 114: {
  1034                           ;newmain.c: 115: lastMotor = 2;
  1035  0753  3002               	movlw	low(02h)
  1036  0754  00FC               	movwf	(_lastMotor)
  1037  0755  3000               	movlw	high(02h)
  1038  0756  00FD               	movwf	((_lastMotor))+1
  1039  0757  2F59               	goto	l1013
  1040                           	line	116
  1041                           	
  1042  0758                     l1012:	
  1043  0758  2F59               	goto	l1013
  1044                           	line	117
  1045                           	
  1046  0759                     l1011:	
  1047                           	line	118
  1048                           	
  1049  0759                     l1013:	
  1050  0759  0008               	return
  1051                           	opt stack 0
  1052                           GLOBAL	__end_of_controlMotor
  1053  075A                     	__end_of_controlMotor:
  1054 ;; =============== function _controlMotor ends ============
  1055                           
  1056                           	signat	_controlMotor,8312
  1057                           psect	text166,local,class=CODE,delta=2
  1058                           global __ptext166
  1059  0000                     __ptext166:
  1060                           	global	btemp
  1061  007E                     	btemp set 07Eh
  1062                           
  1063                           	DABS	1,126,2	;btemp
  1064                           	global	wtemp0
  1065  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Fri May 18 15:36:10 2012

                  _RA0 0060                    _RA1 0061                    _RA2 0062                    _RC4 0074  
                  _RC5 0075                    _RC6 0076                    _RC7 0077        __end_of_ADCInit 0719  
                  wreg 0009                   l1010 074C                   l1011 0759                   l1012 0758  
                 l1013 0759                   l1007 0736                   l1008 0743                   l1009 0743  
                 l1050 078F                   l1051 078E                   l1036 0718                   l1052 0780  
                 l1060 07FD                   l1053 0780                   l1045 0774                   l1061 07FE  
                 l1054 0784                   l1046 0765                   l1062 07FE                   l1047 0765  
                 l1048 0769                   l1049 078F                   l1057 079D                   l1058 07E9  
                 l1059 07FC                   l3510 073E                   l3512 074A                   l3504 072C  
                 l3514 074D                   l3506 0733                   l3530 0713                   l3516 0753  
                 l3508 0738                   l3532 0716                   l3540 076A                   l3550 077E  
                 l3542 0772                   l3534 075A                   l3552 0785                   l3544 0773  
                 l3536 0760                   l3560 0795                   l3554 078D                   l3538 0763  
                 l3546 0774                   l3570 07AA                   l3562 0797                   l3548 077B  
                 l3580 07E8                   l3572 07BC                   l3564 0798                   l3556 0790  
                 l3582 07E9                   l3574 07C9                   l3566 0799                   l3558 0793  
                 l3584 07EC                   l3576 07DB                   l3568 079D                   l3578 07E1  
                 _ADON 04E8                   u2400 0753                   u2401 0752                   u2500 07E1  
                 u2501 07E0                   u2510 07E7                   u2511 07E6                   u2440 0760  
                 u2441 075F                   u2370 0733                   u2450 0769                   u2371 0732  
                 u2451 0768                   u2380 073E                   u2460 077B                   u2381 073D  
                 u2461 077A                   u2390 074A                   u2470 0784                   u2391 0749  
                 u2471 0783                   u2485 07B3                   u2495 07D2                   _main 0790  
          main@rightpt 0078                   fsr0h 0005                   fsr0l 0004                   indf0 0000  
                 btemp 007E                   _stop 0028                   start 0002          ?_controlMotor 0070  
                ?_main 0070     controlMotor@Leftpt 0070                  _PORTA 000C                  _PORTB 000D  
                _PORTC 000E                  _TRISA 008C                  _TRISB 008D                  _TRISC 008E  
         ?_readchannel 0070                  _count 0020                  _ticks 0030                  _start 0024  
                wtemp0 007E           __end_of_main 0800         ??_controlMotor 0074              ??_ADCInit 0070  
               ??_main 0074                 _ADCON0 009D                 _ADCON1 009E                 _ADRESH 009C  
               _ANSELC 018E    controlMotor@Rightpt 0072                 _ignore 002E                 clrloop 071A  
       __pcstackCOMMON 0070             __pbssBANK0 0020   __size_of_readchannel 0036   __end_of_controlMotor 075A  
           __pmaintext 0790                _ADCInit 0713                _clock_t 002C   end_of_initialization 0729  
__size_of_controlMotor 002E             main@leftpt 0076           _controlMotor 072C    start_initialization 071F  
             ?_ADCInit 0070            __pbssCOMMON 007C          ??_readchannel 0072              __ptext162 0000  
            __ptext163 075A              __ptext164 0713              __ptext165 072C              __ptext166 0000  
            _lastMotor 007C    __end_of_readchannel 0790               _GO_nDONE 04E9       __size_of_ADCInit 0006  
          _readchannel 075A        readchannel@chan 0070          __size_of_main 0070               clear_ram 0719  
             main@read 007A  
