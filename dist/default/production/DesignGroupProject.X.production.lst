

HI-TECH Software PIC LITE Macro Assembler V9.82 build 9453 
                                                                                               Sat Mar  3 23:37:00 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 9453
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 9453"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 13 "newmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 13 "newmain.c"
    45  2007  FFF5               	dw 0xFFFD & 0xFFF7 ;#
    46                           	FNCALL	_main,_lcd_init
    47                           	FNCALL	_main,_doDelay
    48                           	FNCALL	_main,_InitialiseADC
    49                           	FNCALL	_main,_ReadADC
    50                           	FNCALL	_main,___awtoft
    51                           	FNCALL	_main,___ftge
    52                           	FNCALL	_main,_searchTrack
    53                           	FNCALL	_main,_controlMotor
    54                           	FNCALL	_doDelay,_lcdCountdown
    55                           	FNCALL	_doDelay,__delay_ms
    56                           	FNCALL	_doDelay,_lcd_goto
    57                           	FNCALL	_doDelay,_lcd_puts
    58                           	FNCALL	_lcd_init,_lcd_write
    59                           	FNCALL	_lcd_init,_lcd_clear
    60                           	FNCALL	_lcdCountdown,_lcd_goto
    61                           	FNCALL	_lcdCountdown,_lcd_putch
    62                           	FNCALL	_lcd_clear,_lcd_write
    63                           	FNCALL	_lcd_putch,_lcd_write
    64                           	FNCALL	_lcd_puts,_lcd_write
    65                           	FNCALL	_lcd_goto,_lcd_write
    66                           	FNCALL	___awtoft,___ftpack
    67                           	FNCALL	_searchTrack,_controlMotor
    68                           	FNROOT	_main
    69                           	global	_count
    70                           	global	_start
    71                           	global	_stop
    72                           	global	_clock_t
    73                           	global	_lastMotor
    74                           	global	_ticks
    75                           	global	_ADCON0
    76                           psect	text417,local,class=CODE,delta=2
    77                           global __ptext417
    78  0000                     __ptext417:
    79  001F                     _ADCON0	set	31
    80                           	global	_ADRESH
    81  001E                     _ADRESH	set	30
    82                           	global	_PORTD
    83  0008                     _PORTD	set	8
    84                           	global	_ADIF
    85  0066                     _ADIF	set	102
    86                           	global	_ADON
    87  00F8                     _ADON	set	248
    88                           	global	_CARRY
    89  0018                     _CARRY	set	24
    90                           	global	_GIE
    91  005F                     _GIE	set	95
    92                           	global	_GO_DONE
    93  00F9                     _GO_DONE	set	249
    94                           	global	_RA0
    95  0028                     _RA0	set	40
    96                           	global	_RA1
    97  0029                     _RA1	set	41
    98                           	global	_RA2
    99  002A                     _RA2	set	42
   100                           	global	_RA3
   101  002B                     _RA3	set	43
   102                           	global	_RC1
   103  0039                     _RC1	set	57
   104                           	global	_RC3
   105  003B                     _RC3	set	59
   106                           	global	_RC4
   107  003C                     _RC4	set	60
   108                           	global	_ADCON1
   109  009F                     _ADCON1	set	159
   110                           	global	_ADRESL
   111  009E                     _ADRESL	set	158
   112                           	global	_TRISA
   113  0085                     _TRISA	set	133
   114                           	global	_TRISB
   115  0086                     _TRISB	set	134
   116                           	global	_TRISC
   117  0087                     _TRISC	set	135
   118                           	global	_TRISD
   119  0088                     _TRISD	set	136
   120                           	global	_TRISE
   121  0089                     _TRISE	set	137
   122                           	global	_ADIE
   123  0466                     _ADIE	set	1126
   124                           	global	_TRISA0
   125  0428                     _TRISA0	set	1064
   126                           	global	_TRISA1
   127  0429                     _TRISA1	set	1065
   128                           	global	_TRISA2
   129  042A                     _TRISA2	set	1066
   130                           	global	_TRISA3
   131  042B                     _TRISA3	set	1067
   132                           	global	_EEADR
   133  010D                     _EEADR	set	269
   134                           	global	_EEDATA
   135  010C                     _EEDATA	set	268
   136                           	global	_EECON1
   137  018C                     _EECON1	set	396
   138                           	global	_EECON2
   139  018D                     _EECON2	set	397
   140                           	global	_RD
   141  0C60                     _RD	set	3168
   142                           	global	_WR
   143  0C61                     _WR	set	3169
   144                           	global	_WREN
   145  0C62                     _WREN	set	3170
   146                           psect	strings,class=STRING,delta=2
   147                           global __pstrings
   148  0003                     __pstrings:
   149                           ;	global	stringdir,stringtab,__stringbase
   150  0003                     stringtab:
   151                           ;	String table - string pointers are 1 byte each
   152  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   153  0003  3000               movlw high(stringdir)
   154  0004  008A               movwf pclath
   155  0005  0804               movf fsr,w
   156  0006  0A84               incf fsr
   157  0007  0782               	addwf pc
   158  0008                     __stringbase:
   159  0008  3400               	retlw	0
   160                           psect	strings
   161                           	
   162  0009                     STR_1:	
   163  0009  3453               	retlw	83	;'S'
   164  000A  3474               	retlw	116	;'t'
   165  000B  3461               	retlw	97	;'a'
   166  000C  3472               	retlw	114	;'r'
   167  000D  3474               	retlw	116	;'t'
   168  000E  3421               	retlw	33	;'!'
   169  000F  3400               	retlw	0
   170                           psect	strings
   171                           	file	"/tmp/cgt5pxbyg"
   172                           	line	#
   173                           psect cinit,class=CODE,delta=2
   174                           global start_initialization
   175  03C1                     start_initialization:
   176                           
   177                           psect	bssBANK0,class=BANK0,space=1
   178                           global __pbssBANK0
   179  0034                     __pbssBANK0:
   180  0034                     _count:
   181  0034                            ds      4
   182                           
   183  0038                     _start:
   184  0038                            ds      4
   185                           
   186  003C                     _stop:
   187  003C                            ds      4
   188                           
   189  0040                     _clock_t:
   190  0040                            ds      2
   191                           
   192  0042                     _lastMotor:
   193  0042                            ds      2
   194                           
   195  0044                     _ticks:
   196  0044                            ds      2
   197                           
   198                           psect clrtext,class=CODE,delta=2
   199                           global clear_ram
   200                           ;	Called with FSR containing the base address, and
   201                           ;	W with the last address+1
   202  03A2                     clear_ram:
   203  03A2  0064               	clrwdt			;clear the watchdog before getting into this loop
   204  03A3                     clrloop:
   205  03A3  0180               	clrf	indf		;clear RAM location pointed to by FSR
   206  03A4  0A84               	incf	fsr,f		;increment pointer
   207  03A5  0604               	xorwf	fsr,w		;XOR with final address
   208  03A6  1903               	btfsc	status,2	;have we reached the end yet?
   209  03A7  3400               	retlw	0		;all done for this memory range, return
   210  03A8  0604               	xorwf	fsr,w		;XOR again to restore value
   211  03A9  2BA3               	goto	clrloop		;do the next byte
   212                           
   213                           ; Clear objects allocated to BANK0
   214                           psect cinit,class=CODE,delta=2
   215  03C1  1383               	bcf	status, 7	;select IRP bank0
   216  03C2  3034               	movlw	low(__pbssBANK0)
   217  03C3  0084               	movwf	fsr
   218  03C4  3046               	movlw	low((__pbssBANK0)+012h)
   219  03C5  120A  118A  23A2   	fcall	clear_ram
              120A  118A         
   220                           psect cinit,class=CODE,delta=2
   221                           global end_of_initialization
   222                           
   223                           ;End of C runtime variable initialization code
   224                           
   225  03CA                     end_of_initialization:
   226  03CA  0183               clrf status
   227  03CB  120A  118A  2E83   ljmp _main	;jump to C main() function
   228                           psect	cstackCOMMON,class=COMMON,space=1
   229                           global __pcstackCOMMON
   230  0070                     __pcstackCOMMON:
   231                           	global	?_lcdCountdown
   232  0070                     ?_lcdCountdown:	; 0 bytes @ 0x0
   233                           	global	?_lcd_goto
   234  0070                     ?_lcd_goto:	; 0 bytes @ 0x0
   235                           	global	?_lcd_puts
   236  0070                     ?_lcd_puts:	; 0 bytes @ 0x0
   237                           	global	?_lcd_putch
   238  0070                     ?_lcd_putch:	; 0 bytes @ 0x0
   239                           	global	?_lcd_init
   240  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   241                           	global	?__delay_ms
   242  0070                     ?__delay_ms:	; 0 bytes @ 0x0
   243                           	global	?_controlMotor
   244  0070                     ?_controlMotor:	; 0 bytes @ 0x0
   245                           	global	?_doDelay
   246  0070                     ?_doDelay:	; 0 bytes @ 0x0
   247                           	global	?_InitialiseADC
   248  0070                     ?_InitialiseADC:	; 0 bytes @ 0x0
   249                           	global	??_InitialiseADC
   250  0070                     ??_InitialiseADC:	; 0 bytes @ 0x0
   251                           	global	?_lcd_write
   252  0070                     ?_lcd_write:	; 0 bytes @ 0x0
   253                           	global	??_lcd_write
   254  0070                     ??_lcd_write:	; 0 bytes @ 0x0
   255                           	global	?_lcd_clear
   256  0070                     ?_lcd_clear:	; 0 bytes @ 0x0
   257                           	global	?_searchTrack
   258  0070                     ?_searchTrack:	; 2 bytes @ 0x0
   259                           	global	?_ReadADC
   260  0070                     ?_ReadADC:	; 2 bytes @ 0x0
   261                           	global	?_main
   262  0070                     ?_main:	; 2 bytes @ 0x0
   263                           	global	?___ftpack
   264  0070                     ?___ftpack:	; 3 bytes @ 0x0
   265                           	global	InitialiseADC@ADC_Channel
   266  0070                     InitialiseADC@ADC_Channel:	; 1 bytes @ 0x0
   267                           	global	__delay_ms@ms
   268  0070                     __delay_ms@ms:	; 2 bytes @ 0x0
   269                           	global	controlMotor@Leftpt
   270  0070                     controlMotor@Leftpt:	; 2 bytes @ 0x0
   271                           	global	___ftpack@arg
   272  0070                     ___ftpack@arg:	; 3 bytes @ 0x0
   273  0070                     	ds	1
   274                           	global	lcd_write@c
   275  0071                     lcd_write@c:	; 1 bytes @ 0x1
   276  0071                     	ds	1
   277                           	global	??_lcd_goto
   278  0072                     ??_lcd_goto:	; 0 bytes @ 0x2
   279                           	global	??_lcd_puts
   280  0072                     ??_lcd_puts:	; 0 bytes @ 0x2
   281                           	global	??_lcd_putch
   282  0072                     ??_lcd_putch:	; 0 bytes @ 0x2
   283                           	global	??__delay_ms
   284  0072                     ??__delay_ms:	; 0 bytes @ 0x2
   285                           	global	??_ReadADC
   286  0072                     ??_ReadADC:	; 0 bytes @ 0x2
   287                           	global	??_lcd_clear
   288  0072                     ??_lcd_clear:	; 0 bytes @ 0x2
   289                           	global	lcd_putch@c
   290  0072                     lcd_putch@c:	; 1 bytes @ 0x2
   291                           	global	lcd_goto@pos
   292  0072                     lcd_goto@pos:	; 1 bytes @ 0x2
   293                           	global	controlMotor@Rightpt
   294  0072                     controlMotor@Rightpt:	; 2 bytes @ 0x2
   295  0072                     	ds	1
   296                           	global	??_lcdCountdown
   297  0073                     ??_lcdCountdown:	; 0 bytes @ 0x3
   298                           	global	__delay_ms@i
   299  0073                     __delay_ms@i:	; 1 bytes @ 0x3
   300                           	global	lcdCountdown@t
   301  0073                     lcdCountdown@t:	; 1 bytes @ 0x3
   302                           	global	lcd_puts@s
   303  0073                     lcd_puts@s:	; 1 bytes @ 0x3
   304                           	global	___ftpack@exp
   305  0073                     ___ftpack@exp:	; 1 bytes @ 0x3
   306  0073                     	ds	1
   307                           	global	??_lcd_init
   308  0074                     ??_lcd_init:	; 0 bytes @ 0x4
   309                           	global	??_controlMotor
   310  0074                     ??_controlMotor:	; 0 bytes @ 0x4
   311                           	global	??_searchTrack
   312  0074                     ??_searchTrack:	; 0 bytes @ 0x4
   313                           	global	__delay_ms@us
   314  0074                     __delay_ms@us:	; 1 bytes @ 0x4
   315                           	global	ReadADC@ADC_Channel
   316  0074                     ReadADC@ADC_Channel:	; 1 bytes @ 0x4
   317                           	global	___ftpack@sign
   318  0074                     ___ftpack@sign:	; 1 bytes @ 0x4
   319  0074                     	ds	1
   320                           	global	??___ftpack
   321  0075                     ??___ftpack:	; 0 bytes @ 0x5
   322                           	global	??_doDelay
   323  0075                     ??_doDelay:	; 0 bytes @ 0x5
   324                           	global	ReadADC@ADC_VALUE
   325  0075                     ReadADC@ADC_VALUE:	; 2 bytes @ 0x5
   326  0075                     	ds	1
   327                           	global	lcd_init@init_value
   328  0076                     lcd_init@init_value:	; 1 bytes @ 0x6
   329  0076                     	ds	2
   330                           	global	?___ftge
   331  0078                     ?___ftge:	; 1 bit 
   332                           	global	___ftge@ff1
   333  0078                     ___ftge@ff1:	; 3 bytes @ 0x8
   334  0078                     	ds	3
   335                           	global	___ftge@ff2
   336  007B                     ___ftge@ff2:	; 3 bytes @ 0xB
   337  007B                     	ds	3
   338                           psect	cstackBANK0,class=BANK0,space=1
   339                           global __pcstackBANK0
   340  0020                     __pcstackBANK0:
   341                           	global	??___ftge
   342  0020                     ??___ftge:	; 0 bytes @ 0x0
   343  0020                     	ds	6
   344                           	global	?___awtoft
   345  0026                     ?___awtoft:	; 3 bytes @ 0x6
   346                           	global	___awtoft@c
   347  0026                     ___awtoft@c:	; 2 bytes @ 0x6
   348  0026                     	ds	3
   349                           	global	??___awtoft
   350  0029                     ??___awtoft:	; 0 bytes @ 0x9
   351  0029                     	ds	2
   352                           	global	___awtoft@sign
   353  002B                     ___awtoft@sign:	; 1 bytes @ 0xB
   354  002B                     	ds	1
   355                           	global	??_main
   356  002C                     ??_main:	; 0 bytes @ 0xC
   357  002C                     	ds	2
   358                           	global	main@leftpt
   359  002E                     main@leftpt:	; 2 bytes @ 0xE
   360  002E                     	ds	2
   361                           	global	main@rightpt
   362  0030                     main@rightpt:	; 2 bytes @ 0x10
   363  0030                     	ds	2
   364                           	global	main@read
   365  0032                     main@read:	; 2 bytes @ 0x12
   366  0032                     	ds	2
   367 ;;Data sizes: Strings 7, constant 0, data 0, bss 18, persistent 0 stack 0
   368 ;;Auto spaces:   Size  Autos    Used
   369 ;; COMMON          14     14      14
   370 ;; BANK0           80     20      38
   371 ;; BANK1           80      0       0
   372 ;; BANK3           96      0       0
   373 ;; BANK2           80      0       0
   374                           
   375 ;;
   376 ;; Pointer list with targets:
   377                           
   378 ;; ?___ftpack	float  size(1) Largest target is 0
   379 ;;
   380 ;; ?___awtoft	float  size(1) Largest target is 0
   381 ;;
   382 ;; ?_ReadADC	unsigned int  size(1) Largest target is 0
   383 ;;
   384 ;; lcd_puts@s	PTR const unsigned char  size(1) Largest target is 7
   385 ;;		 -> STR_1(CODE[7]), 
   386 ;;
   387                           
   388                           
   389 ;;
   390 ;; Critical Paths under _main in COMMON
   391 ;;
   392 ;;   _main->___ftge
   393 ;;   _doDelay->__delay_ms
   394 ;;   _lcd_init->_lcd_clear
   395 ;;   _lcdCountdown->_lcd_goto
   396 ;;   _lcdCountdown->_lcd_putch
   397 ;;   _lcd_clear->_lcd_write
   398 ;;   _lcd_putch->_lcd_write
   399 ;;   _lcd_puts->_lcd_write
   400 ;;   _lcd_goto->_lcd_write
   401 ;;   ___awtoft->___ftge
   402 ;;   _searchTrack->_controlMotor
   403 ;;   ___ftge->___ftpack
   404 ;;
   405 ;; Critical Paths under _main in BANK0
   406 ;;
   407 ;;   _main->___awtoft
   408 ;;   ___awtoft->___ftge
   409 ;;
   410 ;; Critical Paths under _main in BANK1
   411 ;;
   412 ;;   None.
   413 ;;
   414 ;; Critical Paths under _main in BANK3
   415 ;;
   416 ;;   None.
   417 ;;
   418 ;; Critical Paths under _main in BANK2
   419 ;;
   420 ;;   None.
   421                           
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   424 ;;
   425                           
   426 ;;
   427 ;;Call Graph Tables:
   428 ;;
   429 ;; ---------------------------------------------------------------------------------
   430 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   431 ;; ---------------------------------------------------------------------------------
   432 ;; (0) _main                                                 8     8      0    1282
   433 ;;                                             12 BANK0      8     8      0
   434 ;;                           _lcd_init
   435 ;;                            _doDelay
   436 ;;                      _InitialiseADC
   437 ;;                            _ReadADC
   438 ;;                           ___awtoft
   439 ;;                             ___ftge
   440 ;;                        _searchTrack
   441 ;;                       _controlMotor
   442 ;; ---------------------------------------------------------------------------------
   443 ;; (1) _doDelay                                              0     0      0     377
   444 ;;                       _lcdCountdown
   445 ;;                          __delay_ms
   446 ;;                           _lcd_goto
   447 ;;                           _lcd_puts
   448 ;; ---------------------------------------------------------------------------------
   449 ;; (1) _lcd_init                                             3     3      0     111
   450 ;;                                              4 COMMON     3     3      0
   451 ;;                          _lcd_write
   452 ;;                          _lcd_clear
   453 ;; ---------------------------------------------------------------------------------
   454 ;; (2) _lcdCountdown                                         1     1      0     154
   455 ;;                                              3 COMMON     1     1      0
   456 ;;                           _lcd_goto
   457 ;;                          _lcd_putch
   458 ;; ---------------------------------------------------------------------------------
   459 ;; (2) _lcd_clear                                            2     2      0      44
   460 ;;                                              2 COMMON     2     2      0
   461 ;;                          _lcd_write
   462 ;; ---------------------------------------------------------------------------------
   463 ;; (3) _lcd_putch                                            1     1      0      66
   464 ;;                                              2 COMMON     1     1      0
   465 ;;                          _lcd_write
   466 ;; ---------------------------------------------------------------------------------
   467 ;; (2) _lcd_puts                                             2     2      0      89
   468 ;;                                              2 COMMON     2     2      0
   469 ;;                          _lcd_write
   470 ;; ---------------------------------------------------------------------------------
   471 ;; (2) _lcd_goto                                             1     1      0      66
   472 ;;                                              2 COMMON     1     1      0
   473 ;;                          _lcd_write
   474 ;; ---------------------------------------------------------------------------------
   475 ;; (1) ___awtoft                                             6     3      3     300
   476 ;;                                              6 BANK0      6     3      3
   477 ;;                           ___ftpack
   478 ;;                             ___ftge (ARG)
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (3) _lcd_write                                            2     2      0      44
   481 ;;                                              0 COMMON     2     2      0
   482 ;; ---------------------------------------------------------------------------------
   483 ;; (1) _searchTrack                                          0     0      0      44
   484 ;;                       _controlMotor
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (1) ___ftge                                              12     6      6     136
   487 ;;                                              8 COMMON     6     0      6
   488 ;;                                              0 BANK0      6     6      0
   489 ;;                           ___ftpack (ARG)
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (2) ___ftpack                                             8     3      5     209
   492 ;;                                              0 COMMON     8     3      5
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (1) _ReadADC                                              7     5      2      46
   495 ;;                                              0 COMMON     7     5      2
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (1) _InitialiseADC                                        1     1      0      88
   498 ;;                                              0 COMMON     1     1      0
   499 ;; ---------------------------------------------------------------------------------
   500 ;; (1) _controlMotor                                         4     0      4      44
   501 ;;                                              0 COMMON     4     0      4
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (2) __delay_ms                                            5     3      2      68
   504 ;;                                              0 COMMON     5     3      2
   505 ;; ---------------------------------------------------------------------------------
   506 ;; Estimated maximum stack depth 3
   507 ;; ---------------------------------------------------------------------------------
   508                           
   509 ;; Call Graph Graphs:
   510                           
   511 ;; _main (ROOT)
   512 ;;   _lcd_init
   513 ;;     _lcd_write
   514 ;;     _lcd_clear
   515 ;;       _lcd_write
   516 ;;   _doDelay
   517 ;;     _lcdCountdown
   518 ;;       _lcd_goto
   519 ;;         _lcd_write
   520 ;;       _lcd_putch
   521 ;;         _lcd_write
   522 ;;     __delay_ms
   523 ;;     _lcd_goto
   524 ;;       _lcd_write
   525 ;;     _lcd_puts
   526 ;;       _lcd_write
   527 ;;   _InitialiseADC
   528 ;;   _ReadADC
   529 ;;   ___awtoft
   530 ;;     ___ftpack
   531 ;;     ___ftge (ARG)
   532 ;;       ___ftpack (ARG)
   533 ;;   ___ftge
   534 ;;     ___ftpack (ARG)
   535 ;;   _searchTrack
   536 ;;     _controlMotor
   537 ;;   _controlMotor
   538 ;;
   539                           
   540 ;; Address spaces:
   541                           
   542 ;;Name               Size   Autos  Total    Cost      Usage
   543 ;;BITCOMMON            E      0       0       0        0.0%
   544 ;;EEDATA             100      0       0       0        0.0%
   545 ;;NULL                 0      0       0       0        0.0%
   546 ;;CODE                 0      0       0       0        0.0%
   547 ;;COMMON               E      E       E       1      100.0%
   548 ;;BITSFR0              0      0       0       1        0.0%
   549 ;;SFR0                 0      0       0       1        0.0%
   550 ;;BITSFR1              0      0       0       2        0.0%
   551 ;;SFR1                 0      0       0       2        0.0%
   552 ;;STACK                0      0       4       2        0.0%
   553 ;;BITBANK0            50      0       0       3        0.0%
   554 ;;BANK0               50     14      26       4       47.5%
   555 ;;BITSFR3              0      0       0       4        0.0%
   556 ;;SFR3                 0      0       0       4        0.0%
   557 ;;BITBANK1            50      0       0       5        0.0%
   558 ;;BITSFR2              0      0       0       5        0.0%
   559 ;;SFR2                 0      0       0       5        0.0%
   560 ;;BANK1               50      0       0       6        0.0%
   561 ;;BITBANK3            60      0       0       7        0.0%
   562 ;;BANK3               60      0       0       8        0.0%
   563 ;;BANK2               50      0       0       9        0.0%
   564 ;;ABS                  0      0      34      10        0.0%
   565 ;;BITBANK2            50      0       0      11        0.0%
   566 ;;DATA                 0      0      38      12        0.0%
   567                           
   568                           	global	_main
   569                           psect	maintext,global,class=CODE,delta=2
   570                           global __pmaintext
   571  0683                     __pmaintext:
   572                           
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 307 in file "newmain.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  read            2   18[BANK0 ] int 
   580 ;;  rightpt         2   16[BANK0 ] int 
   581 ;;  leftpt          2   14[BANK0 ] int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2  1579[COMMON] int 
   584 ;; Registers used:
   585 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 17F/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       6       0       0       0
   593 ;;      Temps:          0       2       0       0       0
   594 ;;      Totals:         0       8       0       0       0
   595 ;;Total ram usage:        8 bytes
   596 ;; Hardware stack levels required when called:    4
   597 ;; This function calls:
   598 ;;		_lcd_init
   599 ;;		_doDelay
   600 ;;		_InitialiseADC
   601 ;;		_ReadADC
   602 ;;		___awtoft
   603 ;;		___ftge
   604 ;;		_searchTrack
   605 ;;		_controlMotor
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           psect	maintext
   611                           	file	"newmain.c"
   612                           	line	307
   613                           	global	__size_of_main
   614  00B6                     	__size_of_main	equ	__end_of_main-_main
   615                           	
   616  0683                     _main:	
   617                           	opt	stack 4
   618                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   619                           	line	309
   620                           	
   621  0683                     l6521:	
   622                           ;newmain.c: 309: TRISB = 0x00;
   623  0683  1683               	bsf	status, 5	;RP0=1, select bank1
   624  0684  1303               	bcf	status, 6	;RP1=0, select bank1
   625  0685  0186               	clrf	(134)^080h	;volatile
   626                           	line	310
   627                           ;newmain.c: 310: TRISC = 0x00;
   628  0686  0187               	clrf	(135)^080h	;volatile
   629                           	line	311
   630                           ;newmain.c: 311: TRISD = 0X00;
   631  0687  0188               	clrf	(136)^080h	;volatile
   632                           	line	312
   633                           ;newmain.c: 312: TRISE = 0X00;
   634  0688  0189               	clrf	(137)^080h	;volatile
   635                           	line	314
   636                           	
   637  0689                     l6523:	
   638                           ;newmain.c: 314: lcd_init();
   639  0689  120A  118A  2542   	fcall	_lcd_init
              120A  118A         
   640                           	line	318
   641                           	
   642  068E                     l6525:	
   643                           ;newmain.c: 318: doDelay();
   644  068E  120A  118A  2739   	fcall	_doDelay
              120A  118A         
   645                           	line	320
   646                           	
   647  0693                     l6527:	
   648                           ;newmain.c: 320: InitialiseADC (0);
   649  0693  3000               	movlw	(0)
   650  0694  120A  118A  24A1   	fcall	_InitialiseADC
              120A  118A         
   651                           	line	321
   652                           	
   653  0699                     l6529:	
   654                           ;newmain.c: 321: InitialiseADC (1);
   655  0699  3001               	movlw	(01h)
   656  069A  120A  118A  24A1   	fcall	_InitialiseADC
              120A  118A         
   657  069F  2EA0               	goto	l6531
   658                           	line	324
   659                           ;newmain.c: 322: int read, leftpt, rightpt;
   660                           ;newmain.c: 324: while (1)
   661                           	
   662  06A0                     l1580:	
   663                           	line	327
   664                           	
   665  06A0                     l6531:	
   666                           ;newmain.c: 325: {
   667                           ;newmain.c: 327: read = ReadADC(0);
   668  06A0  3000               	movlw	(0)
   669  06A1  120A  118A  2501   	fcall	_ReadADC
              120A  118A         
   670  06A6  0871               	movf	(1+(?_ReadADC)),w
   671  06A7  1283               	bcf	status, 5	;RP0=0, select bank0
   672  06A8  1303               	bcf	status, 6	;RP1=0, select bank0
   673  06A9  01B3               	clrf	(main@read+1)
   674  06AA  07B3               	addwf	(main@read+1)
   675  06AB  0870               	movf	(0+(?_ReadADC)),w
   676  06AC  01B2               	clrf	(main@read)
   677  06AD  07B2               	addwf	(main@read)
   678                           
   679                           	line	328
   680                           	
   681  06AE                     l6533:	
   682                           ;newmain.c: 328: leftpt = (read > 1.5) ? 1 : 0;
   683  06AE  3000               	movlw	0x0
   684  06AF  00F8               	movwf	(?___ftge)
   685  06B0  30C0               	movlw	0xc0
   686  06B1  00F9               	movwf	(?___ftge+1)
   687  06B2  303F               	movlw	0x3f
   688  06B3  00FA               	movwf	(?___ftge+2)
   689  06B4  0833               	movf	(main@read+1),w
   690  06B5  01A7               	clrf	(?___awtoft+1)
   691  06B6  07A7               	addwf	(?___awtoft+1)
   692  06B7  0832               	movf	(main@read),w
   693  06B8  01A6               	clrf	(?___awtoft)
   694  06B9  07A6               	addwf	(?___awtoft)
   695                           
   696  06BA  120A  118A  2475   	fcall	___awtoft
              120A  118A         
   697  06BF  1283               	bcf	status, 5	;RP0=0, select bank0
   698  06C0  1303               	bcf	status, 6	;RP1=0, select bank0
   699  06C1  0826               	movf	(0+(?___awtoft)),w
   700  06C2  00FB               	movwf	0+(?___ftge)+03h
   701  06C3  0827               	movf	(1+(?___awtoft)),w
   702  06C4  00FC               	movwf	1+(?___ftge)+03h
   703  06C5  0828               	movf	(2+(?___awtoft)),w
   704  06C6  00FD               	movwf	2+(?___ftge)+03h
   705  06C7  120A  118A  2598   	fcall	___ftge
              120A  118A         
   706  06CC  3000               	movlw	0
   707  06CD  1C03               	btfss	status,0
   708  06CE  3001               	movlw	1
   709  06CF  1283               	bcf	status, 5	;RP0=0, select bank0
   710  06D0  1303               	bcf	status, 6	;RP1=0, select bank0
   711  06D1  00AC               	movwf	(??_main+0)+0
   712  06D2  01AD               	clrf	(??_main+0)+0+1
   713  06D3  082C               	movf	0+(??_main+0)+0,w
   714  06D4  00AE               	movwf	(main@leftpt)
   715  06D5  082D               	movf	1+(??_main+0)+0,w
   716  06D6  00AF               	movwf	(main@leftpt+1)
   717                           	line	331
   718                           	
   719  06D7                     l6535:	
   720                           ;newmain.c: 331: read = ReadADC(1);
   721  06D7  3001               	movlw	(01h)
   722  06D8  120A  118A  2501   	fcall	_ReadADC
              120A  118A         
   723  06DD  0871               	movf	(1+(?_ReadADC)),w
   724  06DE  1283               	bcf	status, 5	;RP0=0, select bank0
   725  06DF  1303               	bcf	status, 6	;RP1=0, select bank0
   726  06E0  01B3               	clrf	(main@read+1)
   727  06E1  07B3               	addwf	(main@read+1)
   728  06E2  0870               	movf	(0+(?_ReadADC)),w
   729  06E3  01B2               	clrf	(main@read)
   730  06E4  07B2               	addwf	(main@read)
   731                           
   732                           	line	332
   733                           	
   734  06E5                     l6537:	
   735                           ;newmain.c: 332: rightpt = (read > 1.5) ? 1 : 0;
   736  06E5  3000               	movlw	0x0
   737  06E6  00F8               	movwf	(?___ftge)
   738  06E7  30C0               	movlw	0xc0
   739  06E8  00F9               	movwf	(?___ftge+1)
   740  06E9  303F               	movlw	0x3f
   741  06EA  00FA               	movwf	(?___ftge+2)
   742  06EB  0833               	movf	(main@read+1),w
   743  06EC  01A7               	clrf	(?___awtoft+1)
   744  06ED  07A7               	addwf	(?___awtoft+1)
   745  06EE  0832               	movf	(main@read),w
   746  06EF  01A6               	clrf	(?___awtoft)
   747  06F0  07A6               	addwf	(?___awtoft)
   748                           
   749  06F1  120A  118A  2475   	fcall	___awtoft
              120A  118A         
   750  06F6  1283               	bcf	status, 5	;RP0=0, select bank0
   751  06F7  1303               	bcf	status, 6	;RP1=0, select bank0
   752  06F8  0826               	movf	(0+(?___awtoft)),w
   753  06F9  00FB               	movwf	0+(?___ftge)+03h
   754  06FA  0827               	movf	(1+(?___awtoft)),w
   755  06FB  00FC               	movwf	1+(?___ftge)+03h
   756  06FC  0828               	movf	(2+(?___awtoft)),w
   757  06FD  00FD               	movwf	2+(?___ftge)+03h
   758  06FE  120A  118A  2598   	fcall	___ftge
              120A  118A         
   759  0703  3000               	movlw	0
   760  0704  1C03               	btfss	status,0
   761  0705  3001               	movlw	1
   762  0706  1283               	bcf	status, 5	;RP0=0, select bank0
   763  0707  1303               	bcf	status, 6	;RP1=0, select bank0
   764  0708  00AC               	movwf	(??_main+0)+0
   765  0709  01AD               	clrf	(??_main+0)+0+1
   766  070A  082C               	movf	0+(??_main+0)+0,w
   767  070B  00B0               	movwf	(main@rightpt)
   768  070C  082D               	movf	1+(??_main+0)+0,w
   769  070D  00B1               	movwf	(main@rightpt+1)
   770                           	line	334
   771                           	
   772  070E                     l6539:	
   773                           ;newmain.c: 334: if((leftpt==0) && (rightpt==0))
   774  070E  082F               	movf	((main@leftpt+1)),w
   775  070F  042E               	iorwf	((main@leftpt)),w
   776  0710  1D03               	skipz
   777  0711  2F13               	goto	u3311
   778  0712  2F14               	goto	u3310
   779  0713                     u3311:
   780  0713  2F20               	goto	l6545
   781  0714                     u3310:
   782                           	
   783  0714                     l6541:	
   784  0714  0831               	movf	((main@rightpt+1)),w
   785  0715  0430               	iorwf	((main@rightpt)),w
   786  0716  1D03               	skipz
   787  0717  2F19               	goto	u3321
   788  0718  2F1A               	goto	u3320
   789  0719                     u3321:
   790  0719  2F20               	goto	l6545
   791  071A                     u3320:
   792                           	line	336
   793                           	
   794  071A                     l6543:	
   795                           ;newmain.c: 335: {
   796                           ;newmain.c: 336: searchTrack();
   797  071A  120A  118A  24D1   	fcall	_searchTrack
              120A  118A         
   798                           	line	337
   799                           ;newmain.c: 337: }
   800  071F  2EA0               	goto	l6531
   801                           	line	338
   802                           	
   803  0720                     l1581:	
   804                           	line	340
   805                           	
   806  0720                     l6545:	
   807                           ;newmain.c: 338: else
   808                           ;newmain.c: 339: {
   809                           ;newmain.c: 340: controlMotor(leftpt, rightpt);
   810  0720  1283               	bcf	status, 5	;RP0=0, select bank0
   811  0721  1303               	bcf	status, 6	;RP1=0, select bank0
   812  0722  082F               	movf	(main@leftpt+1),w
   813  0723  01F1               	clrf	(?_controlMotor+1)
   814  0724  07F1               	addwf	(?_controlMotor+1)
   815  0725  082E               	movf	(main@leftpt),w
   816  0726  01F0               	clrf	(?_controlMotor)
   817  0727  07F0               	addwf	(?_controlMotor)
   818                           
   819  0728  0831               	movf	(main@rightpt+1),w
   820  0729  01F3               	clrf	1+(?_controlMotor)+02h
   821  072A  07F3               	addwf	1+(?_controlMotor)+02h
   822  072B  0830               	movf	(main@rightpt),w
   823  072C  01F2               	clrf	0+(?_controlMotor)+02h
   824  072D  07F2               	addwf	0+(?_controlMotor)+02h
   825                           
   826  072E  120A  118A  2409   	fcall	_controlMotor
              120A  118A         
   827  0733  2EA0               	goto	l6531
   828                           	line	341
   829                           	
   830  0734                     l1582:	
   831  0734  2EA0               	goto	l6531
   832                           	line	342
   833                           	
   834  0735                     l1583:	
   835                           	line	324
   836  0735  2EA0               	goto	l6531
   837                           	
   838  0736                     l1584:	
   839                           	line	343
   840                           	
   841  0736                     l1585:	
   842                           	global	start
   843  0736  120A  118A  2800   	ljmp	start
   844                           	opt stack 0
   845                           GLOBAL	__end_of_main
   846  0739                     	__end_of_main:
   847 ;; =============== function _main ends ============
   848                           
   849                           	signat	_main,90
   850                           	global	_doDelay
   851                           psect	text418,local,class=CODE,delta=2
   852                           global __ptext418
   853  0739                     __ptext418:
   854                           
   855 ;; *************** function _doDelay *****************
   856 ;; Defined at:
   857 ;;		line 170 in file "newmain.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;		None               void
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    3
   878 ;; This function calls:
   879 ;;		_lcdCountdown
   880 ;;		__delay_ms
   881 ;;		_lcd_goto
   882 ;;		_lcd_puts
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           psect	text418
   888                           	file	"newmain.c"
   889                           	line	170
   890                           	global	__size_of_doDelay
   891  00C7                     	__size_of_doDelay	equ	__end_of_doDelay-_doDelay
   892                           	
   893  0739                     _doDelay:	
   894                           	opt	stack 4
   895                           ; Regs used in _doDelay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   896                           	line	171
   897                           	
   898  0739                     l6503:	
   899                           ;newmain.c: 171: lcdCountdown('8');
   900  0739  3038               	movlw	(038h)
   901  073A  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
   902                           	line	172
   903                           ;newmain.c: 172: _delay_ms(1000);
   904  073F  30E8               	movlw	low(03E8h)
   905  0740  00F0               	movwf	(?__delay_ms)
   906  0741  3003               	movlw	high(03E8h)
   907  0742  00F1               	movwf	((?__delay_ms))+1
   908  0743  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   909                           	line	174
   910                           ;newmain.c: 174: lcdCountdown('7');
   911  0748  3037               	movlw	(037h)
   912  0749  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
   913                           	line	175
   914                           ;newmain.c: 175: _delay_ms(1000);
   915  074E  30E8               	movlw	low(03E8h)
   916  074F  00F0               	movwf	(?__delay_ms)
   917  0750  3003               	movlw	high(03E8h)
   918  0751  00F1               	movwf	((?__delay_ms))+1
   919  0752  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   920                           	line	177
   921                           ;newmain.c: 177: lcdCountdown('6');
   922  0757  3036               	movlw	(036h)
   923  0758  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
   924                           	line	178
   925                           ;newmain.c: 178: _delay_ms(1000);
   926  075D  30E8               	movlw	low(03E8h)
   927  075E  00F0               	movwf	(?__delay_ms)
   928  075F  3003               	movlw	high(03E8h)
   929  0760  00F1               	movwf	((?__delay_ms))+1
   930  0761  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   931                           	line	180
   932                           ;newmain.c: 180: lcdCountdown('5');
   933  0766  3035               	movlw	(035h)
   934  0767  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
   935                           	line	181
   936                           ;newmain.c: 181: _delay_ms(1000);
   937  076C  30E8               	movlw	low(03E8h)
   938  076D  00F0               	movwf	(?__delay_ms)
   939  076E  3003               	movlw	high(03E8h)
   940  076F  00F1               	movwf	((?__delay_ms))+1
   941  0770  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   942                           	line	183
   943                           ;newmain.c: 183: lcdCountdown('4');
   944  0775  3034               	movlw	(034h)
   945  0776  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
   946                           	line	184
   947                           ;newmain.c: 184: _delay_ms(1000);
   948  077B  30E8               	movlw	low(03E8h)
   949  077C  00F0               	movwf	(?__delay_ms)
   950  077D  3003               	movlw	high(03E8h)
   951  077E  00F1               	movwf	((?__delay_ms))+1
   952  077F  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   953                           	line	189
   954                           ;newmain.c: 189: lcdCountdown('3');
   955  0784  3033               	movlw	(033h)
   956  0785  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
   957                           	line	190
   958                           	
   959  078A                     l6505:	
   960                           ;newmain.c: 190: RC3 = 1;
   961  078A  1283               	bcf	status, 5	;RP0=0, select bank0
   962  078B  1303               	bcf	status, 6	;RP1=0, select bank0
   963  078C  1587               	bsf	(59/8),(59)&7
   964                           	line	191
   965                           ;newmain.c: 191: _delay_ms(200);
   966  078D  30C8               	movlw	low(0C8h)
   967  078E  00F0               	movwf	(?__delay_ms)
   968  078F  3000               	movlw	high(0C8h)
   969  0790  00F1               	movwf	((?__delay_ms))+1
   970  0791  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   971                           	line	192
   972                           	
   973  0796                     l6507:	
   974                           ;newmain.c: 192: RC3 = 0;
   975  0796  1283               	bcf	status, 5	;RP0=0, select bank0
   976  0797  1303               	bcf	status, 6	;RP1=0, select bank0
   977  0798  1187               	bcf	(59/8),(59)&7
   978                           	line	193
   979                           ;newmain.c: 193: _delay_ms(700);
   980  0799  30BC               	movlw	low(02BCh)
   981  079A  00F0               	movwf	(?__delay_ms)
   982  079B  3002               	movlw	high(02BCh)
   983  079C  00F1               	movwf	((?__delay_ms))+1
   984  079D  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   985                           	line	195
   986                           	
   987  07A2                     l6509:	
   988                           ;newmain.c: 195: RC3 = 1;
   989  07A2  1283               	bcf	status, 5	;RP0=0, select bank0
   990  07A3  1303               	bcf	status, 6	;RP1=0, select bank0
   991  07A4  1587               	bsf	(59/8),(59)&7
   992                           	line	196
   993                           ;newmain.c: 196: _delay_ms(100);
   994  07A5  3064               	movlw	low(064h)
   995  07A6  00F0               	movwf	(?__delay_ms)
   996  07A7  3000               	movlw	high(064h)
   997  07A8  00F1               	movwf	((?__delay_ms))+1
   998  07A9  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
   999                           	line	197
  1000                           ;newmain.c: 197: lcdCountdown('2');
  1001  07AE  3032               	movlw	(032h)
  1002  07AF  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
  1003                           	line	198
  1004                           ;newmain.c: 198: _delay_ms(100);
  1005  07B4  3064               	movlw	low(064h)
  1006  07B5  00F0               	movwf	(?__delay_ms)
  1007  07B6  3000               	movlw	high(064h)
  1008  07B7  00F1               	movwf	((?__delay_ms))+1
  1009  07B8  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
  1010                           	line	199
  1011                           	
  1012  07BD                     l6511:	
  1013                           ;newmain.c: 199: RC3 = 0;
  1014  07BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1015  07BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1016  07BF  1187               	bcf	(59/8),(59)&7
  1017                           	line	200
  1018                           ;newmain.c: 200: _delay_ms(700);
  1019  07C0  30BC               	movlw	low(02BCh)
  1020  07C1  00F0               	movwf	(?__delay_ms)
  1021  07C2  3002               	movlw	high(02BCh)
  1022  07C3  00F1               	movwf	((?__delay_ms))+1
  1023  07C4  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
  1024                           	line	202
  1025                           	
  1026  07C9                     l6513:	
  1027                           ;newmain.c: 202: RC3 = 1;
  1028  07C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1029  07CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1030  07CB  1587               	bsf	(59/8),(59)&7
  1031                           	line	203
  1032                           ;newmain.c: 203: _delay_ms(200);
  1033  07CC  30C8               	movlw	low(0C8h)
  1034  07CD  00F0               	movwf	(?__delay_ms)
  1035  07CE  3000               	movlw	high(0C8h)
  1036  07CF  00F1               	movwf	((?__delay_ms))+1
  1037  07D0  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
  1038                           	line	204
  1039                           ;newmain.c: 204: lcdCountdown('1');
  1040  07D5  3031               	movlw	(031h)
  1041  07D6  120A  118A  23CE   	fcall	_lcdCountdown
              120A  118A         
  1042                           	line	205
  1043                           	
  1044  07DB                     l6515:	
  1045                           ;newmain.c: 205: RC3 = 0;
  1046  07DB  1283               	bcf	status, 5	;RP0=0, select bank0
  1047  07DC  1303               	bcf	status, 6	;RP1=0, select bank0
  1048  07DD  1187               	bcf	(59/8),(59)&7
  1049                           	line	206
  1050                           ;newmain.c: 206: _delay_ms(700);
  1051  07DE  30BC               	movlw	low(02BCh)
  1052  07DF  00F0               	movwf	(?__delay_ms)
  1053  07E0  3002               	movlw	high(02BCh)
  1054  07E1  00F1               	movwf	((?__delay_ms))+1
  1055  07E2  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
  1056                           	line	208
  1057                           	
  1058  07E7                     l6517:	
  1059                           ;newmain.c: 208: RC4 = 1;
  1060  07E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1061  07E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1062  07E9  1607               	bsf	(60/8),(60)&7
  1063                           	line	209
  1064                           ;newmain.c: 209: _delay_ms(300);
  1065  07EA  302C               	movlw	low(012Ch)
  1066  07EB  00F0               	movwf	(?__delay_ms)
  1067  07EC  3001               	movlw	high(012Ch)
  1068  07ED  00F1               	movwf	((?__delay_ms))+1
  1069  07EE  120A  118A  244F   	fcall	__delay_ms
              120A  118A         
  1070                           	line	211
  1071                           ;newmain.c: 211: lcd_goto(0);
  1072  07F3  3000               	movlw	(0)
  1073  07F4  120A  118A  23B5   	fcall	_lcd_goto
              120A  118A         
  1074                           	line	212
  1075                           	
  1076  07F9                     l6519:	
  1077                           ;newmain.c: 212: lcd_puts("Start!");
  1078  07F9  3001               	movlw	((STR_1-__stringbase))&0ffh
  1079  07FA  120A  118A  242B   	fcall	_lcd_puts
              120A  118A         
  1080                           	line	214
  1081                           	
  1082  07FF                     l1542:	
  1083  07FF  0008               	return
  1084                           	opt stack 0
  1085                           GLOBAL	__end_of_doDelay
  1086  0800                     	__end_of_doDelay:
  1087 ;; =============== function _doDelay ends ============
  1088                           
  1089                           	signat	_doDelay,88
  1090                           	global	_lcd_init
  1091                           psect	text419,local,class=CODE,delta=2
  1092                           global __ptext419
  1093  0542                     __ptext419:
  1094                           
  1095 ;; *************** function _lcd_init *****************
  1096 ;; Defined at:
  1097 ;;		line 93 in file "lcd.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;		None
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  init_value      1    6[COMMON] unsigned char 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, pclath, cstack
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       0       0       0       0
  1112 ;;      Locals:         1       0       0       0       0
  1113 ;;      Temps:          2       0       0       0       0
  1114 ;;      Totals:         3       0       0       0       0
  1115 ;;Total ram usage:        3 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    2
  1118 ;; This function calls:
  1119 ;;		_lcd_write
  1120 ;;		_lcd_clear
  1121 ;; This function is called by:
  1122 ;;		_main
  1123 ;; This function uses a non-reentrant model
  1124 ;;
  1125                           psect	text419
  1126                           	file	"lcd.c"
  1127                           	line	93
  1128                           	global	__size_of_lcd_init
  1129  0056                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  1130                           	
  1131  0542                     _lcd_init:	
  1132                           	opt	stack 5
  1133                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1134                           	line	96
  1135                           	
  1136  0542                     l6467:	
  1137                           ;lcd.c: 94: char init_value;
  1138                           ;lcd.c: 96: ADCON1 = 0x06;
  1139  0542  3006               	movlw	(06h)
  1140  0543  1683               	bsf	status, 5	;RP0=1, select bank1
  1141  0544  1303               	bcf	status, 6	;RP1=0, select bank1
  1142  0545  009F               	movwf	(159)^080h	;volatile
  1143                           	line	98
  1144                           ;lcd.c: 98: init_value = 0x3;
  1145  0546  3003               	movlw	(03h)
  1146  0547  00F4               	movwf	(??_lcd_init+0)+0
  1147  0548  0874               	movf	(??_lcd_init+0)+0,w
  1148  0549  00F6               	movwf	(lcd_init@init_value)
  1149                           	line	99
  1150                           	
  1151  054A                     l6469:	
  1152                           ;lcd.c: 99: TRISA=0;
  1153  054A  0185               	clrf	(133)^080h	;volatile
  1154                           	line	100
  1155                           	
  1156  054B                     l6471:	
  1157                           ;lcd.c: 100: TRISD=0;
  1158  054B  0188               	clrf	(136)^080h	;volatile
  1159                           	line	101
  1160                           	
  1161  054C                     l6473:	
  1162                           ;lcd.c: 101: RA3 = 0;
  1163  054C  1283               	bcf	status, 5	;RP0=0, select bank0
  1164  054D  1303               	bcf	status, 6	;RP1=0, select bank0
  1165  054E  1185               	bcf	(43/8),(43)&7
  1166                           	line	102
  1167                           	
  1168  054F                     l6475:	
  1169                           ;lcd.c: 102: RA1 = 0;
  1170  054F  1085               	bcf	(41/8),(41)&7
  1171                           	line	103
  1172                           	
  1173  0550                     l6477:	
  1174                           ;lcd.c: 103: RA2 = 0;
  1175  0550  1105               	bcf	(42/8),(42)&7
  1176                           	line	105
  1177                           ;lcd.c: 105: _delay((unsigned long)((15)*(4000000/4000.0)));
  1178                           	opt asmopt_off
  1179  0551  3014               movlw	20
  1180  0552  00F5               movwf	((??_lcd_init+0)+0+1),f
  1181  0553  3079               	movlw	121
  1182  0554  00F4               movwf	((??_lcd_init+0)+0),f
  1183  0555                     u3337:
  1184  0555  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1185  0556  2D55               	goto	u3337
  1186  0557  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1187  0558  2D55               	goto	u3337
  1188  0559  2D5A               	nop2
  1189                           opt asmopt_on
  1190                           
  1191                           	line	106
  1192                           ;lcd.c: 106: PORTD = init_value;
  1193  055A  0876               	movf	(lcd_init@init_value),w
  1194  055B  1283               	bcf	status, 5	;RP0=0, select bank0
  1195  055C  1303               	bcf	status, 6	;RP1=0, select bank0
  1196  055D  0088               	movwf	(8)	;volatile
  1197                           	line	107
  1198                           	
  1199  055E                     l6479:	
  1200                           ;lcd.c: 107: ((RA1 = 1),(RA1=0));
  1201  055E  1485               	bsf	(41/8),(41)&7
  1202                           	
  1203  055F                     l6481:	
  1204  055F  1085               	bcf	(41/8),(41)&7
  1205                           	line	108
  1206                           ;lcd.c: 108: _delay((unsigned long)((5)*(4000000/4000.0)));
  1207                           	opt asmopt_off
  1208  0560  3007               movlw	7
  1209  0561  00F5               movwf	((??_lcd_init+0)+0+1),f
  1210  0562  307D               	movlw	125
  1211  0563  00F4               movwf	((??_lcd_init+0)+0),f
  1212  0564                     u3347:
  1213  0564  0BF4               	decfsz	((??_lcd_init+0)+0),f
  1214  0565  2D64               	goto	u3347
  1215  0566  0BF5               	decfsz	((??_lcd_init+0)+0+1),f
  1216  0567  2D64               	goto	u3347
  1217                           opt asmopt_on
  1218                           
  1219                           	line	109
  1220                           	
  1221  0568                     l6483:	
  1222                           ;lcd.c: 109: ((RA1 = 1),(RA1=0));
  1223  0568  1283               	bcf	status, 5	;RP0=0, select bank0
  1224  0569  1303               	bcf	status, 6	;RP1=0, select bank0
  1225  056A  1485               	bsf	(41/8),(41)&7
  1226                           	
  1227  056B                     l6485:	
  1228  056B  1085               	bcf	(41/8),(41)&7
  1229                           	line	110
  1230                           ;lcd.c: 110: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1231                           	opt asmopt_off
  1232  056C  3042               movlw	66
  1233  056D  00F4               movwf	(??_lcd_init+0)+0,f
  1234  056E                     u3357:
  1235  056E  0BF4               decfsz	(??_lcd_init+0)+0,f
  1236  056F  2D6E               	goto	u3357
  1237  0570  0064               	clrwdt
  1238                           opt asmopt_on
  1239                           
  1240                           	line	111
  1241                           	
  1242  0571                     l6487:	
  1243                           ;lcd.c: 111: ((RA1 = 1),(RA1=0));
  1244  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  1245  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  1246  0573  1485               	bsf	(41/8),(41)&7
  1247                           	
  1248  0574                     l6489:	
  1249  0574  1085               	bcf	(41/8),(41)&7
  1250                           	line	112
  1251                           ;lcd.c: 112: _delay((unsigned long)((200)*(4000000/4000000.0)));
  1252                           	opt asmopt_off
  1253  0575  3042               movlw	66
  1254  0576  00F4               movwf	(??_lcd_init+0)+0,f
  1255  0577                     u3367:
  1256  0577  0BF4               decfsz	(??_lcd_init+0)+0,f
  1257  0578  2D77               	goto	u3367
  1258  0579  0064               	clrwdt
  1259                           opt asmopt_on
  1260                           
  1261                           	line	113
  1262                           ;lcd.c: 113: PORTD = 2;
  1263  057A  3002               	movlw	(02h)
  1264  057B  1283               	bcf	status, 5	;RP0=0, select bank0
  1265  057C  1303               	bcf	status, 6	;RP1=0, select bank0
  1266  057D  0088               	movwf	(8)	;volatile
  1267                           	line	114
  1268                           	
  1269  057E                     l6491:	
  1270                           ;lcd.c: 114: ((RA1 = 1),(RA1=0));
  1271  057E  1485               	bsf	(41/8),(41)&7
  1272                           	
  1273  057F                     l6493:	
  1274  057F  1085               	bcf	(41/8),(41)&7
  1275                           	line	116
  1276                           	
  1277  0580                     l6495:	
  1278                           ;lcd.c: 116: lcd_write(0x28);
  1279  0580  3028               	movlw	(028h)
  1280  0581  120A  118A  23EF   	fcall	_lcd_write
              120A  118A         
  1281                           	line	117
  1282                           	
  1283  0586                     l6497:	
  1284                           ;lcd.c: 117: lcd_write(0xF);
  1285  0586  300F               	movlw	(0Fh)
  1286  0587  120A  118A  23EF   	fcall	_lcd_write
              120A  118A         
  1287                           	line	118
  1288                           	
  1289  058C                     l6499:	
  1290                           ;lcd.c: 118: lcd_clear();
  1291  058C  120A  118A  23DC   	fcall	_lcd_clear
              120A  118A         
  1292                           	line	119
  1293                           	
  1294  0591                     l6501:	
  1295                           ;lcd.c: 119: lcd_write(0x6);
  1296  0591  3006               	movlw	(06h)
  1297  0592  120A  118A  23EF   	fcall	_lcd_write
              120A  118A         
  1298                           	line	120
  1299                           	
  1300  0597                     l3096:	
  1301  0597  0008               	return
  1302                           	opt stack 0
  1303                           GLOBAL	__end_of_lcd_init
  1304  0598                     	__end_of_lcd_init:
  1305 ;; =============== function _lcd_init ends ============
  1306                           
  1307                           	signat	_lcd_init,88
  1308                           	global	_lcdCountdown
  1309                           psect	text420,local,class=CODE,delta=2
  1310                           global __ptext420
  1311  03CE                     __ptext420:
  1312                           
  1313 ;; *************** function _lcdCountdown *****************
  1314 ;; Defined at:
  1315 ;;		line 217 in file "newmain.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  t               1    wreg     unsigned char 
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  t               1    3[COMMON] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;		None               void
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       0       0       0
  1330 ;;      Locals:         1       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0
  1332 ;;      Totals:         1       0       0       0       0
  1333 ;;Total ram usage:        1 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    2
  1336 ;; This function calls:
  1337 ;;		_lcd_goto
  1338 ;;		_lcd_putch
  1339 ;; This function is called by:
  1340 ;;		_doDelay
  1341 ;; This function uses a non-reentrant model
  1342 ;;
  1343                           psect	text420
  1344                           	file	"newmain.c"
  1345                           	line	217
  1346                           	global	__size_of_lcdCountdown
  1347  000E                     	__size_of_lcdCountdown	equ	__end_of_lcdCountdown-_lcdCountdown
  1348                           	
  1349  03CE                     _lcdCountdown:	
  1350                           	opt	stack 4
  1351                           ; Regs used in _lcdCountdown: [wreg+status,2+status,0+pclath+cstack]
  1352                           ;lcdCountdown@t stored from wreg
  1353  03CE  00F3               	movwf	(lcdCountdown@t)
  1354                           	line	218
  1355                           	
  1356  03CF                     l6465:	
  1357                           ;newmain.c: 218: lcd_goto(0);
  1358  03CF  3000               	movlw	(0)
  1359  03D0  120A  118A  23B5   	fcall	_lcd_goto
              120A  118A         
  1360                           	line	219
  1361                           ;newmain.c: 219: lcd_putch(t);
  1362  03D5  0873               	movf	(lcdCountdown@t),w
  1363  03D6  120A  118A  23AA   	fcall	_lcd_putch
              120A  118A         
  1364                           	line	220
  1365                           	
  1366  03DB                     l1545:	
  1367  03DB  0008               	return
  1368                           	opt stack 0
  1369                           GLOBAL	__end_of_lcdCountdown
  1370  03DC                     	__end_of_lcdCountdown:
  1371 ;; =============== function _lcdCountdown ends ============
  1372                           
  1373                           	signat	_lcdCountdown,4216
  1374                           	global	_lcd_clear
  1375                           psect	text421,local,class=CODE,delta=2
  1376                           global __ptext421
  1377  03DC                     __ptext421:
  1378                           
  1379 ;; *************** function _lcd_clear *****************
  1380 ;; Defined at:
  1381 ;;		line 53 in file "lcd.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;		None
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;		None
  1386 ;; Return value:  Size  Location     Type
  1387 ;;		None               void
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0, pclath, cstack
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         0       0       0       0       0
  1397 ;;      Temps:          2       0       0       0       0
  1398 ;;      Totals:         2       0       0       0       0
  1399 ;;Total ram usage:        2 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; Hardware stack levels required when called:    1
  1402 ;; This function calls:
  1403 ;;		_lcd_write
  1404 ;; This function is called by:
  1405 ;;		_lcd_init
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           psect	text421
  1409                           	file	"lcd.c"
  1410                           	line	53
  1411                           	global	__size_of_lcd_clear
  1412  0013                     	__size_of_lcd_clear	equ	__end_of_lcd_clear-_lcd_clear
  1413                           	
  1414  03DC                     _lcd_clear:	
  1415                           	opt	stack 5
  1416                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1417                           	line	54
  1418                           	
  1419  03DC                     l6459:	
  1420                           ;lcd.c: 54: RA3 = 0;
  1421  03DC  1283               	bcf	status, 5	;RP0=0, select bank0
  1422  03DD  1303               	bcf	status, 6	;RP1=0, select bank0
  1423  03DE  1185               	bcf	(43/8),(43)&7
  1424                           	line	55
  1425                           	
  1426  03DF                     l6461:	
  1427                           ;lcd.c: 55: lcd_write(0x1);
  1428  03DF  3001               	movlw	(01h)
  1429  03E0  120A  118A  23EF   	fcall	_lcd_write
              120A  118A         
  1430                           	line	56
  1431                           	
  1432  03E5                     l6463:	
  1433                           ;lcd.c: 56: _delay((unsigned long)((2)*(4000000/4000.0)));
  1434                           	opt asmopt_off
  1435  03E5  3003               movlw	3
  1436  03E6  00F3               movwf	((??_lcd_clear+0)+0+1),f
  1437  03E7  3097               	movlw	151
  1438  03E8  00F2               movwf	((??_lcd_clear+0)+0),f
  1439  03E9                     u3377:
  1440  03E9  0BF2               	decfsz	((??_lcd_clear+0)+0),f
  1441  03EA  2BE9               	goto	u3377
  1442  03EB  0BF3               	decfsz	((??_lcd_clear+0)+0+1),f
  1443  03EC  2BE9               	goto	u3377
  1444  03ED  2BEE               	nop2
  1445                           opt asmopt_on
  1446                           
  1447                           	line	57
  1448                           	
  1449  03EE                     l3081:	
  1450  03EE  0008               	return
  1451                           	opt stack 0
  1452                           GLOBAL	__end_of_lcd_clear
  1453  03EF                     	__end_of_lcd_clear:
  1454 ;; =============== function _lcd_clear ends ============
  1455                           
  1456                           	signat	_lcd_clear,88
  1457                           	global	_lcd_putch
  1458                           psect	text422,local,class=CODE,delta=2
  1459                           global __ptext422
  1460  03AA                     __ptext422:
  1461                           
  1462 ;; *************** function _lcd_putch *****************
  1463 ;; Defined at:
  1464 ;;		line 73 in file "lcd.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  c               1    wreg     unsigned char 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  c               1    2[COMMON] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;		None               void
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, pclath, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         0       0       0       0       0
  1479 ;;      Locals:         1       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0
  1481 ;;      Totals:         1       0       0       0       0
  1482 ;;Total ram usage:        1 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    1
  1485 ;; This function calls:
  1486 ;;		_lcd_write
  1487 ;; This function is called by:
  1488 ;;		_lcdCountdown
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           psect	text422
  1492                           	file	"lcd.c"
  1493                           	line	73
  1494                           	global	__size_of_lcd_putch
  1495  000B                     	__size_of_lcd_putch	equ	__end_of_lcd_putch-_lcd_putch
  1496                           	
  1497  03AA                     _lcd_putch:	
  1498                           	opt	stack 4
  1499                           ; Regs used in _lcd_putch: [wreg+status,2+status,0+pclath+cstack]
  1500                           ;lcd_putch@c stored from wreg
  1501  03AA  00F2               	movwf	(lcd_putch@c)
  1502                           	line	74
  1503                           	
  1504  03AB                     l6455:	
  1505                           ;lcd.c: 74: RA3 = 1;
  1506  03AB  1283               	bcf	status, 5	;RP0=0, select bank0
  1507  03AC  1303               	bcf	status, 6	;RP1=0, select bank0
  1508  03AD  1585               	bsf	(43/8),(43)&7
  1509                           	line	75
  1510                           	
  1511  03AE                     l6457:	
  1512                           ;lcd.c: 75: lcd_write( c );
  1513  03AE  0872               	movf	(lcd_putch@c),w
  1514  03AF  120A  118A  23EF   	fcall	_lcd_write
              120A  118A         
  1515                           	line	76
  1516                           	
  1517  03B4                     l3090:	
  1518  03B4  0008               	return
  1519                           	opt stack 0
  1520                           GLOBAL	__end_of_lcd_putch
  1521  03B5                     	__end_of_lcd_putch:
  1522 ;; =============== function _lcd_putch ends ============
  1523                           
  1524                           	signat	_lcd_putch,4216
  1525                           	global	_lcd_puts
  1526                           psect	text423,local,class=CODE,delta=2
  1527                           global __ptext423
  1528  042B                     __ptext423:
  1529                           
  1530 ;; *************** function _lcd_puts *****************
  1531 ;; Defined at:
  1532 ;;		line 63 in file "lcd.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  s               1    wreg     PTR const unsigned char 
  1535 ;;		 -> STR_1(7), 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  s               1    3[COMMON] PTR const unsigned char 
  1538 ;;		 -> STR_1(7), 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;		None               void
  1541 ;; Registers used:
  1542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       0       0       0
  1549 ;;      Locals:         1       0       0       0       0
  1550 ;;      Temps:          1       0       0       0       0
  1551 ;;      Totals:         2       0       0       0       0
  1552 ;;Total ram usage:        2 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    1
  1555 ;; This function calls:
  1556 ;;		_lcd_write
  1557 ;; This function is called by:
  1558 ;;		_doDelay
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           psect	text423
  1562                           	file	"lcd.c"
  1563                           	line	63
  1564                           	global	__size_of_lcd_puts
  1565  0024                     	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
  1566                           	
  1567  042B                     _lcd_puts:	
  1568                           	opt	stack 5
  1569                           ; Regs used in _lcd_puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1570                           ;lcd_puts@s stored from wreg
  1571  042B  00F3               	movwf	(lcd_puts@s)
  1572                           	line	64
  1573                           	
  1574  042C                     l6447:	
  1575                           ;lcd.c: 64: RA3 = 1;
  1576  042C  1283               	bcf	status, 5	;RP0=0, select bank0
  1577  042D  1303               	bcf	status, 6	;RP1=0, select bank0
  1578  042E  1585               	bsf	(43/8),(43)&7
  1579                           	line	65
  1580                           ;lcd.c: 65: while(*s)
  1581  042F  2C41               	goto	l6453
  1582                           	
  1583  0430                     l3085:	
  1584                           	line	66
  1585                           	
  1586  0430                     l6449:	
  1587                           ;lcd.c: 66: lcd_write(*s++);
  1588  0430  0873               	movf	(lcd_puts@s),w
  1589  0431  0084               	movwf	fsr0
  1590  0432  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1591  0437  120A  118A  23EF   	fcall	_lcd_write
              120A  118A         
  1592                           	
  1593  043C                     l6451:	
  1594  043C  3001               	movlw	(01h)
  1595  043D  00F2               	movwf	(??_lcd_puts+0)+0
  1596  043E  0872               	movf	(??_lcd_puts+0)+0,w
  1597  043F  07F3               	addwf	(lcd_puts@s),f
  1598  0440  2C41               	goto	l6453
  1599                           	
  1600  0441                     l3084:	
  1601                           	line	65
  1602                           	
  1603  0441                     l6453:	
  1604  0441  0873               	movf	(lcd_puts@s),w
  1605  0442  0084               	movwf	fsr0
  1606  0443  120A  118A  2003   	fcall	stringdir
              120A  118A         
  1607  0448  3800               	iorlw	0
  1608  0449  1D03               	skipz
  1609  044A  2C4C               	goto	u3301
  1610  044B  2C4D               	goto	u3300
  1611  044C                     u3301:
  1612  044C  2C30               	goto	l6449
  1613  044D                     u3300:
  1614  044D  2C4E               	goto	l3087
  1615                           	
  1616  044E                     l3086:	
  1617                           	line	67
  1618                           	
  1619  044E                     l3087:	
  1620  044E  0008               	return
  1621                           	opt stack 0
  1622                           GLOBAL	__end_of_lcd_puts
  1623  044F                     	__end_of_lcd_puts:
  1624 ;; =============== function _lcd_puts ends ============
  1625                           
  1626                           	signat	_lcd_puts,4216
  1627                           	global	_lcd_goto
  1628                           psect	text424,local,class=CODE,delta=2
  1629                           global __ptext424
  1630  03B5                     __ptext424:
  1631                           
  1632 ;; *************** function _lcd_goto *****************
  1633 ;; Defined at:
  1634 ;;		line 85 in file "lcd.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  pos             1    wreg     unsigned char 
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;  pos             1    2[COMMON] unsigned char 
  1639 ;; Return value:  Size  Location     Type
  1640 ;;		None               void
  1641 ;; Registers used:
  1642 ;;		wreg, status,2, status,0, pclath, cstack
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         1       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         1       0       0       0       0
  1652 ;;Total ram usage:        1 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    1
  1655 ;; This function calls:
  1656 ;;		_lcd_write
  1657 ;; This function is called by:
  1658 ;;		_doDelay
  1659 ;;		_lcdCountdown
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           psect	text424
  1663                           	file	"lcd.c"
  1664                           	line	85
  1665                           	global	__size_of_lcd_goto
  1666  000C                     	__size_of_lcd_goto	equ	__end_of_lcd_goto-_lcd_goto
  1667                           	
  1668  03B5                     _lcd_goto:	
  1669                           	opt	stack 5
  1670                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1671                           ;lcd_goto@pos stored from wreg
  1672  03B5  00F2               	movwf	(lcd_goto@pos)
  1673                           	line	86
  1674                           	
  1675  03B6                     l6443:	
  1676                           ;lcd.c: 86: RA3 = 0;
  1677  03B6  1283               	bcf	status, 5	;RP0=0, select bank0
  1678  03B7  1303               	bcf	status, 6	;RP1=0, select bank0
  1679  03B8  1185               	bcf	(43/8),(43)&7
  1680                           	line	87
  1681                           	
  1682  03B9                     l6445:	
  1683                           ;lcd.c: 87: lcd_write(0x80+pos);
  1684  03B9  0872               	movf	(lcd_goto@pos),w
  1685  03BA  3E80               	addlw	080h
  1686  03BB  120A  118A  23EF   	fcall	_lcd_write
              120A  118A         
  1687                           	line	88
  1688                           	
  1689  03C0                     l3093:	
  1690  03C0  0008               	return
  1691                           	opt stack 0
  1692                           GLOBAL	__end_of_lcd_goto
  1693  03C1                     	__end_of_lcd_goto:
  1694 ;; =============== function _lcd_goto ends ============
  1695                           
  1696                           	signat	_lcd_goto,4216
  1697                           	global	___awtoft
  1698                           psect	text425,local,class=CODE,delta=2
  1699                           global __ptext425
  1700  0475                     __ptext425:
  1701                           
  1702 ;; *************** function ___awtoft *****************
  1703 ;; Defined at:
  1704 ;;		line 33 in file "/usr/hitech/picc/9.82/sources/awtoft.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  c               2    6[BANK0 ] int 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  sign            1   11[BANK0 ] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  3    6[BANK0 ] float 
  1711 ;; Registers used:
  1712 ;;		wreg, status,2, status,0, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       3       0       0       0
  1719 ;;      Locals:         0       1       0       0       0
  1720 ;;      Temps:          0       2       0       0       0
  1721 ;;      Totals:         0       6       0       0       0
  1722 ;;Total ram usage:        6 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    1
  1725 ;; This function calls:
  1726 ;;		___ftpack
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           psect	text425
  1732                           	file	"/usr/hitech/picc/9.82/sources/awtoft.c"
  1733                           	line	33
  1734                           	global	__size_of___awtoft
  1735  002C                     	__size_of___awtoft	equ	__end_of___awtoft-___awtoft
  1736                           	
  1737  0475                     ___awtoft:	
  1738                           	opt	stack 6
  1739                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  1740                           	line	36
  1741                           	
  1742  0475                     l6435:	
  1743  0475  1283               	bcf	status, 5	;RP0=0, select bank0
  1744  0476  1303               	bcf	status, 6	;RP1=0, select bank0
  1745  0477  01AB               	clrf	(___awtoft@sign)
  1746                           	line	37
  1747  0478  1FA7               	btfss	(___awtoft@c+1),7
  1748  0479  2C7B               	goto	u3291
  1749  047A  2C7C               	goto	u3290
  1750  047B                     u3291:
  1751  047B  2C85               	goto	l6439
  1752  047C                     u3290:
  1753                           	line	38
  1754                           	
  1755  047C                     l6437:	
  1756  047C  09A6               	comf	(___awtoft@c),f
  1757  047D  09A7               	comf	(___awtoft@c+1),f
  1758  047E  0AA6               	incf	(___awtoft@c),f
  1759  047F  1903               	skipnz
  1760  0480  0AA7               	incf	(___awtoft@c+1),f
  1761                           	line	39
  1762  0481  01AB               	clrf	(___awtoft@sign)
  1763  0482  1403               	bsf	status,0
  1764  0483  0DAB               	rlf	(___awtoft@sign),f
  1765  0484  2C85               	goto	l6439
  1766                           	line	40
  1767                           	
  1768  0485                     l4669:	
  1769                           	line	41
  1770                           	
  1771  0485                     l6439:	
  1772  0485  0826               	movf	(___awtoft@c),w
  1773  0486  00F0               	movwf	(?___ftpack)
  1774  0487  0827               	movf	(___awtoft@c+1),w
  1775  0488  00F1               	movwf	(?___ftpack+1)
  1776  0489  01F2               	clrf	(?___ftpack+2)
  1777  048A  308E               	movlw	(08Eh)
  1778  048B  00A9               	movwf	(??___awtoft+0)+0
  1779  048C  0829               	movf	(??___awtoft+0)+0,w
  1780  048D  00F3               	movwf	0+(?___ftpack)+03h
  1781  048E  082B               	movf	(___awtoft@sign),w
  1782  048F  00AA               	movwf	(??___awtoft+1)+0
  1783  0490  082A               	movf	(??___awtoft+1)+0,w
  1784  0491  00F4               	movwf	0+(?___ftpack)+04h
  1785  0492  120A  118A  2608   	fcall	___ftpack
              120A  118A         
  1786  0497  0870               	movf	(0+(?___ftpack)),w
  1787  0498  1283               	bcf	status, 5	;RP0=0, select bank0
  1788  0499  1303               	bcf	status, 6	;RP1=0, select bank0
  1789  049A  00A6               	movwf	(?___awtoft)
  1790  049B  0871               	movf	(1+(?___ftpack)),w
  1791  049C  00A7               	movwf	(?___awtoft+1)
  1792  049D  0872               	movf	(2+(?___ftpack)),w
  1793  049E  00A8               	movwf	(?___awtoft+2)
  1794  049F  2CA0               	goto	l4670
  1795                           	
  1796  04A0                     l6441:	
  1797                           	line	42
  1798                           	
  1799  04A0                     l4670:	
  1800  04A0  0008               	return
  1801                           	opt stack 0
  1802                           GLOBAL	__end_of___awtoft
  1803  04A1                     	__end_of___awtoft:
  1804 ;; =============== function ___awtoft ends ============
  1805                           
  1806                           	signat	___awtoft,4219
  1807                           	global	_lcd_write
  1808                           psect	text426,local,class=CODE,delta=2
  1809                           global __ptext426
  1810  03EF                     __ptext426:
  1811                           
  1812 ;; *************** function _lcd_write *****************
  1813 ;; Defined at:
  1814 ;;		line 39 in file "lcd.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  c               1    wreg     unsigned char 
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  c               1    1[COMMON] unsigned char 
  1819 ;; Return value:  Size  Location     Type
  1820 ;;		None               void
  1821 ;; Registers used:
  1822 ;;		wreg, status,2, status,0
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1828 ;;      Params:         0       0       0       0       0
  1829 ;;      Locals:         1       0       0       0       0
  1830 ;;      Temps:          1       0       0       0       0
  1831 ;;      Totals:         2       0       0       0       0
  1832 ;;Total ram usage:        2 bytes
  1833 ;; Hardware stack levels used:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_lcd_clear
  1838 ;;		_lcd_puts
  1839 ;;		_lcd_putch
  1840 ;;		_lcd_goto
  1841 ;;		_lcd_init
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           psect	text426
  1845                           	file	"lcd.c"
  1846                           	line	39
  1847                           	global	__size_of_lcd_write
  1848  001A                     	__size_of_lcd_write	equ	__end_of_lcd_write-_lcd_write
  1849                           	
  1850  03EF                     _lcd_write:	
  1851                           	opt	stack 5
  1852                           ; Regs used in _lcd_write: [wreg+status,2+status,0]
  1853                           ;lcd_write@c stored from wreg
  1854  03EF  00F1               	movwf	(lcd_write@c)
  1855                           	line	40
  1856                           	
  1857  03F0                     l6421:	
  1858                           ;lcd.c: 40: _delay((unsigned long)((40)*(4000000/4000000.0)));
  1859                           	opt asmopt_off
  1860  03F0  300D               movlw	13
  1861  03F1  00F0               movwf	(??_lcd_write+0)+0,f
  1862  03F2                     u3387:
  1863  03F2  0BF0               decfsz	(??_lcd_write+0)+0,f
  1864  03F3  2BF2               	goto	u3387
  1865                           opt asmopt_on
  1866                           
  1867                           	line	41
  1868                           	
  1869  03F4                     l6423:	
  1870                           ;lcd.c: 41: PORTD = ( ( c >> 4 ) & 0x0F );
  1871  03F4  0871               	movf	(lcd_write@c),w
  1872  03F5  00F0               	movwf	(??_lcd_write+0)+0
  1873  03F6  3004               	movlw	04h
  1874  03F7                     u3285:
  1875  03F7  1003               	clrc
  1876  03F8  0CF0               	rrf	(??_lcd_write+0)+0,f
  1877  03F9  3EFF               	addlw	-1
  1878  03FA  1D03               	skipz
  1879  03FB  2BF7               	goto	u3285
  1880  03FC  0870               	movf	0+(??_lcd_write+0)+0,w
  1881  03FD  390F               	andlw	0Fh
  1882  03FE  1283               	bcf	status, 5	;RP0=0, select bank0
  1883  03FF  1303               	bcf	status, 6	;RP1=0, select bank0
  1884  0400  0088               	movwf	(8)	;volatile
  1885                           	line	42
  1886                           	
  1887  0401                     l6425:	
  1888                           ;lcd.c: 42: ((RA1 = 1),(RA1=0));
  1889  0401  1485               	bsf	(41/8),(41)&7
  1890                           	
  1891  0402                     l6427:	
  1892  0402  1085               	bcf	(41/8),(41)&7
  1893                           	line	43
  1894                           	
  1895  0403                     l6429:	
  1896                           ;lcd.c: 43: PORTD = ( c & 0x0F );
  1897  0403  0871               	movf	(lcd_write@c),w
  1898  0404  390F               	andlw	0Fh
  1899  0405  0088               	movwf	(8)	;volatile
  1900                           	line	44
  1901                           	
  1902  0406                     l6431:	
  1903                           ;lcd.c: 44: ((RA1 = 1),(RA1=0));
  1904  0406  1485               	bsf	(41/8),(41)&7
  1905                           	
  1906  0407                     l6433:	
  1907  0407  1085               	bcf	(41/8),(41)&7
  1908                           	line	45
  1909                           	
  1910  0408                     l3078:	
  1911  0408  0008               	return
  1912                           	opt stack 0
  1913                           GLOBAL	__end_of_lcd_write
  1914  0409                     	__end_of_lcd_write:
  1915 ;; =============== function _lcd_write ends ============
  1916                           
  1917                           	signat	_lcd_write,4216
  1918                           	global	_searchTrack
  1919                           psect	text427,local,class=CODE,delta=2
  1920                           global __ptext427
  1921  04D1                     __ptext427:
  1922                           
  1923 ;; *************** function _searchTrack *****************
  1924 ;; Defined at:
  1925 ;;		line 109 in file "newmain.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  2  1529[COMMON] int 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         0       0       0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    1
  1946 ;; This function calls:
  1947 ;;		_controlMotor
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           psect	text427
  1953                           	file	"newmain.c"
  1954                           	line	109
  1955                           	global	__size_of_searchTrack
  1956  0030                     	__size_of_searchTrack	equ	__end_of_searchTrack-_searchTrack
  1957                           	
  1958  04D1                     _searchTrack:	
  1959                           	opt	stack 6
  1960                           ; Regs used in _searchTrack: [wreg+status,2+status,0+pclath+cstack]
  1961                           	line	110
  1962                           	
  1963  04D1                     l6413:	
  1964                           ;newmain.c: 110: if (lastMotor == 1)
  1965  04D1  3001               	movlw	01h
  1966  04D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1967  04D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1968  04D4  0642               	xorwf	(_lastMotor),w
  1969  04D5  0443               	iorwf	(_lastMotor+1),w
  1970  04D6  1D03               	skipz
  1971  04D7  2CD9               	goto	u3261
  1972  04D8  2CDA               	goto	u3260
  1973  04D9                     u3261:
  1974  04D9  2CE8               	goto	l6417
  1975  04DA                     u3260:
  1976                           	line	112
  1977                           	
  1978  04DA                     l6415:	
  1979                           ;newmain.c: 111: {
  1980                           ;newmain.c: 112: controlMotor(1, 0);
  1981  04DA  3001               	movlw	low(01h)
  1982  04DB  00F0               	movwf	(?_controlMotor)
  1983  04DC  3000               	movlw	high(01h)
  1984  04DD  00F1               	movwf	((?_controlMotor))+1
  1985  04DE  3000               	movlw	low(0)
  1986  04DF  00F2               	movwf	0+(?_controlMotor)+02h
  1987  04E0  3000               	movlw	high(0)
  1988  04E1  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  1989  04E2  120A  118A  2409   	fcall	_controlMotor
              120A  118A         
  1990                           	line	113
  1991                           ;newmain.c: 113: }
  1992  04E7  2D00               	goto	l1533
  1993                           	line	114
  1994                           	
  1995  04E8                     l1530:	
  1996                           	
  1997  04E8                     l6417:	
  1998                           ;newmain.c: 114: else if (lastMotor == 2)
  1999  04E8  3002               	movlw	02h
  2000  04E9  1283               	bcf	status, 5	;RP0=0, select bank0
  2001  04EA  1303               	bcf	status, 6	;RP1=0, select bank0
  2002  04EB  0642               	xorwf	(_lastMotor),w
  2003  04EC  0443               	iorwf	(_lastMotor+1),w
  2004  04ED  1D03               	skipz
  2005  04EE  2CF0               	goto	u3271
  2006  04EF  2CF1               	goto	u3270
  2007  04F0                     u3271:
  2008  04F0  2D00               	goto	l1533
  2009  04F1                     u3270:
  2010                           	line	116
  2011                           	
  2012  04F1                     l6419:	
  2013                           ;newmain.c: 115: {
  2014                           ;newmain.c: 116: controlMotor(0, 1);
  2015  04F1  3000               	movlw	low(0)
  2016  04F2  00F0               	movwf	(?_controlMotor)
  2017  04F3  3000               	movlw	high(0)
  2018  04F4  00F1               	movwf	((?_controlMotor))+1
  2019  04F5  3001               	movlw	low(01h)
  2020  04F6  00F2               	movwf	0+(?_controlMotor)+02h
  2021  04F7  3000               	movlw	high(01h)
  2022  04F8  00F3               	movwf	(0+(?_controlMotor)+02h)+1
  2023  04F9  120A  118A  2409   	fcall	_controlMotor
              120A  118A         
  2024  04FE  2D00               	goto	l1533
  2025                           	line	117
  2026                           	
  2027  04FF                     l1532:	
  2028  04FF  2D00               	goto	l1533
  2029                           	line	118
  2030                           	
  2031  0500                     l1531:	
  2032                           	
  2033  0500                     l1533:	
  2034  0500  0008               	return
  2035                           	opt stack 0
  2036                           GLOBAL	__end_of_searchTrack
  2037  0501                     	__end_of_searchTrack:
  2038 ;; =============== function _searchTrack ends ============
  2039                           
  2040                           	signat	_searchTrack,90
  2041                           	global	___ftge
  2042                           psect	text428,local,class=CODE,delta=2
  2043                           global __ptext428
  2044  0598                     __ptext428:
  2045                           
  2046 ;; *************** function ___ftge *****************
  2047 ;; Defined at:
  2048 ;;		line 5 in file "/usr/hitech/picc/9.82/sources/ftge.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;  ff1             3    8[COMMON] float 
  2051 ;;  ff2             3   11[COMMON] float 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;		None
  2054 ;; Return value:  Size  Location     Type
  2055 ;;		None               void
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         6       0       0       0       0
  2064 ;;      Locals:         0       0       0       0       0
  2065 ;;      Temps:          0       6       0       0       0
  2066 ;;      Totals:         6       6       0       0       0
  2067 ;;Total ram usage:       12 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           psect	text428
  2076                           	file	"/usr/hitech/picc/9.82/sources/ftge.c"
  2077                           	line	5
  2078                           	global	__size_of___ftge
  2079  0070                     	__size_of___ftge	equ	__end_of___ftge-___ftge
  2080                           	
  2081  0598                     ___ftge:	
  2082                           	opt	stack 7
  2083                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2084                           	line	6
  2085                           	
  2086  0598                     l6347:	
  2087  0598  1FFA               	btfss	(___ftge@ff1+2),(23)&7
  2088  0599  2D9B               	goto	u3151
  2089  059A  2D9C               	goto	u3150
  2090  059B                     u3151:
  2091  059B  2DC4               	goto	l6351
  2092  059C                     u3150:
  2093                           	line	7
  2094                           	
  2095  059C                     l6349:	
  2096  059C  3000               	movlw	0
  2097  059D  1283               	bcf	status, 5	;RP0=0, select bank0
  2098  059E  1303               	bcf	status, 6	;RP1=0, select bank0
  2099  059F  00A0               	movwf	((??___ftge+0)+0)
  2100  05A0  3000               	movlw	0
  2101  05A1  00A1               	movwf	((??___ftge+0)+0+1)
  2102  05A2  3080               	movlw	080h
  2103  05A3  00A2               	movwf	((??___ftge+0)+0+2)
  2104  05A4  0978               	comf	(___ftge@ff1),w
  2105  05A5  00A3               	movwf	(??___ftge+3)+0
  2106  05A6  0979               	comf	(___ftge@ff1+1),w
  2107  05A7  00A4               	movwf	((??___ftge+3)+0+1)
  2108  05A8  097A               	comf	(___ftge@ff1+2),w
  2109  05A9  00A5               	movwf	((??___ftge+3)+0+2)
  2110  05AA  0AA3               	incf	(??___ftge+3)+0,f
  2111  05AB  1903               	skipnz
  2112  05AC  0AA4               	incf	((??___ftge+3)+0+1),f
  2113  05AD  1903               	skipnz
  2114  05AE  0AA5               	incf	((??___ftge+3)+0+2),f
  2115  05AF  0823               	movf	0+(??___ftge+3)+0,w
  2116  05B0  07A0               	addwf	(??___ftge+0)+0,f
  2117  05B1  0824               	movf	1+(??___ftge+3)+0,w
  2118  05B2  1803               	skipnc
  2119  05B3  0F24               	incfsz	1+(??___ftge+3)+0,w
  2120  05B4  2DB6               	goto	u3161
  2121  05B5  2DB7               	goto	u3162
  2122  05B6                     u3161:
  2123  05B6  07A1               	addwf	(??___ftge+0)+1,f
  2124                           	
  2125  05B7                     u3162:
  2126  05B7  0825               	movf	2+(??___ftge+3)+0,w
  2127  05B8  1803               	skipnc
  2128  05B9  0F25               	incfsz	2+(??___ftge+3)+0,w
  2129  05BA  2DBC               	goto	u3163
  2130  05BB  2DBD               	goto	u3164
  2131  05BC                     u3163:
  2132  05BC  07A2               	addwf	(??___ftge+0)+2,f
  2133                           	
  2134  05BD                     u3164:
  2135  05BD  0820               	movf	0+(??___ftge+0)+0,w
  2136  05BE  00F8               	movwf	(___ftge@ff1)
  2137  05BF  0821               	movf	1+(??___ftge+0)+0,w
  2138  05C0  00F9               	movwf	(___ftge@ff1+1)
  2139  05C1  0822               	movf	2+(??___ftge+0)+0,w
  2140  05C2  00FA               	movwf	(___ftge@ff1+2)
  2141  05C3  2DC4               	goto	l6351
  2142                           	
  2143  05C4                     l4700:	
  2144                           	line	8
  2145                           	
  2146  05C4                     l6351:	
  2147  05C4  1FFD               	btfss	(___ftge@ff2+2),(23)&7
  2148  05C5  2DC7               	goto	u3171
  2149  05C6  2DC8               	goto	u3170
  2150  05C7                     u3171:
  2151  05C7  2DF0               	goto	l6355
  2152  05C8                     u3170:
  2153                           	line	9
  2154                           	
  2155  05C8                     l6353:	
  2156  05C8  3000               	movlw	0
  2157  05C9  1283               	bcf	status, 5	;RP0=0, select bank0
  2158  05CA  1303               	bcf	status, 6	;RP1=0, select bank0
  2159  05CB  00A0               	movwf	((??___ftge+0)+0)
  2160  05CC  3000               	movlw	0
  2161  05CD  00A1               	movwf	((??___ftge+0)+0+1)
  2162  05CE  3080               	movlw	080h
  2163  05CF  00A2               	movwf	((??___ftge+0)+0+2)
  2164  05D0  097B               	comf	(___ftge@ff2),w
  2165  05D1  00A3               	movwf	(??___ftge+3)+0
  2166  05D2  097C               	comf	(___ftge@ff2+1),w
  2167  05D3  00A4               	movwf	((??___ftge+3)+0+1)
  2168  05D4  097D               	comf	(___ftge@ff2+2),w
  2169  05D5  00A5               	movwf	((??___ftge+3)+0+2)
  2170  05D6  0AA3               	incf	(??___ftge+3)+0,f
  2171  05D7  1903               	skipnz
  2172  05D8  0AA4               	incf	((??___ftge+3)+0+1),f
  2173  05D9  1903               	skipnz
  2174  05DA  0AA5               	incf	((??___ftge+3)+0+2),f
  2175  05DB  0823               	movf	0+(??___ftge+3)+0,w
  2176  05DC  07A0               	addwf	(??___ftge+0)+0,f
  2177  05DD  0824               	movf	1+(??___ftge+3)+0,w
  2178  05DE  1803               	skipnc
  2179  05DF  0F24               	incfsz	1+(??___ftge+3)+0,w
  2180  05E0  2DE2               	goto	u3181
  2181  05E1  2DE3               	goto	u3182
  2182  05E2                     u3181:
  2183  05E2  07A1               	addwf	(??___ftge+0)+1,f
  2184                           	
  2185  05E3                     u3182:
  2186  05E3  0825               	movf	2+(??___ftge+3)+0,w
  2187  05E4  1803               	skipnc
  2188  05E5  0F25               	incfsz	2+(??___ftge+3)+0,w
  2189  05E6  2DE8               	goto	u3183
  2190  05E7  2DE9               	goto	u3184
  2191  05E8                     u3183:
  2192  05E8  07A2               	addwf	(??___ftge+0)+2,f
  2193                           	
  2194  05E9                     u3184:
  2195  05E9  0820               	movf	0+(??___ftge+0)+0,w
  2196  05EA  00FB               	movwf	(___ftge@ff2)
  2197  05EB  0821               	movf	1+(??___ftge+0)+0,w
  2198  05EC  00FC               	movwf	(___ftge@ff2+1)
  2199  05ED  0822               	movf	2+(??___ftge+0)+0,w
  2200  05EE  00FD               	movwf	(___ftge@ff2+2)
  2201  05EF  2DF0               	goto	l6355
  2202                           	
  2203  05F0                     l4701:	
  2204                           	line	10
  2205                           	
  2206  05F0                     l6355:	
  2207  05F0  3080               	movlw	080h
  2208  05F1  06FA               	xorwf	(___ftge@ff1+2),f
  2209                           	line	11
  2210                           	
  2211  05F2                     l6357:	
  2212  05F2  3080               	movlw	080h
  2213  05F3  06FD               	xorwf	(___ftge@ff2+2),f
  2214                           	line	12
  2215                           	
  2216  05F4                     l6359:	
  2217  05F4  087D               	movf	(___ftge@ff2+2),w
  2218  05F5  027A               	subwf	(___ftge@ff1+2),w
  2219  05F6  1D03               	skipz
  2220  05F7  2DFE               	goto	u3195
  2221  05F8  087C               	movf	(___ftge@ff2+1),w
  2222  05F9  0279               	subwf	(___ftge@ff1+1),w
  2223  05FA  1D03               	skipz
  2224  05FB  2DFE               	goto	u3195
  2225  05FC  087B               	movf	(___ftge@ff2),w
  2226  05FD  0278               	subwf	(___ftge@ff1),w
  2227  05FE                     u3195:
  2228  05FE  1803               	skipnc
  2229  05FF  2E01               	goto	u3191
  2230  0600  2E02               	goto	u3190
  2231  0601                     u3191:
  2232  0601  2E04               	goto	l6363
  2233  0602                     u3190:
  2234                           	
  2235  0602                     l6361:	
  2236  0602  1003               	clrc
  2237                           	
  2238  0603  2E07               	goto	l4702
  2239                           	
  2240  0604                     l6067:	
  2241                           	
  2242  0604                     l6363:	
  2243  0604  1403               	setc
  2244                           	
  2245  0605  2E07               	goto	l4702
  2246                           	
  2247  0606                     l6069:	
  2248  0606  2E07               	goto	l4702
  2249                           	
  2250  0607                     l6365:	
  2251                           	line	13
  2252                           	
  2253  0607                     l4702:	
  2254  0607  0008               	return
  2255                           	opt stack 0
  2256                           GLOBAL	__end_of___ftge
  2257  0608                     	__end_of___ftge:
  2258 ;; =============== function ___ftge ends ============
  2259                           
  2260                           	signat	___ftge,8312
  2261                           	global	___ftpack
  2262                           psect	text429,local,class=CODE,delta=2
  2263                           global __ptext429
  2264  0608                     __ptext429:
  2265                           
  2266 ;; *************** function ___ftpack *****************
  2267 ;; Defined at:
  2268 ;;		line 63 in file "/usr/hitech/picc/9.82/sources/float.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  arg             3    0[COMMON] unsigned um
  2271 ;;  exp             1    3[COMMON] unsigned char 
  2272 ;;  sign            1    4[COMMON] unsigned char 
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;                  3    0[COMMON] float 
  2277 ;; Registers used:
  2278 ;;		wreg, status,2, status,0
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2284 ;;      Params:         5       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0
  2286 ;;      Temps:          3       0       0       0       0
  2287 ;;      Totals:         8       0       0       0       0
  2288 ;;Total ram usage:        8 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		___awtoft
  2294 ;;		___ftadd
  2295 ;;		___ftdiv
  2296 ;;		___ftmul
  2297 ;;		___lbtoft
  2298 ;;		___abtoft
  2299 ;;		___lwtoft
  2300 ;;		___altoft
  2301 ;;		___lltoft
  2302 ;;		___attoft
  2303 ;;		___lttoft
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           psect	text429
  2307                           	file	"/usr/hitech/picc/9.82/sources/float.c"
  2308                           	line	63
  2309                           	global	__size_of___ftpack
  2310  007B                     	__size_of___ftpack	equ	__end_of___ftpack-___ftpack
  2311                           	
  2312  0608                     ___ftpack:	
  2313                           	opt	stack 6
  2314                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2315                           	line	64
  2316                           	
  2317  0608                     l6215:	
  2318  0608  0873               	movf	(___ftpack@exp),w
  2319  0609  1D03               	skipz
  2320  060A  2E0C               	goto	u2810
  2321  060B  2E14               	goto	l6219
  2322  060C                     u2810:
  2323                           	
  2324  060C                     l6217:	
  2325  060C  0872               	movf	(___ftpack@arg+2),w
  2326  060D  0471               	iorwf	(___ftpack@arg+1),w
  2327  060E  0470               	iorwf	(___ftpack@arg),w
  2328  060F  1D03               	skipz
  2329  0610  2E12               	goto	u2821
  2330  0611  2E13               	goto	u2820
  2331  0612                     u2821:
  2332  0612  2E2A               	goto	l6225
  2333  0613                     u2820:
  2334  0613  2E14               	goto	l6219
  2335                           	
  2336  0614                     l4867:	
  2337                           	line	65
  2338                           	
  2339  0614                     l6219:	
  2340  0614  3000               	movlw	0x0
  2341  0615  00F0               	movwf	(?___ftpack)
  2342  0616  3000               	movlw	0x0
  2343  0617  00F1               	movwf	(?___ftpack+1)
  2344  0618  3000               	movlw	0x0
  2345  0619  00F2               	movwf	(?___ftpack+2)
  2346  061A  2E82               	goto	l4868
  2347                           	
  2348  061B                     l6221:	
  2349  061B  2E82               	goto	l4868
  2350                           	
  2351  061C                     l4865:	
  2352                           	line	66
  2353  061C  2E2A               	goto	l6225
  2354                           	
  2355  061D                     l4870:	
  2356                           	line	67
  2357                           	
  2358  061D                     l6223:	
  2359  061D  3001               	movlw	(01h)
  2360  061E  00F5               	movwf	(??___ftpack+0)+0
  2361  061F  0875               	movf	(??___ftpack+0)+0,w
  2362  0620  07F3               	addwf	(___ftpack@exp),f
  2363                           	line	68
  2364  0621  3001               	movlw	01h
  2365  0622                     u2835:
  2366  0622  1003               	clrc
  2367  0623  0CF2               	rrf	(___ftpack@arg+2),f
  2368  0624  0CF1               	rrf	(___ftpack@arg+1),f
  2369  0625  0CF0               	rrf	(___ftpack@arg),f
  2370  0626  3EFF               	addlw	-1
  2371  0627  1D03               	skipz
  2372  0628  2E22               	goto	u2835
  2373                           
  2374  0629  2E2A               	goto	l6225
  2375                           	line	69
  2376                           	
  2377  062A                     l4869:	
  2378                           	line	66
  2379                           	
  2380  062A                     l6225:	
  2381  062A  30FE               	movlw	low highword(0FE0000h)
  2382  062B  0572               	andwf	(___ftpack@arg+2),w
  2383  062C  1D03               	btfss	status,2
  2384  062D  2E2F               	goto	u2841
  2385  062E  2E30               	goto	u2840
  2386  062F                     u2841:
  2387  062F  2E1D               	goto	l6223
  2388  0630                     u2840:
  2389  0630  2E48               	goto	l4872
  2390                           	
  2391  0631                     l4871:	
  2392                           	line	70
  2393  0631  2E48               	goto	l4872
  2394                           	
  2395  0632                     l4873:	
  2396                           	line	71
  2397                           	
  2398  0632                     l6227:	
  2399  0632  3001               	movlw	(01h)
  2400  0633  00F5               	movwf	(??___ftpack+0)+0
  2401  0634  0875               	movf	(??___ftpack+0)+0,w
  2402  0635  07F3               	addwf	(___ftpack@exp),f
  2403                           	line	72
  2404                           	
  2405  0636                     l6229:	
  2406  0636  3001               	movlw	01h
  2407  0637  07F0               	addwf	(___ftpack@arg),f
  2408  0638  3000               	movlw	0
  2409  0639  1803               	skipnc
  2410  063A  3001               movlw 1
  2411  063B  07F1               	addwf	(___ftpack@arg+1),f
  2412  063C  3000               	movlw	0
  2413  063D  1803               	skipnc
  2414  063E  3001               movlw 1
  2415  063F  07F2               	addwf	(___ftpack@arg+2),f
  2416                           	line	73
  2417                           	
  2418  0640                     l6231:	
  2419  0640  3001               	movlw	01h
  2420  0641                     u2855:
  2421  0641  1003               	clrc
  2422  0642  0CF2               	rrf	(___ftpack@arg+2),f
  2423  0643  0CF1               	rrf	(___ftpack@arg+1),f
  2424  0644  0CF0               	rrf	(___ftpack@arg),f
  2425  0645  3EFF               	addlw	-1
  2426  0646  1D03               	skipz
  2427  0647  2E41               	goto	u2855
  2428                           
  2429                           	line	74
  2430                           	
  2431  0648                     l4872:	
  2432                           	line	70
  2433  0648  30FF               	movlw	low highword(0FF0000h)
  2434  0649  0572               	andwf	(___ftpack@arg+2),w
  2435  064A  1D03               	btfss	status,2
  2436  064B  2E4D               	goto	u2861
  2437  064C  2E4E               	goto	u2860
  2438  064D                     u2861:
  2439  064D  2E32               	goto	l6227
  2440  064E                     u2860:
  2441  064E  2E5B               	goto	l6235
  2442                           	
  2443  064F                     l4874:	
  2444                           	line	75
  2445  064F  2E5B               	goto	l6235
  2446                           	
  2447  0650                     l4876:	
  2448                           	line	76
  2449                           	
  2450  0650                     l6233:	
  2451  0650  3001               	movlw	low(01h)
  2452  0651  02F3               	subwf	(___ftpack@exp),f
  2453                           	line	77
  2454  0652  3001               	movlw	01h
  2455  0653                     u2875:
  2456  0653  1003               	clrc
  2457  0654  0DF0               	rlf	(___ftpack@arg),f
  2458  0655  0DF1               	rlf	(___ftpack@arg+1),f
  2459  0656  0DF2               	rlf	(___ftpack@arg+2),f
  2460  0657  3EFF               	addlw	-1
  2461  0658  1D03               	skipz
  2462  0659  2E53               	goto	u2875
  2463  065A  2E5B               	goto	l6235
  2464                           	line	78
  2465                           	
  2466  065B                     l4875:	
  2467                           	line	75
  2468                           	
  2469  065B                     l6235:	
  2470  065B  1FF1               	btfss	(___ftpack@arg+1),(15)&7
  2471  065C  2E5E               	goto	u2881
  2472  065D  2E5F               	goto	u2880
  2473  065E                     u2881:
  2474  065E  2E50               	goto	l6233
  2475  065F                     u2880:
  2476                           	
  2477  065F                     l4877:	
  2478                           	line	79
  2479  065F  1873               	btfsc	(___ftpack@exp),(0)&7
  2480  0660  2E62               	goto	u2891
  2481  0661  2E63               	goto	u2890
  2482  0662                     u2891:
  2483  0662  2E69               	goto	l4878
  2484  0663                     u2890:
  2485                           	line	80
  2486                           	
  2487  0663                     l6237:	
  2488  0663  30FF               	movlw	0FFh
  2489  0664  05F0               	andwf	(___ftpack@arg),f
  2490  0665  307F               	movlw	07Fh
  2491  0666  05F1               	andwf	(___ftpack@arg+1),f
  2492  0667  30FF               	movlw	0FFh
  2493  0668  05F2               	andwf	(___ftpack@arg+2),f
  2494                           	
  2495  0669                     l4878:	
  2496                           	line	81
  2497  0669  1003               	clrc
  2498  066A  0CF3               	rrf	(___ftpack@exp),f
  2499                           
  2500                           	line	82
  2501                           	
  2502  066B                     l6239:	
  2503  066B  0873               	movf	(___ftpack@exp),w
  2504  066C  00F5               	movwf	((??___ftpack+0)+0)
  2505  066D  01F6               	clrf	((??___ftpack+0)+0+1)
  2506  066E  01F7               	clrf	((??___ftpack+0)+0+2)
  2507  066F  3010               	movlw	010h
  2508  0670                     u2905:
  2509  0670  1003               	clrc
  2510  0671  0DF5               	rlf	(??___ftpack+0)+0,f
  2511  0672  0DF6               	rlf	(??___ftpack+0)+1,f
  2512  0673  0DF7               	rlf	(??___ftpack+0)+2,f
  2513  0674                     u2900:
  2514  0674  3EFF               	addlw	-1
  2515  0675  1D03               	skipz
  2516  0676  2E70               	goto	u2905
  2517  0677  0875               	movf	0+(??___ftpack+0)+0,w
  2518  0678  04F0               	iorwf	(___ftpack@arg),f
  2519  0679  0876               	movf	1+(??___ftpack+0)+0,w
  2520  067A  04F1               	iorwf	(___ftpack@arg+1),f
  2521  067B  0877               	movf	2+(??___ftpack+0)+0,w
  2522  067C  04F2               	iorwf	(___ftpack@arg+2),f
  2523                           	line	83
  2524                           	
  2525  067D                     l6241:	
  2526  067D  0874               	movf	(___ftpack@sign),w
  2527  067E  1D03               	skipz
  2528  067F  2E81               	goto	u2910
  2529  0680  2E82               	goto	l4879
  2530  0681                     u2910:
  2531                           	line	84
  2532                           	
  2533  0681                     l6243:	
  2534  0681  17F2               	bsf	(___ftpack@arg)+(23/8),(23)&7
  2535                           	
  2536  0682                     l4879:	
  2537                           	line	85
  2538                           	line	86
  2539                           	
  2540  0682                     l4868:	
  2541  0682  0008               	return
  2542                           	opt stack 0
  2543                           GLOBAL	__end_of___ftpack
  2544  0683                     	__end_of___ftpack:
  2545 ;; =============== function ___ftpack ends ============
  2546                           
  2547                           	signat	___ftpack,12411
  2548                           	global	_ReadADC
  2549                           psect	text430,local,class=CODE,delta=2
  2550                           global __ptext430
  2551  0501                     __ptext430:
  2552                           
  2553 ;; *************** function _ReadADC *****************
  2554 ;; Defined at:
  2555 ;;		line 277 in file "newmain.c"
  2556 ;; Parameters:    Size  Location     Type
  2557 ;;  ADC_Channel     1    wreg     unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  ADC_Channel     1    4[COMMON] unsigned char 
  2560 ;;  ADC_VALUE       2    5[COMMON] volatile unsigned int 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  2    0[COMMON] unsigned int 
  2563 ;; Registers used:
  2564 ;;		wreg, status,2, status,0, btemp+1
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         2       0       0       0       0
  2571 ;;      Locals:         3       0       0       0       0
  2572 ;;      Temps:          2       0       0       0       0
  2573 ;;      Totals:         7       0       0       0       0
  2574 ;;Total ram usage:        7 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_main
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           psect	text430
  2583                           	file	"newmain.c"
  2584                           	line	277
  2585                           	global	__size_of_ReadADC
  2586  0041                     	__size_of_ReadADC	equ	__end_of_ReadADC-_ReadADC
  2587                           	
  2588  0501                     _ReadADC:	
  2589                           	opt	stack 7
  2590                           ; Regs used in _ReadADC: [wreg+status,2+status,0+btemp+1]
  2591                           ;ReadADC@ADC_Channel stored from wreg
  2592                           	line	280
  2593  0501  00F4               	movwf	(ReadADC@ADC_Channel)
  2594                           	
  2595  0502                     l6125:	
  2596                           ;newmain.c: 278: volatile unsigned int ADC_VALUE;
  2597                           ;newmain.c: 280: ADON = 1;
  2598  0502  1283               	bcf	status, 5	;RP0=0, select bank0
  2599  0503  1303               	bcf	status, 6	;RP1=0, select bank0
  2600  0504  141F               	bsf	(248/8),(248)&7
  2601                           	line	282
  2602                           	
  2603  0505                     l6127:	
  2604                           ;newmain.c: 282: ADCON0 = (ADC_Channel << 3) + 1;
  2605  0505  0874               	movf	(ReadADC@ADC_Channel),w
  2606  0506  00F2               	movwf	(??_ReadADC+0)+0
  2607  0507  3002               	movlw	(03h)-1
  2608  0508                     u2555:
  2609  0508  1003               	clrc
  2610  0509  0DF2               	rlf	(??_ReadADC+0)+0,f
  2611  050A  3EFF               	addlw	-1
  2612  050B  1D03               	skipz
  2613  050C  2D08               	goto	u2555
  2614  050D  1003               	clrc
  2615  050E  0D72               	rlf	(??_ReadADC+0)+0,w
  2616  050F  3E01               	addlw	01h
  2617  0510  009F               	movwf	(31)	;volatile
  2618                           	line	284
  2619                           	
  2620  0511                     l6129:	
  2621                           ;newmain.c: 284: ADIE = 0;
  2622  0511  1683               	bsf	status, 5	;RP0=1, select bank1
  2623  0512  1303               	bcf	status, 6	;RP1=0, select bank1
  2624  0513  130C               	bcf	(1126/8)^080h,(1126)&7
  2625                           	line	285
  2626                           	
  2627  0514                     l6131:	
  2628                           ;newmain.c: 285: ADIF = 0;
  2629  0514  1283               	bcf	status, 5	;RP0=0, select bank0
  2630  0515  1303               	bcf	status, 6	;RP1=0, select bank0
  2631  0516  130C               	bcf	(102/8),(102)&7
  2632                           	line	286
  2633                           	
  2634  0517                     l6133:	
  2635                           ;newmain.c: 286: ADRESL = 0;
  2636  0517  1683               	bsf	status, 5	;RP0=1, select bank1
  2637  0518  1303               	bcf	status, 6	;RP1=0, select bank1
  2638  0519  019E               	clrf	(158)^080h	;volatile
  2639                           	line	287
  2640                           	
  2641  051A                     l6135:	
  2642                           ;newmain.c: 287: ADRESH = 0;
  2643  051A  1283               	bcf	status, 5	;RP0=0, select bank0
  2644  051B  1303               	bcf	status, 6	;RP1=0, select bank0
  2645  051C  019E               	clrf	(30)	;volatile
  2646                           	line	291
  2647                           ;newmain.c: 291: while(!ADIF) continue;
  2648  051D  2D1E               	goto	l1574
  2649                           	
  2650  051E                     l1575:	
  2651                           	
  2652  051E                     l1574:	
  2653  051E  1F0C               	btfss	(102/8),(102)&7
  2654  051F  2D21               	goto	u2561
  2655  0520  2D22               	goto	u2560
  2656  0521                     u2561:
  2657  0521  2D1E               	goto	l1574
  2658  0522                     u2560:
  2659  0522  2D23               	goto	l6137
  2660                           	
  2661  0523                     l1576:	
  2662                           	line	293
  2663                           	
  2664  0523                     l6137:	
  2665                           ;newmain.c: 293: ADC_VALUE = ADRESL;
  2666  0523  1683               	bsf	status, 5	;RP0=1, select bank1
  2667  0524  1303               	bcf	status, 6	;RP1=0, select bank1
  2668  0525  081E               	movf	(158)^080h,w	;volatile
  2669  0526  00F2               	movwf	(??_ReadADC+0)+0
  2670  0527  01F3               	clrf	(??_ReadADC+0)+0+1
  2671  0528  0872               	movf	0+(??_ReadADC+0)+0,w
  2672  0529  00F5               	movwf	(ReadADC@ADC_VALUE)	;volatile
  2673  052A  0873               	movf	1+(??_ReadADC+0)+0,w
  2674  052B  00F6               	movwf	(ReadADC@ADC_VALUE+1)	;volatile
  2675                           	line	294
  2676                           	
  2677  052C                     l6139:	
  2678                           ;newmain.c: 294: ADC_VALUE += (ADRESH << 8);
  2679  052C  1283               	bcf	status, 5	;RP0=0, select bank0
  2680  052D  1303               	bcf	status, 6	;RP1=0, select bank0
  2681  052E  081E               	movf	(30),w	;volatile
  2682  052F  00F2               	movwf	(??_ReadADC+0)+0
  2683  0530  01F3               	clrf	(??_ReadADC+0)+0+1
  2684  0531  0872               	movf	(??_ReadADC+0)+0,w
  2685  0532  00F3               	movwf	(??_ReadADC+0)+1
  2686  0533  01F2               	clrf	(??_ReadADC+0)+0
  2687  0534  0872               	movf	0+(??_ReadADC+0)+0,w
  2688  0535  07F5               	addwf	(ReadADC@ADC_VALUE),f	;volatile
  2689  0536  1803               	skipnc
  2690  0537  0AF6               	incf	(ReadADC@ADC_VALUE+1),f	;volatile
  2691  0538  0873               	movf	1+(??_ReadADC+0)+0,w
  2692  0539  07F6               	addwf	(ReadADC@ADC_VALUE+1),f	;volatile
  2693                           	line	296
  2694                           	
  2695  053A                     l6141:	
  2696                           ;newmain.c: 296: return (ADC_VALUE);
  2697  053A  0876               	movf	(ReadADC@ADC_VALUE+1),w	;volatile
  2698  053B  01F1               	clrf	(?_ReadADC+1)
  2699  053C  07F1               	addwf	(?_ReadADC+1)
  2700  053D  0875               	movf	(ReadADC@ADC_VALUE),w	;volatile
  2701  053E  01F0               	clrf	(?_ReadADC)
  2702  053F  07F0               	addwf	(?_ReadADC)
  2703                           
  2704  0540  2D41               	goto	l1577
  2705                           	
  2706  0541                     l6143:	
  2707                           	line	297
  2708                           	
  2709  0541                     l1577:	
  2710  0541  0008               	return
  2711                           	opt stack 0
  2712                           GLOBAL	__end_of_ReadADC
  2713  0542                     	__end_of_ReadADC:
  2714 ;; =============== function _ReadADC ends ============
  2715                           
  2716                           	signat	_ReadADC,4218
  2717                           	global	_InitialiseADC
  2718                           psect	text431,local,class=CODE,delta=2
  2719                           global __ptext431
  2720  04A1                     __ptext431:
  2721                           
  2722 ;; *************** function _InitialiseADC *****************
  2723 ;; Defined at:
  2724 ;;		line 256 in file "newmain.c"
  2725 ;; Parameters:    Size  Location     Type
  2726 ;;  ADC_Channel     1    wreg     unsigned char 
  2727 ;; Auto vars:     Size  Location     Type
  2728 ;;  ADC_Channel     1    0[COMMON] unsigned char 
  2729 ;; Return value:  Size  Location     Type
  2730 ;;		None               void
  2731 ;; Registers used:
  2732 ;;		wreg, status,2, status,0
  2733 ;; Tracked objects:
  2734 ;;		On entry : 0/0
  2735 ;;		On exit  : 0/0
  2736 ;;		Unchanged: 0/0
  2737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2738 ;;      Params:         0       0       0       0       0
  2739 ;;      Locals:         1       0       0       0       0
  2740 ;;      Temps:          0       0       0       0       0
  2741 ;;      Totals:         1       0       0       0       0
  2742 ;;Total ram usage:        1 bytes
  2743 ;; Hardware stack levels used:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           psect	text431
  2751                           	file	"newmain.c"
  2752                           	line	256
  2753                           	global	__size_of_InitialiseADC
  2754  0030                     	__size_of_InitialiseADC	equ	__end_of_InitialiseADC-_InitialiseADC
  2755                           	
  2756  04A1                     _InitialiseADC:	
  2757                           	opt	stack 7
  2758                           ; Regs used in _InitialiseADC: [wreg+status,2+status,0]
  2759                           ;InitialiseADC@ADC_Channel stored from wreg
  2760  04A1  00F0               	movwf	(InitialiseADC@ADC_Channel)
  2761                           	line	257
  2762                           	
  2763  04A2                     l6107:	
  2764                           ;newmain.c: 257: if (ADC_Channel == 0) TRISA0 = 1;
  2765  04A2  08F0               	movf	(InitialiseADC@ADC_Channel),f
  2766  04A3  1D03               	skipz
  2767  04A4  2CA6               	goto	u2511
  2768  04A5  2CA7               	goto	u2510
  2769  04A6                     u2511:
  2770  04A6  2CAB               	goto	l6111
  2771  04A7                     u2510:
  2772                           	
  2773  04A7                     l6109:	
  2774  04A7  1683               	bsf	status, 5	;RP0=1, select bank1
  2775  04A8  1303               	bcf	status, 6	;RP1=0, select bank1
  2776  04A9  1405               	bsf	(1064/8)^080h,(1064)&7
  2777  04AA  2CCC               	goto	l6123
  2778                           	line	258
  2779                           	
  2780  04AB                     l1564:	
  2781                           	
  2782  04AB                     l6111:	
  2783                           ;newmain.c: 258: else if (ADC_Channel == 1) TRISA1 = 1;
  2784  04AB  0870               	movf	(InitialiseADC@ADC_Channel),w
  2785  04AC  3A01               	xorlw	01h
  2786  04AD  1D03               	skipz
  2787  04AE  2CB0               	goto	u2521
  2788  04AF  2CB1               	goto	u2520
  2789  04B0                     u2521:
  2790  04B0  2CB5               	goto	l6115
  2791  04B1                     u2520:
  2792                           	
  2793  04B1                     l6113:	
  2794  04B1  1683               	bsf	status, 5	;RP0=1, select bank1
  2795  04B2  1303               	bcf	status, 6	;RP1=0, select bank1
  2796  04B3  1485               	bsf	(1065/8)^080h,(1065)&7
  2797  04B4  2CCC               	goto	l6123
  2798                           	line	259
  2799                           	
  2800  04B5                     l1566:	
  2801                           	
  2802  04B5                     l6115:	
  2803                           ;newmain.c: 259: else if (ADC_Channel == 2) TRISA2 = 1;
  2804  04B5  0870               	movf	(InitialiseADC@ADC_Channel),w
  2805  04B6  3A02               	xorlw	02h
  2806  04B7  1D03               	skipz
  2807  04B8  2CBA               	goto	u2531
  2808  04B9  2CBB               	goto	u2530
  2809  04BA                     u2531:
  2810  04BA  2CBF               	goto	l6119
  2811  04BB                     u2530:
  2812                           	
  2813  04BB                     l6117:	
  2814  04BB  1683               	bsf	status, 5	;RP0=1, select bank1
  2815  04BC  1303               	bcf	status, 6	;RP1=0, select bank1
  2816  04BD  1505               	bsf	(1066/8)^080h,(1066)&7
  2817  04BE  2CCC               	goto	l6123
  2818                           	line	260
  2819                           	
  2820  04BF                     l1568:	
  2821                           	
  2822  04BF                     l6119:	
  2823                           ;newmain.c: 260: else if (ADC_Channel == 3) TRISA3 = 1;
  2824  04BF  0870               	movf	(InitialiseADC@ADC_Channel),w
  2825  04C0  3A03               	xorlw	03h
  2826  04C1  1D03               	skipz
  2827  04C2  2CC4               	goto	u2541
  2828  04C3  2CC5               	goto	u2540
  2829  04C4                     u2541:
  2830  04C4  2CCC               	goto	l6123
  2831  04C5                     u2540:
  2832                           	
  2833  04C5                     l6121:	
  2834  04C5  1683               	bsf	status, 5	;RP0=1, select bank1
  2835  04C6  1303               	bcf	status, 6	;RP1=0, select bank1
  2836  04C7  1585               	bsf	(1067/8)^080h,(1067)&7
  2837  04C8  2CCC               	goto	l6123
  2838                           	
  2839  04C9                     l1570:	
  2840  04C9  2CCC               	goto	l6123
  2841                           	line	268
  2842                           	
  2843  04CA                     l1569:	
  2844  04CA  2CCC               	goto	l6123
  2845                           	
  2846  04CB                     l1567:	
  2847  04CB  2CCC               	goto	l6123
  2848                           	
  2849  04CC                     l1565:	
  2850                           	
  2851  04CC                     l6123:	
  2852                           ;newmain.c: 268: ADCON1 = 0b10000100;
  2853  04CC  3084               	movlw	(084h)
  2854  04CD  1683               	bsf	status, 5	;RP0=1, select bank1
  2855  04CE  1303               	bcf	status, 6	;RP1=0, select bank1
  2856  04CF  009F               	movwf	(159)^080h	;volatile
  2857                           	line	269
  2858                           	
  2859  04D0                     l1571:	
  2860  04D0  0008               	return
  2861                           	opt stack 0
  2862                           GLOBAL	__end_of_InitialiseADC
  2863  04D1                     	__end_of_InitialiseADC:
  2864 ;; =============== function _InitialiseADC ends ============
  2865                           
  2866                           	signat	_InitialiseADC,4216
  2867                           	global	_controlMotor
  2868                           psect	text432,local,class=CODE,delta=2
  2869                           global __ptext432
  2870  0409                     __ptext432:
  2871                           
  2872 ;; *************** function _controlMotor *****************
  2873 ;; Defined at:
  2874 ;;		line 76 in file "newmain.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  Leftpt          2    0[COMMON] int 
  2877 ;;  Rightpt         2    2[COMMON] int 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;		None               void
  2882 ;; Registers used:
  2883 ;;		wreg
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2889 ;;      Params:         4       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0
  2892 ;;      Totals:         4       0       0       0       0
  2893 ;;Total ram usage:        4 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_searchTrack
  2899 ;;		_main
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           psect	text432
  2903                           	file	"newmain.c"
  2904                           	line	76
  2905                           	global	__size_of_controlMotor
  2906  0022                     	__size_of_controlMotor	equ	__end_of_controlMotor-_controlMotor
  2907                           	
  2908  0409                     _controlMotor:	
  2909                           	opt	stack 7
  2910                           ; Regs used in _controlMotor: [wreg]
  2911                           	line	77
  2912                           	
  2913  0409                     l6079:	
  2914                           ;newmain.c: 77: if (Leftpt == 1)
  2915  0409  3001               	movlw	01h
  2916  040A  0670               	xorwf	(controlMotor@Leftpt),w
  2917  040B  0471               	iorwf	(controlMotor@Leftpt+1),w
  2918  040C  1D03               	skipz
  2919  040D  2C0F               	goto	u2491
  2920  040E  2C10               	goto	u2490
  2921  040F                     u2491:
  2922  040F  2C14               	goto	l1523
  2923  0410                     u2490:
  2924                           	line	80
  2925                           	
  2926  0410                     l6081:	
  2927                           ;newmain.c: 78: {
  2928                           ;newmain.c: 80: RC1 = 1;
  2929  0410  1283               	bcf	status, 5	;RP0=0, select bank0
  2930  0411  1303               	bcf	status, 6	;RP1=0, select bank0
  2931  0412  1487               	bsf	(57/8),(57)&7
  2932                           	line	81
  2933                           ;newmain.c: 81: }
  2934  0413  2C1B               	goto	l1524
  2935                           	line	82
  2936                           	
  2937  0414                     l1523:	
  2938                           	line	85
  2939                           ;newmain.c: 82: else
  2940                           ;newmain.c: 83: {
  2941                           ;newmain.c: 85: RC1 = 0;
  2942  0414  1283               	bcf	status, 5	;RP0=0, select bank0
  2943  0415  1303               	bcf	status, 6	;RP1=0, select bank0
  2944  0416  1087               	bcf	(57/8),(57)&7
  2945                           	line	86
  2946                           	
  2947  0417                     l6083:	
  2948                           ;newmain.c: 86: lastMotor = 2;
  2949  0417  3002               	movlw	low(02h)
  2950  0418  00C2               	movwf	(_lastMotor)
  2951  0419  3000               	movlw	high(02h)
  2952  041A  00C3               	movwf	((_lastMotor))+1
  2953                           	line	87
  2954                           	
  2955  041B                     l1524:	
  2956                           	line	90
  2957                           ;newmain.c: 87: }
  2958                           ;newmain.c: 90: if (Rightpt == 1)
  2959  041B  3001               	movlw	01h
  2960  041C  0672               	xorwf	(controlMotor@Rightpt),w
  2961  041D  0473               	iorwf	(controlMotor@Rightpt+1),w
  2962  041E  1D03               	skipz
  2963  041F  2C21               	goto	u2501
  2964  0420  2C22               	goto	u2500
  2965  0421                     u2501:
  2966  0421  2C24               	goto	l1525
  2967  0422                     u2500:
  2968                           	line	93
  2969                           	
  2970  0422                     l6085:	
  2971                           ;newmain.c: 91: {
  2972                           ;newmain.c: 93: RA0 = 1;
  2973  0422  1405               	bsf	(40/8),(40)&7
  2974                           	line	94
  2975                           ;newmain.c: 94: }
  2976  0423  2C2A               	goto	l1527
  2977                           	line	95
  2978                           	
  2979  0424                     l1525:	
  2980                           	line	98
  2981                           ;newmain.c: 95: else
  2982                           ;newmain.c: 96: {
  2983                           ;newmain.c: 98: RA0 = 0;
  2984  0424  1005               	bcf	(40/8),(40)&7
  2985                           	line	99
  2986                           	
  2987  0425                     l6087:	
  2988                           ;newmain.c: 99: lastMotor = 1;
  2989  0425  3001               	movlw	low(01h)
  2990  0426  00C2               	movwf	(_lastMotor)
  2991  0427  3000               	movlw	high(01h)
  2992  0428  00C3               	movwf	((_lastMotor))+1
  2993  0429  2C2A               	goto	l1527
  2994                           	line	100
  2995                           	
  2996  042A                     l1526:	
  2997                           	line	101
  2998                           	
  2999  042A                     l1527:	
  3000  042A  0008               	return
  3001                           	opt stack 0
  3002                           GLOBAL	__end_of_controlMotor
  3003  042B                     	__end_of_controlMotor:
  3004 ;; =============== function _controlMotor ends ============
  3005                           
  3006                           	signat	_controlMotor,8312
  3007                           	global	__delay_ms
  3008                           psect	text433,local,class=CODE,delta=2
  3009                           global __ptext433
  3010  044F                     __ptext433:
  3011                           
  3012 ;; *************** function __delay_ms *****************
  3013 ;; Defined at:
  3014 ;;		line 48 in file "newmain.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;  ms              2    0[COMMON] unsigned int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  us              1    4[COMMON] unsigned char 
  3019 ;;  i               1    3[COMMON] unsigned char 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;		None               void
  3022 ;; Registers used:
  3023 ;;		wreg, status,2, status,0
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3029 ;;      Params:         2       0       0       0       0
  3030 ;;      Locals:         2       0       0       0       0
  3031 ;;      Temps:          1       0       0       0       0
  3032 ;;      Totals:         5       0       0       0       0
  3033 ;;Total ram usage:        5 bytes
  3034 ;; Hardware stack levels used:    1
  3035 ;; This function calls:
  3036 ;;		Nothing
  3037 ;; This function is called by:
  3038 ;;		_doDelay
  3039 ;;		_controlBuzzer
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           psect	text433
  3043                           	file	"newmain.c"
  3044                           	line	48
  3045                           	global	__size_of__delay_ms
  3046  0026                     	__size_of__delay_ms	equ	__end_of__delay_ms-__delay_ms
  3047                           	
  3048  044F                     __delay_ms:	
  3049                           	opt	stack 6
  3050                           ; Regs used in __delay_ms: [wreg+status,2+status,0]
  3051                           	line	50
  3052                           ;newmain.c: 49: unsigned char i;
  3053                           ;newmain.c: 50: do
  3054                           	
  3055  044F                     l1513:	
  3056                           	line	52
  3057                           	
  3058  044F                     l6071:	
  3059                           ;newmain.c: 51: {
  3060                           ;newmain.c: 52: i = 4;
  3061  044F  3004               	movlw	(04h)
  3062  0450  00F2               	movwf	(??__delay_ms+0)+0
  3063  0451  0872               	movf	(??__delay_ms+0)+0,w
  3064  0452  00F3               	movwf	(__delay_ms@i)
  3065                           	line	53
  3066                           ;newmain.c: 53: do
  3067                           	
  3068  0453                     l1514:	
  3069                           	line	55
  3070                           ;newmain.c: 54: {
  3071                           ;newmain.c: 55: { unsigned char us; us = (250)/(12000000/8000000L)|1; while(--us != 0) c
                                 ontinue; };
  3072  0453  30FB               	movlw	(0FBh)
  3073  0454  00F2               	movwf	(??__delay_ms+0)+0
  3074  0455  0872               	movf	(??__delay_ms+0)+0,w
  3075  0456  00F4               	movwf	(__delay_ms@us)
  3076  0457  2C59               	goto	l6073
  3077                           	
  3078  0458                     l1516:	
  3079  0458  2C59               	goto	l6073
  3080                           	
  3081  0459                     l1515:	
  3082                           	
  3083  0459                     l6073:	
  3084  0459  3001               	movlw	low(01h)
  3085  045A  02F4               	subwf	(__delay_ms@us),f
  3086  045B  1D03               	btfss	status,2
  3087  045C  2C5E               	goto	u2461
  3088  045D  2C5F               	goto	u2460
  3089  045E                     u2461:
  3090  045E  2C59               	goto	l6073
  3091  045F                     u2460:
  3092  045F  2C60               	goto	l6075
  3093                           	
  3094  0460                     l1517:	
  3095                           	line	56
  3096                           	
  3097  0460                     l6075:	
  3098                           ;newmain.c: 56: } while(--i);
  3099  0460  3001               	movlw	low(01h)
  3100  0461  02F3               	subwf	(__delay_ms@i),f
  3101  0462  1D03               	btfss	status,2
  3102  0463  2C65               	goto	u2471
  3103  0464  2C66               	goto	u2470
  3104  0465                     u2471:
  3105  0465  2C53               	goto	l1514
  3106  0466                     u2470:
  3107  0466  2C67               	goto	l6077
  3108                           	
  3109  0467                     l1518:	
  3110                           	line	57
  3111                           	
  3112  0467                     l6077:	
  3113                           ;newmain.c: 57: } while(--ms);
  3114  0467  3001               	movlw	low(01h)
  3115  0468  02F0               	subwf	(__delay_ms@ms),f
  3116  0469  3000               	movlw	high(01h)
  3117  046A  1C03               	skipc
  3118  046B  03F1               	decf	(__delay_ms@ms+1),f
  3119  046C  02F1               	subwf	(__delay_ms@ms+1),f
  3120  046D  0871               	movf	(((__delay_ms@ms+1))),w
  3121  046E  0470               	iorwf	(((__delay_ms@ms))),w
  3122  046F  1D03               	skipz
  3123  0470  2C72               	goto	u2481
  3124  0471  2C73               	goto	u2480
  3125  0472                     u2481:
  3126  0472  2C4F               	goto	l1513
  3127  0473                     u2480:
  3128  0473  2C74               	goto	l1520
  3129                           	
  3130  0474                     l1519:	
  3131                           	line	58
  3132                           	
  3133  0474                     l1520:	
  3134  0474  0008               	return
  3135                           	opt stack 0
  3136                           GLOBAL	__end_of__delay_ms
  3137  0475                     	__end_of__delay_ms:
  3138 ;; =============== function __delay_ms ends ============
  3139                           
  3140                           	signat	__delay_ms,4216
  3141                           psect	text434,local,class=CODE,delta=2
  3142                           global __ptext434
  3143  0000                     __ptext434:
  3144                           	global	btemp
  3145  007E                     	btemp set 07Eh
  3146                           
  3147                           	DABS	1,126,2	;btemp
  3148                           	global	wtemp0
  3149  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.82 build 9453 
Symbol Table                                                                                   Sat Mar  3 23:37:00 2012

                       pc 0002                        _RD 0C60                        _WR 0C61  
                      fsr 0004                       _GIE 005F                       _RA0 0028  
                     _RA1 0029                       _RA2 002A                       _RA3 002B  
                     _RC1 0039                       _RC3 003B                       _RC4 003C  
                     fsr0 0004                       indf 0000               lcd_goto@pos 0072  
                    l1520 0474                      l1513 044F                      l1514 0453  
                    l1530 04E8                      l1515 0459                      l1523 0414  
                    l1531 0500                      l1516 0458                      l1524 041B  
                    l1532 04FF                      l1517 0460                      l1525 0424  
                    l1533 0500                      l1518 0467                      l1526 042A  
                    l1542 07FF                      l1519 0474                      l1527 042A  
                    l3081 03EE                      l1545 03DB                      l1570 04C9  
                    l3090 03B4                      l1571 04D0                      l1564 04AB  
                    l3084 0441                      l1580 06A0                      l1565 04CC  
                    l3093 03C0                      l3085 0430                      l1581 0720  
                    l1566 04B5                      l1574 051E                      l3078 0408  
                    l3086 044E                      l1582 0734                      l1567 04CB  
                    l1575 051E                      l3087 044E                      l1583 0735  
                    l1568 04BF                      l1576 0523                      l3096 0597  
                    l1584 0736                      l1569 04CA                      l1577 0541  
                    l1585 0736                      l6111 04AB                      l6121 04C5  
                    l6113 04B1                      l6115 04B5                      l6123 04CC  
                    l6107 04A2                      l6131 0514                      l4700 05C4  
                    l6117 04BB                      l6109 04A7                      l6141 053A  
                    l6133 0517                      l6125 0502                      l6221 061B  
                    l4701 05F0                      l4702 0607                      l6071 044F  
                    l6119 04BF                      l6143 0541                      l6135 051A  
                    l6127 0505                      l6231 0640                      l6223 061D  
                    l6215 0608                      l6073 0459                      l6081 0410  
                    l6137 0523                      l6129 0511                      l6241 067D  
                    l6233 0650                      l6225 062A                      l6217 060C  
                    l6075 0460                      l6083 0417                      l6139 052C  
                    l6243 0681                      l6235 065B                      l6227 0632  
                    l6219 0614                      l6067 0604                      l6077 0467  
                    l6085 0422                      l6237 0663                      l6229 0636  
                    l6069 0606                      l6413 04D1                      l6421 03F0  
                    l6501 0591                      l4670 04A0                      l6087 0425  
                    l6079 0409                      l6239 066B                      l6351 05C4  
                    l6415 04DA                      l6431 0406                      l6423 03F4  
                    l6511 07BD                      l6503 0739                      l6361 0602  
                    l6353 05C8                      l6417 04E8                      l6433 0407  
                    l6425 0401                      l6441 04A0                      l6513 07C9  
                    l6505 078A                      l6521 0683                      l6363 0604  
                    l6355 05F0                      l6347 0598                      l6419 04F1  
                    l6427 0402                      l6435 0475                      l6443 03B6  
                    l6451 043C                      l6515 07DB                      l6507 0796  
                    l6531 06A0                      l6523 0689                      l6365 0607  
                    l6357 05F2                      l6349 059C                      l6429 0403  
                    l4669 0485                      l6437 047C                      l6445 03B9  
                    l6453 0441                      l6461 03DF                      l6517 07E7  
                    l6509 07A2                      l6541 0714                      l6533 06AE  
                    l6525 068E                      l4870 061D                      l4871 0631  
                    l6359 05F4                      l6439 0485                      l6447 042C  
                    l6455 03AB                      l6463 03E5                      l6471 054B  
                    l6519 07F9                      l6543 071A                      l6535 06D7  
                    l6527 0693                      _ADIE 0466                      l4872 0648  
                    _ADIF 0066                      l4873 0632                      l4865 061C  
                    l6449 0430                      l6457 03AE                      l6465 03CF  
                    l6481 055F                      l6473 054C                      l6545 0720  
                    l6537 06E5                      l6529 0699                      l4874 064F  
                    l4875 065B                      l4867 0614                      l6459 03DC  
                    l6491 057E                      l6483 0568                      l6475 054F  
                    l6467 0542                      l6539 070E                      l4876 0650  
                    l4868 0682                      l4877 065F                      l4869 062A  
                    l6493 057F                      l6485 056B                      l6477 0550  
                    l6469 054A                      l4878 0669                      l4879 0682  
                    l6495 0580                      l6487 0571                      l6479 055E  
                    l6497 0586                      l6489 0574                      l6499 058C  
                    _ADON 00F8                      STR_1 0009                      u2500 0422  
                    u3300 044D                      u2501 0421                      u3301 044C  
                    u2510 04A7                      u3150 059C                      u3310 0714  
                    u2511 04A6                      u3151 059B                      u3311 0713  
                    u2520 04B1                      u3320 071A                      u2521 04B0  
                    u3161 05B6                      u3321 0719                      u2530 04BB  
                    u3170 05C8                      u3162 05B7                      u2531 04BA  
                    u3171 05C7                      u3163 05BC                      u2460 045F  
                    u2540 04C5                      u3164 05BD                      u3260 04DA  
                    u2461 045E                      u2541 04C4                      u3181 05E2  
                    u3261 04D9                      u2470 0466                      u3190 0602  
                    u3182 05E3                      u3270 04F1                      u2471 0465  
                    u3191 0601                      u3183 05E8                      u3271 04F0  
                    u2480 0473                      u2560 0522                      u3184 05E9  
                    u2481 0472                      u2561 0521                      u3337 0555  
                    u2490 0410                      u2810 060C                      u3290 047C  
                    u2491 040F                      u2555 0508                      u3195 05FE  
                    u3291 047B                      u3347 0564                      u2900 0674  
                    u2820 0613                      u2821 0612                      u3285 03F7  
                    u3357 056E                      u2910 0681                      u3367 0577  
                    u2840 0630                      u2905 0670                      u2841 062F  
                    u3377 03E9                      u2835 0622                      u3387 03F2  
                    u2860 064E                      u2861 064D                      u2855 0641  
                    u2880 065F                      u2881 065E                      u2890 0663  
                    u2891 0662                      u2875 0653                      _WREN 0C62  
                    _main 0683              ___ftpack@arg 0070               main@rightpt 0030  
            ___ftpack@exp 0073                      btemp 007E                      _stop 003C  
                    start 0000    __size_of_InitialiseADC 0030           __end_of_ReadADC 0542  
           ?_controlMotor 0070                     ?_main 0070        controlMotor@Leftpt 0070  
                   _EEADR 010D                     _CARRY 0018           __end_of_doDelay 0800  
            __delay_ms@ms 0070              __delay_ms@us 0074                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089             ___awtoft@sign 002B  
                   _count 0034                     _ticks 0044             ___ftpack@sign 0074  
                   _start 0038                     pclath 000A                     status 0003  
                   wtemp0 007E      __end_of_lcdCountdown 03DC              __end_of_main 0739  
          ??_controlMotor 0074              ?_searchTrack 0070                    ??_main 002C  
           _InitialiseADC 04A1                    _ADCON0 001F                    _ADCON1 009F  
                  _ADRESH 001E                    _ADRESL 009E                    _EEDATA 010C  
                  _EECON1 018C                    _EECON2 018D          __end_of___awtoft 04A1  
        __end_of___ftpack 0683       controlMotor@Rightpt 0072                    _TRISA0 0428  
                  _TRISA1 0429                    _TRISA2 042A                    _TRISA3 042B  
               ??_ReadADC 0072          __end_of_lcd_init 0598          __end_of_lcd_goto 03C1  
        __end_of_lcd_puts 044F                    ___ftge 0598                 ??_doDelay 0075  
                  clrloop 03A3            ?_InitialiseADC 0070                ___ftge@ff1 0078  
              ___ftge@ff2 007B        __size_of__delay_ms 0026                ___awtoft@c 0026  
          __pcstackCOMMON 0070        ReadADC@ADC_Channel 0074        __size_of_lcd_clear 0013  
      __size_of_lcd_putch 000B        __size_of_lcd_write 001A                __pbssBANK0 0034  
    __end_of_controlMotor 042B     __size_of_lcdCountdown 000E          ReadADC@ADC_VALUE 0075  
              __pmaintext 0683                   ?___ftge 0078                 ?___awtoft 0026  
               ?___ftpack 0070           ??_InitialiseADC 0070      __size_of_searchTrack 0030  
       __end_of__delay_ms 0475                   _GO_DONE 00F9              _lcdCountdown 03CE  
               ?_lcd_init 0070                 ?_lcd_goto 0070                 ?_lcd_puts 0070  
                 _ReadADC 0501         __end_of_lcd_clear 03EF           __size_of___ftge 0070  
       __end_of_lcd_putch 03B5         __end_of_lcd_write 0409                   _doDelay 0739  
              ??___awtoft 0029                ??___ftpack 0075                   _clock_t 0040  
              ??_lcd_init 0074                ??_lcd_goto 0072                ??_lcd_puts 0072  
    end_of_initialization 03CA     __size_of_controlMotor 0022                main@leftpt 002E  
              lcd_putch@c 0072                lcd_write@c 0071            __end_of___ftge 0608  
             __delay_ms@i 0073              _controlMotor 0409       start_initialization 03C1  
      lcd_init@init_value 0076                  ??___ftge 0020         __size_of___awtoft 002C  
       __size_of___ftpack 007B             __pcstackBANK0 0020                 __delay_ms 044F  
       __size_of_lcd_init 0056         __size_of_lcd_goto 000C         __size_of_lcd_puts 0024  
                ?_ReadADC 0070                 __ptext420 03CE                 __ptext421 03DC  
               __ptext430 0501                 __ptext422 03AA                 __ptext431 04A1  
               __ptext423 042B                 __ptext432 0409                 __ptext424 03B5  
               __ptext433 044F                 __ptext425 0475                 __ptext417 0000  
               __ptext434 0000                 __ptext426 03EF                 __ptext418 0739  
               __ptext427 04D1                 __ptext419 0542                 __ptext428 0598  
               __ptext429 0608             ??_searchTrack 0074                  ?_doDelay 0070  
               _lcd_clear 03DC                 __pstrings 0003                 _lcd_putch 03AA  
               _lcd_write 03EF     __end_of_InitialiseADC 04D1                 _lastMotor 0042  
              ?__delay_ms 0070                ?_lcd_clear 0070             lcdCountdown@t 0073  
              ?_lcd_putch 0070               __stringbase 0008                ?_lcd_write 0070  
     __end_of_searchTrack 0501                 lcd_puts@s 0073  InitialiseADC@ADC_Channel 0070  
        __size_of_ReadADC 0041          __size_of_doDelay 00C7                  ___awtoft 0475  
                ___ftpack 0608               ??__delay_ms 0072                  _lcd_init 0542  
                _lcd_goto 03B5                  _lcd_puts 042B             __size_of_main 00B6  
                clear_ram 03A2               _searchTrack 04D1               ??_lcd_clear 0072  
                main@read 0032               ??_lcd_putch 0072               ??_lcd_write 0070  
           ?_lcdCountdown 0070                 stringcode 0003            ??_lcdCountdown 0073  
                stringdir 0003                  stringtab 0003  
